"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VestingHelper__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "InvalidReleasePercentage",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidTotalPercentage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "real",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expected",
                type: "uint256",
            },
        ],
        name: "NotEnoughFund",
        type: "error",
    },
    {
        inputs: [],
        name: "OverMaximumReleaseStep",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroReleaseSchedule",
        type: "error",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "durationInHours",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "percentage",
                        type: "uint256",
                    },
                ],
                internalType: "struct IAtomicSwapBase.Release[]",
                name: "releases",
                type: "tuple[]",
            },
        ],
        name: "validateVestingParams",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x610bf5610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806333b988f5146100455780636f2293ab14610061575b600080fd5b61005f600480360381019061005a9190610703565b61008a565b005b81801561006d57600080fd5b50610088600480360381019061008391906107e2565b6101cd565b005b60008151036100c5576040517ffd68e07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b82518110156101515760008382815181106100e7576100e6610849565b5b60200260200101516020015190506000810361012f576040517f2b82b70d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808361013b91906108a7565b9250508080610149906108db565b9150506100c9565b50612710811461018d576040517f0b8ad7f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6096825111156101c9576040517f1531e37f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806101e4576101df8484333086610277565b610271565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102635781341461025e5781346040517f04157bb4000000000000000000000000000000000000000000000000000000008152600401610255929190610932565b60405180910390fd5b610270565b61026f833330856103d2565b5b5b50505050565b6000808673ffffffffffffffffffffffffffffffffffffffff166315dacbea60e01b878787876040516024016102b0949392919061096a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161031a9190610a20565b6000604051808303816000865af19150503d8060008114610357576040519150601f19603f3d011682016040523d82523d6000602084013e61035c565b606091505b509150915081801561038a57506000815114806103895750808060200190518101906103889190610a4c565b5b5b6103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090610ad6565b60405180910390fd5b50505050505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161040693929190610af6565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104549190610a20565b6000604051808303816000865af19150503d8060008114610491576040519150601f19603f3d011682016040523d82523d6000602084013e610496565b606091505b50915091508180156104c457506000815114806104c35750808060200190518101906104c29190610a4c565b5b5b610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fa90610b9f565b60405180910390fd5b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61056d82610524565b810181811067ffffffffffffffff8211171561058c5761058b610535565b5b80604052505050565b600061059f61050b565b90506105ab8282610564565b919050565b600067ffffffffffffffff8211156105cb576105ca610535565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b6105f9816105e6565b811461060457600080fd5b50565b600081359050610616816105f0565b92915050565b600060408284031215610632576106316105e1565b5b61063c6040610595565b9050600061064c84828501610607565b600083015250602061066084828501610607565b60208301525092915050565b600061067f61067a846105b0565b610595565b905080838252602082019050604084028301858111156106a2576106a16105dc565b5b835b818110156106cb57806106b7888261061c565b8452602084019350506040810190506106a4565b5050509392505050565b600082601f8301126106ea576106e961051f565b5b81356106fa84826020860161066c565b91505092915050565b60006020828403121561071957610718610515565b5b600082013567ffffffffffffffff8111156107375761073661051a565b5b610743848285016106d5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b60008115159050919050565b6107bf816107aa565b81146107ca57600080fd5b50565b6000813590506107dc816107b6565b92915050565b600080600080608085870312156107fc576107fb610515565b5b600061080a87828801610795565b945050602061081b87828801610795565b935050604061082c87828801610607565b925050606061083d878288016107cd565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b2826105e6565b91506108bd836105e6565b92508282019050808211156108d5576108d4610878565b5b92915050565b60006108e6826105e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361091857610917610878565b5b600182019050919050565b61092c816105e6565b82525050565b60006040820190506109476000830185610923565b6109546020830184610923565b9392505050565b6109648161076c565b82525050565b600060808201905061097f600083018761095b565b61098c602083018661095b565b610999604083018561095b565b6109a66060830184610923565b95945050505050565b600081519050919050565b600081905092915050565b60005b838110156109e35780820151818401526020810190506109c8565b60008484015250505050565b60006109fa826109af565b610a0481856109ba565b9350610a148185602086016109c5565b80840191505092915050565b6000610a2c82846109ef565b915081905092915050565b600081519050610a46816107b6565b92915050565b600060208284031215610a6257610a61610515565b5b6000610a7084828501610a37565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610ac0600383610a79565b9150610acb82610a8a565b602082019050919050565b60006020820190508181036000830152610aef81610ab3565b9050919050565b6000606082019050610b0b600083018661095b565b610b18602083018561095b565b610b256040830184610923565b949350505050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000610b89603183610a79565b9150610b9482610b2d565b604082019050919050565b60006020820190508181036000830152610bb881610b7c565b905091905056fea2646970667358221220c8f95469d0d85b1f734e057f378077e1f6bc56163a1fdef9c2c0258641ab3f6164736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class VestingHelper__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.VestingHelper__factory = VestingHelper__factory;
VestingHelper__factory.bytecode = _bytecode;
VestingHelper__factory.abi = _abi;
//# sourceMappingURL=VestingHelper__factory.js.map