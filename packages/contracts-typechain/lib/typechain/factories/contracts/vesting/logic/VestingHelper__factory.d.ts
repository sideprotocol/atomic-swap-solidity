import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { VestingHelper, VestingHelperInterface } from "../../../../contracts/vesting/logic/VestingHelper";
type VestingHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class VestingHelper__factory extends ContractFactory {
    constructor(...args: VestingHelperConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<VestingHelper & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): VestingHelper__factory;
    static readonly bytecode = "0x610dd2610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806333b988f5146100455780636f2293ab14610061575b600080fd5b61005f600480360381019061005a919061082e565b61008a565b005b81801561006d57600080fd5b506100886004803603810190610083919061090d565b6101cd565b005b60008151036100c5576040517ffd68e07a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b82518110156101515760008382815181106100e7576100e6610974565b5b60200260200101516020015190506000810361012f576040517f2b82b70d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808361013b91906109d2565b925050808061014990610a06565b9150506100c9565b50612710811461018d576040517f0b8ad7f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6096825111156101c9576040517f1531e37f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61020c6040518060400160405280600a81526020017f6973576974686472617700000000000000000000000000000000000000000000815250826102b6565b806102235761021e8484333086610352565b6102b0565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102a25781341461029d5781346040517f04157bb4000000000000000000000000000000000000000000000000000000008152600401610294929190610a5d565b60405180910390fd5b6102af565b6102ae833330856104ad565b5b5b50505050565b61034e82826040516024016102cc929190610b14565b6040516020818303038152906040527fc3b55635000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105e6565b5050565b6000808673ffffffffffffffffffffffffffffffffffffffff166315dacbea60e01b8787878760405160240161038b9493929190610b53565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103f59190610bdf565b6000604051808303816000865af19150503d8060008114610432576040519150601f19603f3d011682016040523d82523d6000602084013e610437565b606091505b509150915081801561046557506000815114806104645750808060200190518101906104639190610c0b565b5b5b6104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610c84565b60405180910390fd5b50505050505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016104e193929190610ca4565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161052f9190610bdf565b6000604051808303816000865af19150503d806000811461056c576040519150601f19603f3d011682016040523d82523d6000602084013e610571565b606091505b509150915081801561059f575060008151148061059e57508080602001905181019061059d9190610c0b565b5b5b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590610d4d565b60405180910390fd5b505050505050565b6105fd816105f5610600610621565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b61062c819050919050565b610634610d6d565b565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106988261064f565b810181811067ffffffffffffffff821117156106b7576106b6610660565b5b80604052505050565b60006106ca610636565b90506106d6828261068f565b919050565b600067ffffffffffffffff8211156106f6576106f5610660565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b61072481610711565b811461072f57600080fd5b50565b6000813590506107418161071b565b92915050565b60006040828403121561075d5761075c61070c565b5b61076760406106c0565b9050600061077784828501610732565b600083015250602061078b84828501610732565b60208301525092915050565b60006107aa6107a5846106db565b6106c0565b905080838252602082019050604084028301858111156107cd576107cc610707565b5b835b818110156107f657806107e28882610747565b8452602084019350506040810190506107cf565b5050509392505050565b600082601f8301126108155761081461064a565b5b8135610825848260208601610797565b91505092915050565b60006020828403121561084457610843610640565b5b600082013567ffffffffffffffff81111561086257610861610645565b5b61086e84828501610800565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a282610877565b9050919050565b6108b281610897565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b60008115159050919050565b6108ea816108d5565b81146108f557600080fd5b50565b600081359050610907816108e1565b92915050565b6000806000806080858703121561092757610926610640565b5b6000610935878288016108c0565b9450506020610946878288016108c0565b935050604061095787828801610732565b9250506060610968878288016108f8565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109dd82610711565b91506109e883610711565b9250828201905080821115610a00576109ff6109a3565b5b92915050565b6000610a1182610711565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a4357610a426109a3565b5b600182019050919050565b610a5781610711565b82525050565b6000604082019050610a726000830185610a4e565b610a7f6020830184610a4e565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac0578082015181840152602081019050610aa5565b60008484015250505050565b6000610ad782610a86565b610ae18185610a91565b9350610af1818560208601610aa2565b610afa8161064f565b840191505092915050565b610b0e816108d5565b82525050565b60006040820190508181036000830152610b2e8185610acc565b9050610b3d6020830184610b05565b9392505050565b610b4d81610897565b82525050565b6000608082019050610b686000830187610b44565b610b756020830186610b44565b610b826040830185610b44565b610b8f6060830184610a4e565b95945050505050565b600081519050919050565b600081905092915050565b6000610bb982610b98565b610bc38185610ba3565b9350610bd3818560208601610aa2565b80840191505092915050565b6000610beb8284610bae565b915081905092915050565b600081519050610c05816108e1565b92915050565b600060208284031215610c2157610c20610640565b5b6000610c2f84828501610bf6565b91505092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610c6e600383610a91565b9150610c7982610c38565b602082019050919050565b60006020820190508181036000830152610c9d81610c61565b9050919050565b6000606082019050610cb96000830186610b44565b610cc66020830185610b44565b610cd36040830184610a4e565b949350505050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000610d37603183610a91565b9150610d4282610cdb565b604082019050919050565b60006020820190508181036000830152610d6681610d2a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220c2cfae15d1852d38bd1915839dfba63d99ae349467bfc160f211f01a09527e1064736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "InvalidReleasePercentage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTotalPercentage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "real";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "NotEnoughFund";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OverMaximumReleaseStep";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZeroReleaseSchedule";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "durationInHours";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "percentage";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Release[]";
            readonly name: "releases";
            readonly type: "tuple[]";
        }];
        readonly name: "validateVestingParams";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): VestingHelperInterface;
    static connect(address: string, runner?: ContractRunner | null): VestingHelper;
}
export {};
