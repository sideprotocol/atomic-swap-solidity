"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnteHandler__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "InvalidAddress",
        type: "error",
    },
];
const _bytecode = "0x610ba4610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806306cf228014610045578063baa21b8c1461006e575b600080fd5b81801561005157600080fd5b5061006c6004803603810190610067919061067b565b610097565b005b81801561007a57600080fd5b506100956004803603810190610090919061067b565b610128565b005b60008284866100a69190610737565b6100b091906107a8565b9050600081866100c091906107d9565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610111576101018888836101bb565b61010c8884846101bb565b61011e565b61011d878483856102f1565b5b5050505050505050565b60008284866101379190610737565b61014191906107a8565b90506000818661015191906107d9565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146101a457610193883389846103a9565b61019f883385856103a9565b6101b1565b6101b0878483856102f1565b5b5050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016101ed92919061082b565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161023b91906108c5565b6000604051808303816000865af19150503d8060008114610278576040519150601f19603f3d011682016040523d82523d6000602084013e61027d565b606091505b50915091508180156102ab57506000815114806102aa5750808060200190518101906102a99190610914565b5b5b6102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e1906109c4565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806103585750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b1561038f576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039984836104e2565b6103a383826104e2565b50505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016103dd939291906109e4565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161042b91906108c5565b6000604051808303816000865af19150503d8060008114610468576040519150601f19603f3d011682016040523d82523d6000602084013e61046d565b606091505b509150915081801561049b575060008151148061049a5750808060200190518101906104999190610914565b5b5b6104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610a8d565b60405180910390fd5b505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81111561051757610516610aad565b5b6040519080825280601f01601f1916602001820160405280156105495781602001600182028036833780820191505090505b5060405161055791906108c5565b60006040518083038185875af1925050503d8060008114610594576040519150601f19603f3d011682016040523d82523d6000602084013e610599565b606091505b50509050806105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490610b4e565b60405180910390fd5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610612826105e7565b9050919050565b61062281610607565b811461062d57600080fd5b50565b60008135905061063f81610619565b92915050565b6000819050919050565b61065881610645565b811461066357600080fd5b50565b6000813590506106758161064f565b92915050565b60008060008060008060c08789031215610698576106976105e2565b5b60006106a689828a01610630565b96505060206106b789828a01610630565b95505060406106c889828a01610666565b94505060606106d989828a01610666565b93505060806106ea89828a01610666565b92505060a06106fb89828a01610630565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061074282610645565b915061074d83610645565b925082820261075b81610645565b9150828204841483151761077257610771610708565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107b382610645565b91506107be83610645565b9250826107ce576107cd610779565b5b828204905092915050565b60006107e482610645565b91506107ef83610645565b925082820390508181111561080757610806610708565b5b92915050565b61081681610607565b82525050565b61082581610645565b82525050565b6000604082019050610840600083018561080d565b61084d602083018461081c565b9392505050565b600081519050919050565b600081905092915050565b60005b8381101561088857808201518184015260208101905061086d565b60008484015250505050565b600061089f82610854565b6108a9818561085f565b93506108b981856020860161086a565b80840191505092915050565b60006108d18284610894565b915081905092915050565b60008115159050919050565b6108f1816108dc565b81146108fc57600080fd5b50565b60008151905061090e816108e8565b92915050565b60006020828403121561092a576109296105e2565b5b6000610938848285016108ff565b91505092915050565b600082825260208201905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b60006109ae602d83610941565b91506109b982610952565b604082019050919050565b600060208201905081810360008301526109dd816109a1565b9050919050565b60006060820190506109f9600083018661080d565b610a06602083018561080d565b610a13604083018461081c565b949350505050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000610a77603183610941565b9150610a8282610a1b565b604082019050919050565b60006020820190508181036000830152610aa681610a6a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b6000610b38603483610941565b9150610b4382610adc565b604082019050919050565b60006020820190508181036000830152610b6781610b2b565b905091905056fea2646970667358221220973275056b22fb1da03b3c39b4fdb0b1c9262dffb85001dcccecb9a7adaacbf764736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class AnteHandler__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AnteHandler__factory = AnteHandler__factory;
AnteHandler__factory.bytecode = _bytecode;
AnteHandler__factory.abi = _abi;
//# sourceMappingURL=AnteHandler__factory.js.map