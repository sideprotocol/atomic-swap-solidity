"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AtomicSwapMsgValidator__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "contractAddress",
                type: "address",
            },
        ],
        name: "InvalidContractAddress",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "provided",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maximum",
                type: "uint256",
            },
        ],
        name: "InvalidExpirationTime",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidMinimumBidLimit",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "current",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiredTime",
                type: "uint256",
            },
        ],
        name: "OrderAlreadyExpired",
        type: "error",
    },
    {
        inputs: [],
        name: "UnauthorizedCancelAction",
        type: "error",
    },
    {
        inputs: [],
        name: "UnauthorizedSender",
        type: "error",
    },
    {
        inputs: [],
        name: "UnauthorizedTakeAction",
        type: "error",
    },
    {
        inputs: [],
        name: "UnsupportedTokenPair",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_addr",
                type: "address",
            },
        ],
        name: "isContract",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "uuid",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "token",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IAtomicSwapBase.Coin",
                        name: "sellToken",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "token",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IAtomicSwapBase.Coin",
                        name: "buyToken",
                        type: "tuple",
                    },
                    {
                        internalType: "address",
                        name: "maker",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "desiredTaker",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "minBidAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expireAt",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "acceptBid",
                        type: "bool",
                    },
                ],
                internalType: "struct IAtomicSwapBase.MakeSwapMsg",
                name: "makeswap",
                type: "tuple",
            },
        ],
        name: "validateMakeSwapParams",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x610ad8610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063162790551461005b57806362e454f71461008b5780639a0ebe00146100a7578063c3aee15d146100c3575b600080fd5b61007560048036038101906100709190610677565b6100df565b60405161008291906106bf565b60405180910390f35b6100a560048036038101906100a09190610827565b6100f8565b005b6100c160048036038101906100bc91906109e5565b61029d565b005b6100dd60048036038101906100d89190610a13565b61057e565b005b600080823b905060008163ffffffff1611915050919050565b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1603610162576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561021357503373ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561024a576040517fbe544a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4282600b01541015610299574282600b01546040517f0fe77d7d000000000000000000000000000000000000000000000000000000008152600401610290929190610a4f565b60405180910390fd5b5050565b80604001516000015173ffffffffffffffffffffffffffffffffffffffff1681602001516000015173ffffffffffffffffffffffffffffffffffffffff1603610312576040517f45b3a4c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1681602001516000015173ffffffffffffffffffffffffffffffffffffffff161415801561036557506103638160200151600001516100df565b155b156103af578060200151600001516040517f19bb40290000000000000000000000000000000000000000000000000000000081526004016103a69190610a87565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1681604001516000015173ffffffffffffffffffffffffffffffffffffffff161415801561040257506104008160400151600001516100df565b155b1561044c578060400151600001516040517f19bb40290000000000000000000000000000000000000000000000000000000081526004016104439190610a87565b60405180910390fd5b60008160a001511161048a576040517f5fe07c7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104f55750806060015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561052c576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428160c00151101561057b578060c00151426040517ff00605cf000000000000000000000000000000000000000000000000000000008152600401610572929190610a4f565b60405180910390fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff168160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610607576040517f978f045600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064482610619565b9050919050565b61065481610639565b811461065f57600080fd5b50565b6000813590506106718161064b565b92915050565b60006020828403121561068d5761068c610614565b5b600061069b84828501610662565b91505092915050565b60008115159050919050565b6106b9816106a4565b82525050565b60006020820190506106d460008301846106b0565b92915050565b6000819050919050565b6106ed816106da565b81146106f857600080fd5b50565b60008135905061070a816106e4565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61075e82610715565b810181811067ffffffffffffffff8211171561077d5761077c610726565b5b80604052505050565b600061079061060a565b905061079c8282610755565b919050565b6000819050919050565b6107b4816107a1565b81146107bf57600080fd5b50565b6000813590506107d1816107ab565b92915050565b6000604082840312156107ed576107ec610710565b5b6107f76040610786565b90506000610807848285016107c2565b600083015250602061081b84828501610662565b60208301525092915050565b6000806060838503121561083e5761083d610614565b5b600061084c858286016106fb565b925050602061085d858286016107d7565b9150509250929050565b6000819050919050565b61087a81610867565b811461088557600080fd5b50565b60008135905061089781610871565b92915050565b6000604082840312156108b3576108b2610710565b5b6108bd6040610786565b905060006108cd84828501610662565b60008301525060206108e184828501610888565b60208301525092915050565b6108f6816106a4565b811461090157600080fd5b50565b600081359050610913816108ed565b92915050565b600061014082840312156109305761092f610710565b5b61093b610100610786565b9050600061094b848285016107c2565b600083015250602061095f8482850161089d565b60208301525060606109738482850161089d565b60408301525060a061098784828501610662565b60608301525060c061099b84828501610662565b60808301525060e06109af84828501610888565b60a0830152506101006109c484828501610888565b60c0830152506101206109d984828501610904565b60e08301525092915050565b600061014082840312156109fc576109fb610614565b5b6000610a0a84828501610919565b91505092915050565b600060208284031215610a2957610a28610614565b5b6000610a37848285016106fb565b91505092915050565b610a4981610867565b82525050565b6000604082019050610a646000830185610a40565b610a716020830184610a40565b9392505050565b610a8181610639565b82525050565b6000602082019050610a9c6000830184610a78565b9291505056fea2646970667358221220ed625e098d0a1183836cb8c68aa5d14248f8c588559fb0ab81235c1bfefeda8c64736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class AtomicSwapMsgValidator__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AtomicSwapMsgValidator__factory = AtomicSwapMsgValidator__factory;
AtomicSwapMsgValidator__factory.bytecode = _bytecode;
AtomicSwapMsgValidator__factory.abi = _abi;
//# sourceMappingURL=AtomicSwapMsgValidator__factory.js.map