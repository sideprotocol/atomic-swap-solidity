{"id":"2d4c7b0c862cedc06ded48937c43e9c7","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@uniswap/lib/contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.6.0;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeApprove: approve failed'\n        );\n    }\n\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeTransfer: transfer failed'\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::transferFrom: transferFrom failed'\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\n    }\n}\n"},"contracts/abstracts/interfaces/IAtomicSwapBase.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n/// @title IAtomicSwapBase\n/// @notice Interface for defining the basic structures and functionalities required for atomic swap operations.\n/// @dev This interface includes enums, structs, events, and custom errors essential for implementing atomic swaps.\ninterface IAtomicSwapBase {\n    \n    /// @notice Struct representing a cryptocurrency or token with its address and amount.\n    /// @dev Address should be set to the zero address for Ether transactions.\n    struct Coin {\n        address token; // The address of the token, or the zero address for Ether.\n        uint256 amount; // The amount of the token or Ether.\n    }\n\n    /// @notice Enum defining the possible states of an atomic swap order.\n    /// @dev These states help track the lifecycle of a swap order.\n    enum OrderStatus {\n        INITIAL, // The initial state of the order upon creation.\n        CANCEL, // The state after the order has been canceled.\n        COMPLETE, // The state when the order has been successfully executed.\n        SYNC // An additional state used for synchronization purposes.\n    }\n\n    /// @notice Struct detailing the attributes of an atomic swap order.\n    /// @dev Captures all necessary information about a swap order.\n    struct AtomicSwapOrder {\n        bytes32 id; // Unique identifier for the order.\n        OrderStatus status; // Current status of the order.\n        address maker; // Address of the order creator.\n        Coin sellToken; // Token being sold.\n        address taker; // Address of the user accepting the order, if specified.\n        Coin buyToken; // Token being bought.\n        uint256 minBidAmount; // Minimum bid amount acceptable for the order.\n        uint256 createdAt; // Timestamp of order creation.\n        uint256 canceledAt; // Timestamp of order cancellation.\n        uint256 completedAt; // Timestamp of order completion.\n        uint256 expiredAt; // Timestamp of order expiration.\n        bool acceptBid; // Indicates if the order is open to bids.\n    }\n\n    /// @notice Struct defining the release parameters for token vesting.\n    /// @dev Used to set vesting schedules for token releases.\n    struct Release {\n        uint256 durationInHours; // Duration in hours until the release of a portion of the tokens.\n        uint256 percentage; // Percentage of total tokens to be released.\n    }\n\n    /// @notice Struct representing a signature for permits in the context of atomic swaps.\n    /// @dev Used for securely authorizing operations in atomic swaps.\n    struct PermitSignature {\n        uint8 v; // Recovery byte of the signature.\n        bytes32 r; // First 32 bytes of the signature.\n        bytes32 s; // Second 32 bytes of the signature.\n        address owner; // The owner of the signature.\n        uint256 deadline; // Deadline until which the signature is valid.\n    }\n\n    /// @notice Struct for defining fee parameters in a swap.\n    /// @dev Includes fees for both seller and buyer, and the maximum scale for fee rates.\n    struct FeeParams {\n        uint256 sellerFeeRate; // Fee rate for the seller.\n        uint256 buyerFeeRate; // Fee rate for the buyer.\n        uint256 maxFeeRateScale; // Maximum scale factor for calculating fees.\n        address treasury; // Address of the treasury where fees are deposited.\n    }\n\n    /// @notice Struct for a message used in swap operations that require permits.\n    /// @dev Includes all necessary details for executing a swap with permit authorization.\n    struct SwapWithPermitMsg {\n        bytes32 uuid; // Unique identifier, usually provided by the frontend.\n        Coin sellToken; // Details of the token to sell.\n        Coin buyToken; // Details of the token to buy.\n        address desiredTaker; // Specific address of the desired taker, if applicable.\n        uint256 minBidAmount; // Minimum amount for bids on this swap.\n        bool acceptBid; // Flag indicating if bids are accepted.\n        bool completeByBid; // Flag indicating if order is completed by bid mode.\n        bool withdrawToSellerAccount; // Flag for direct withdrawal to seller's account.\n        bool withdrawToBuyerAccount; // Flag for direct withdrawal to buyer's account.\n        Release[] releases; // Releases data for vesting mode.\n        PermitSignature sellerSignature; // Seller's signature for permit authorization.\n        PermitSignature buyerSignature; // Buyer's signature for permit authorization.\n    }\n\n    // Custom errors for specific revert conditions in atomic swap operations.\n    error OrderAlreadyExists();\n    error OrderAlreadyExpired(uint256 current, uint256 expiredTime);\n    error UnsupportedTokenPair();\n    error InvalidSigners();\n    error UnauthorizedSender();\n    error InvalidMinBidAmount(uint256 amount);\n    error InvalidExpirationTime(uint256 provided, uint256 maximum);\n    error NotEnoughFund(uint256 real, uint256 expected);\n    error DuplicateReleaseSchedule();\n    error ZeroReleaseSchedule();\n    error InvalidReleasePercentage();\n    error InvalidTotalPercentage();\n    error OverMaximumReleaseStep();\n    error InvalidAddress();\n    error InvalidSellerFee();\n    error InvalidBuyerFee();\n    error InvalidTreasuryAddress();\n\n    // Events to be emitted for different stages and activities in atomic swaps.\n    event AtomicSwapOrderCreated(bytes32 indexed id);\n    event AtomicSwapOrderTook(bytes32 indexed id,address indexed maker, address indexed taker);\n    event AcceptedBid(bytes32 indexed orderID, address indexed bidder, uint256 indexed amount);\n}\n"},"contracts/abstracts/interfaces/IOwnablePausable.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ninterface IOwnablePausable {\n  /**\n   * @dev Function for checking whether an account has an admin role.\n   * @param _account - account to check.\n   */\n  function isAdmin(address _account) external view returns (bool);\n\n  /**\n   * @dev Function for assigning an admin role to the account.\n   * Can only be called by an account with an admin role.\n   * @param _account - account to assign an admin role to.\n   */\n  function addAdmin(address _account) external;\n\n  /**\n   * @dev Function for removing an admin role from the account.\n   * Can only be called by an account with an admin role.\n   * @param _account - account to remove an admin role from.\n   */\n  function removeAdmin(address _account) external;\n\n  /**\n   * @dev Function for checking whether an account has a pauser role.\n   * @param _account - account to check.\n   */\n  function isPauser(address _account) external view returns (bool);\n\n  /**\n   * @dev Function for adding a pauser role to the account.\n   * Can only be called by an account with an admin role.\n   * @param _account - account to assign a pauser role to.\n   */\n  function addPauser(address _account) external;\n\n  /**\n   * @dev Function for removing a pauser role from the account.\n   * Can only be called by an account with an admin role.\n   * @param _account - account to remove a pauser role from.\n   */\n  function removePauser(address _account) external;\n\n  /**\n   * @dev Function for pausing the contract.\n   */\n  function pause() external;\n\n  /**\n   * @dev Function for unpausing the contract.\n   */\n  function unpause() external;\n}\n"},"contracts/abstracts/interfaces/IVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\ninterface IVault {\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address token,address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address token,address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address token,address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address token, address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address token, address from, address to, uint256 value) external returns (bool);\n    function deposit(address token, uint256 amount) external payable;\n    function withdraw(address token,address to, uint256 amount) external;\n}"},"contracts/abstracts/OwnablePausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"./interfaces/IOwnablePausable.sol\";\n\n/**\n * @title OwnablePausableUpgradeable\n *\n * @dev Bundles Access Control, Pausable and Upgradeable contracts in one.\n *\n */\nabstract contract OwnablePausableUpgradeable is IOwnablePausable, PausableUpgradeable, AccessControlUpgradeable {\n  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n  uint256 public paginationSize;\n\n  /**\n   * @dev Modifier for checking whether the caller is an admin.\n   */\n  modifier onlyAdmin() {\n    require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"OwnablePausable: access denied\");\n    _;\n  }\n\n  /**\n   * @dev Modifier for checking whether the caller is a pauser.\n   */\n  modifier onlyPauser() {\n    require(hasRole(PAUSER_ROLE, msg.sender), \"OwnablePausable: access denied\");\n    _;\n  }\n\n  // solhint-disable-next-line func-name-mixedcase\n  function __OwnablePausableUpgradeable_init(address _admin) internal initializer {\n    __Context_init_unchained();\n    __AccessControl_init_unchained();\n    __Pausable_init_unchained();\n    __OwnablePausableUpgradeable_init_unchained(_admin);\n    paginationSize = 100;\n  }\n\n  /**\n   * @dev Grants `DEFAULT_ADMIN_ROLE`, `PAUSER_ROLE` to the admin account.\n   */\n  // solhint-disable-next-line func-name-mixedcase\n  function __OwnablePausableUpgradeable_init_unchained(address _admin) internal initializer {\n    _grantRole(DEFAULT_ADMIN_ROLE, _admin);\n    _grantRole(PAUSER_ROLE, _admin);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-isAdmin}.\n   */\n  function isAdmin(address _account) external view override returns (bool) {\n    return hasRole(DEFAULT_ADMIN_ROLE, _account);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-addAdmin}.\n   */\n  function addAdmin(address _account) external override {\n    grantRole(DEFAULT_ADMIN_ROLE, _account);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-removeAdmin}.\n   */\n  function removeAdmin(address _account) external override {\n    revokeRole(DEFAULT_ADMIN_ROLE, _account);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-isPauser}.\n   */\n  function isPauser(address _account) external view override returns (bool) {\n    return hasRole(PAUSER_ROLE, _account);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-addPauser}.\n   */\n  function addPauser(address _account) external override {\n    grantRole(PAUSER_ROLE, _account);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-removePauser}.\n   */\n  function removePauser(address _account) external override {\n    revokeRole(PAUSER_ROLE, _account);\n  }\n\n  /**\n   * @dev See {IOwnablePausable-pause}.\n   */\n  function pause() external override onlyPauser {\n    _pause();\n  }\n\n  /**\n   * @dev See {IOwnablePausable-unpause}.\n   */\n  function unpause() external override onlyPauser {\n    _unpause();\n  }\n\n  function setPaginationSize(uint256 _paginationSize) external onlyAdmin {\n    require(_paginationSize > 0, \"MoriginApp: invalid value!\");\n    paginationSize = _paginationSize;\n  }\n}\n"},"contracts/abstracts/Vault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\nimport {ContextUpgradeable} from \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport {TransferHelper} from \"@uniswap/lib/contracts/libraries/TransferHelper.sol\";\nimport {IVault} from  \"./interfaces/IVault.sol\";\n\nabstract contract Vault is ContextUpgradeable,IVault  {\n    \n    mapping(address account => mapping(address token => uint256 amount)) private _balances;\n    mapping(address account => mapping(address  token => mapping(address spender => uint256))) private _allowances;\n\n    event  VaultApproval(address indexed owner, address indexed spender, uint256 indexed value);\n    event  VaultTransfer(address token, address from, address to, uint256 value);\n      // Event for Deposits\n    event Deposit(address indexed token, address indexed from, uint256 value);\n    // Event for Withdrawals\n    event Withdrawal(address indexed token, address indexed to, uint256 value);\n\n    \n    error VaultInvalidApprover(address approver);\n\n    error VaultInvalidSpender(address spender);\n    error VaultInvalidSender(address sender);\n    error VaultInvalidReceiver(address receiver);\n\n    error VaultInsufficientAllowance(address spender, uint256 currentAllowance, uint256 value);\n    \n    \n    error VaultInsufficientBalance(address token, address from, uint256 fromBalance, uint256 value);\n\n    error VaultInvalidAmount(uint256 amount);\n    error VaultAdditionalEther(uint256 amount);\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address token, address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(token,owner, spender, value, true);\n        return true;\n    }\n\n    \n\n    function _approve(address token, address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert VaultInvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert VaultInvalidSpender(address(0));\n        }\n        _allowances[owner][token][spender] = value;\n        if (emitEvent) {\n            emit VaultApproval(owner, spender, value);\n        }\n    }\n   \n    function balanceOf(address account,address token) public view virtual returns (uint256) {\n        return _balances[account][token];\n    }\n\n     /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address token,address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(token,owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address token, address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(token,from, spender, value);\n        _transfer(token,from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address token,address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][token][spender];\n    }\n\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address token, address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert VaultInvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert VaultInvalidReceiver(address(0));\n        }\n        _update(token,from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address token, address from, address to, uint256 value) internal virtual {\n        uint256 fromBalance = _balances[from][token];\n        if (fromBalance < value) {\n            revert VaultInsufficientBalance(token, from, fromBalance, value);\n        }\n        unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n            _balances[from][token] = fromBalance - value;\n        }\n        unchecked {\n            // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n            _balances[to][token] += value;\n        }\n        emit VaultTransfer(token,from, to, value);\n    }\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address token, address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(token,owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert VaultInsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(token,owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n\n    /**\n     * @dev Allows a user to deposit ERC20 tokens or Ether into the vault.\n     * @param token The address of the ERC20 token contract, or the zero address for Ether.\n     */\n    function deposit(address token, uint256 amount) public payable {\n        if (token != address(0)) {\n            // Deposit is for ERC20 tokens\n            if(msg.value != 0) {\n                revert VaultAdditionalEther(amount);\n            }\n            TransferHelper.safeTransferFrom(token, _msgSender(), address(this), amount);\n        } else {\n            if(msg.value != amount) {\n                revert VaultInvalidAmount(amount);\n            }\n        }\n        \n        // Update the user's balance\n        _balances[_msgSender()][token] += amount;\n        emit Deposit(token, _msgSender(), amount);\n    }\n\n    /**\n     * @dev Allows a user to withdraw ERC20 tokens or Ether from the vault.\n     * @param token The address of the ERC20 token contract, or the zero address for Ether.\n     * @param amount The amount of tokens or Ether to withdraw.\n     */\n    function withdraw(address token,address to, uint256 amount) public {\n        if(amount < 0) {\n            revert VaultInvalidAmount(amount);\n        }\n        uint256 balance = _balances[_msgSender()][token];\n        if(balance < amount) {\n            revert VaultInvalidAmount(amount);\n        }\n\n        // Update the user's balance\n        _balances[_msgSender()][token] -= amount;\n\n        if (token == address(0)) {\n            // Withdrawal is for Ether\n            (bool sent, ) = to.call{value: amount}(\"\");\n            require(sent, \"Vault: Failed to send Ether\");\n        } else {\n            // Withdrawal is for ERC20 tokens\n            TransferHelper.safeTransfer(token, to, amount);\n        } \n        emit Withdrawal(token, to, amount);\n    }\n\n    // Function to receive Ether when 'send' or 'transfer' is used\n    receive() external payable {}\n    // Fallback function to receive Ether when called\n    fallback() external payable {}\n}"},"contracts/vault/interfaces/IVaultPermit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\nimport {IAtomicSwapBase} from \"../../abstracts/interfaces/IAtomicSwapBase.sol\";\ninterface IVaultPermit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address token, \n        address spender,\n        uint256 value,\n        bytes32 agreement,\n        IAtomicSwapBase.PermitSignature calldata signature\n    ) external;\n\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}"},"contracts/vault/VaultPermit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// Importing necessary OpenZeppelin contracts and interfaces for cryptographic functions, data structures, and atomic swap base interfaces.\nimport {EIP712Upgradeable} from \"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {IAtomicSwapBase} from \"../abstracts/interfaces/IAtomicSwapBase.sol\";\nimport {IVaultPermit} from \"./interfaces/IVaultPermit.sol\";\nimport {Vault} from \"../abstracts/Vault.sol\";\nimport {OwnablePausableUpgradeable} from \"../abstracts/OwnablePausableUpgradeable.sol\";\n\n/// @title Vault Permit Contract\n/// @notice This contract handles permits for token transactions within a vault, using EIP-712 typed data signing.\n/// @dev Inherits from Vault, EIP712Upgradeable, IVaultPermit, and OwnablePausableUpgradeable for comprehensive functionality.\ncontract VaultPermit is Vault, EIP712Upgradeable, IVaultPermit, OwnablePausableUpgradeable {\n    // The typehash used for EIP-712 compliant permit signing.\n    bytes32 private constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,bytes32 agreement,uint256 deadline)\");\n\n    // Using EnumerableSet for managing unique agreements.\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n    EnumerableSet.Bytes32Set private _agreements;\n    // Custom errors for specific revert conditions.\n    error VaultExpiredSignature(uint256 deadline);\n    error VaultDuplicatedAgreement(bytes32 agreement);\n    error VaultInvalidSigner(address signer, address owner);\n\n    /// @notice Initializes the vault permit contract with an admin and a name for EIP712 domain.\n    /// @param admin The admin address for the contract.\n    /// @param name The name used for the EIP712 domain, important for permit signing.\n    function initialize(address admin, string memory name) external initializer {\n        __OwnablePausableUpgradeable_init(admin);\n        __EIP712_init(name, \"1\");\n    }\n\n    /// @notice Handles the creation of a permit for token transactions within the vault.\n    /// @param token The address of the token for which the permit is created.\n    /// @param spender The address authorized to spend the tokens.\n    /// @param value The amount of tokens the spender is authorized to use.\n    /// @param agreement A unique identifier for the permit agreement.\n    /// @param signature The digital signature provided by the token owner, confirming the permit.\n    /// @dev Validates the signature, checks for agreement uniqueness, and records the permit.\n    function permit(\n        address token, \n        address spender,\n        uint256 value,\n        bytes32 agreement,\n        IAtomicSwapBase.PermitSignature calldata signature\n    ) public virtual onlyAdmin {\n        if (_agreements.contains(agreement)) {\n            revert VaultDuplicatedAgreement(agreement);\n        }\n        if (block.timestamp > signature.deadline) {\n            revert VaultExpiredSignature(signature.deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, signature.owner, spender, value, agreement, signature.deadline));\n        bytes32 hash = _hashTypedDataV4(structHash);\n        address signer = ECDSA.recover(hash, signature.v, signature.r, signature.s);\n\n        if (signer != signature.owner) {\n            revert VaultInvalidSigner(signer, signature.owner);\n        }\n        _agreements.add(agreement);\n        _approve(token, signature.owner, spender, value, true);\n    }\n\n    /// @notice Returns the domain separator used for EIP-712 typed data signing.\n    /// @return The current domain separator.\n    /// @dev Useful for off-chain services that need to construct and sign EIP-712 typed data.\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }   \n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[654],"ERC165Upgradeable":[1214],"IAccessControl":[1297],"Initializable":[616]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1298,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":655,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1215,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":617,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":654,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1297,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1214,2011,1297,654,616],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nodeType":"YulBlock","src":"2896:62:0","statements":[{"nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1213],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1297_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1297_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1297","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1213,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1264],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1272],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1280],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1288],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1296],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7976:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8015:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7986:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7986:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7986:20:0"},"referencedDeclaration":35,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8019:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8019:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7986:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8059:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8237:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8258:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8251:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8055:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8083:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8097:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8099:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8097:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8112:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8097:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8097:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8131:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8097:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8097:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8173:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8182:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"8155:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8155:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8150:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8216:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8209:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7901:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7921:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7913:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7935:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7927:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7912:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7970:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7970:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7969:6:0"},"scope":362,"src":"7892:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6192:0","usedErrors":[379,382,1224,1227],"usedEvents":[387,1236,1245,1254]}],"src":"108:8175:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[616]},"id":617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":616,"linearizedBaseContracts":[616],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":616,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":616,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$616","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6357:20:1"},"referencedDeclaration":373,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":616,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7826:20:1"},"referencedDeclaration":373,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":616,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":616,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":616,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:1","statements":[{"nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":611,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":376,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":613,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":615,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"8795:20:1"},"referencedDeclaration":373,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":616,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":617,"src":"2349:6560:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[654],"Initializable":[616]},"id":655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":618,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":655,"sourceUnit":617,"src":"126:63:2","symbolAliases":[{"foreign":{"id":619,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"134:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":622,"name":"Initializable","nameLocations":["728:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"728:13:2"},"id":623,"nodeType":"InheritanceSpecifier","src":"728:13:2"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"191:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":654,"linearizedBaseContracts":[654,616],"name":"ContextUpgradeable","nameLocation":"706:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":628,"nodeType":"Block","src":"800:7:2","statements":[]},"id":629,"implemented":true,"kind":"function","modifiers":[{"id":626,"kind":"modifierInvocation","modifierName":{"id":625,"name":"onlyInitializing","nameLocations":["783:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:2"},"nodeType":"ModifierInvocation","src":"783:16:2"}],"name":"__Context_init","nameLocation":"757:14:2","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"771:2:2"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":654,"src":"748:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":634,"nodeType":"Block","src":"875:7:2","statements":[]},"id":635,"implemented":true,"kind":"function","modifiers":[{"id":632,"kind":"modifierInvocation","modifierName":{"id":631,"name":"onlyInitializing","nameLocations":["858:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:2"},"nodeType":"ModifierInvocation","src":"858:16:2"}],"name":"__Context_init_unchained","nameLocation":"822:24:2","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"846:2:2"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"875:0:2"},"scope":654,"src":"813:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"949:34:2","statements":[{"expression":{"expression":{"id":640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:2","memberName":"sender","nodeType":"MemberAccess","src":"966:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":639,"id":642,"nodeType":"Return","src":"959:17:2"}]},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:2","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"906:2:2"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:2"},"scope":654,"src":"887:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"1056:32:2","statements":[{"expression":{"expression":{"id":649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:2","memberName":"data","nodeType":"MemberAccess","src":"1073:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":648,"id":651,"nodeType":"Return","src":"1066:15:2"}]},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":653,"src":"1040:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":646,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:2"},"scope":654,"src":"989:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":655,"src":"688:402:2","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:990:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[654],"Initializable":[616],"PausableUpgradeable":[830]},"id":831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":831,"sourceUnit":655,"src":"128:67:3","symbolAliases":[{"foreign":{"id":657,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"136:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":831,"sourceUnit":617,"src":"196:63:3","symbolAliases":[{"foreign":{"id":659,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"204:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":662,"name":"Initializable","nameLocations":["742:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"742:13:3"},"id":663,"nodeType":"InheritanceSpecifier","src":"742:13:3"},{"baseName":{"id":664,"name":"ContextUpgradeable","nameLocations":["757:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":654,"src":"757:18:3"},"id":665,"nodeType":"InheritanceSpecifier","src":"757:18:3"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"261:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":830,"linearizedBaseContracts":[830,654,616],"name":"PausableUpgradeable","nameLocation":"719:19:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"782:66:3","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":669,"members":[{"constant":false,"id":668,"mutability":"mutable","name":"_paused","nameLocation":"891:7:3","nodeType":"VariableDeclaration","scope":669,"src":"886:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":667,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:3","nodeType":"StructDefinition","scope":830,"src":"853:52:3","visibility":"public"},{"constant":true,"id":672,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:3","nodeType":"VariableDeclaration","scope":830,"src":"1023:117:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:3","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":679,"nodeType":"Block","src":"1227:82:3","statements":[{"AST":{"nodeType":"YulBlock","src":"1246:57:3","statements":[{"nodeType":"YulAssignment","src":"1260:33:3","value":{"name":"PausableStorageLocation","nodeType":"YulIdentifier","src":"1270:23:3"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1260:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":676,"isOffset":false,"isSlot":true,"src":"1260:6:3","suffix":"slot","valueSize":1},{"declaration":672,"isOffset":false,"isSlot":false,"src":"1270:23:3","valueSize":1}],"id":678,"nodeType":"InlineAssembly","src":"1237:66:3"}]},"id":680,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:3","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"1175:2:3"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"$","nameLocation":"1224:1:3","nodeType":"VariableDeclaration","scope":680,"src":"1200:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":675,"nodeType":"UserDefinedTypeName","pathNode":{"id":674,"name":"PausableStorage","nameLocations":["1200:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"1200:15:3"},"referencedDeclaration":669,"src":"1200:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:3"},"scope":830,"src":"1147:162:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"1315:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":685,"name":"Paused","nameLocation":"1399:6:3","nodeType":"EventDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:3","nodeType":"VariableDeclaration","scope":685,"src":"1406:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:3"},"src":"1393:30:3"},{"anonymous":false,"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1429:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":690,"name":"Unpaused","nameLocation":"1510:8:3","nodeType":"EventDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:3","nodeType":"VariableDeclaration","scope":690,"src":"1519:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:3"},"src":"1504:32:3"},{"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"1542:76:3","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":693,"name":"EnforcedPause","nameLocation":"1629:13:3","nodeType":"ErrorDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"1642:2:3"},"src":"1623:22:3"},{"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"1651:80:3","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":696,"name":"ExpectedPause","nameLocation":"1742:13:3","nodeType":"ErrorDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"1755:2:3"},"src":"1736:22:3"},{"body":{"id":705,"nodeType":"Block","src":"1889:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":702,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1899:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"1899:27:3"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1764:67:3","text":" @dev Initializes the contract in unpaused state."},"id":706,"implemented":true,"kind":"function","modifiers":[{"id":700,"kind":"modifierInvocation","modifierName":{"id":699,"name":"onlyInitializing","nameLocations":["1872:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1872:16:3"},"nodeType":"ModifierInvocation","src":"1872:16:3"}],"name":"__Pausable_init","nameLocation":"1845:15:3","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"1860:2:3"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"1889:0:3"},"scope":830,"src":"1836:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"2002:93:3","statements":[{"assignments":[713],"declarations":[{"constant":false,"id":713,"mutability":"mutable","name":"$","nameLocation":"2036:1:3","nodeType":"VariableDeclaration","scope":723,"src":"2012:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":712,"nodeType":"UserDefinedTypeName","pathNode":{"id":711,"name":"PausableStorage","nameLocations":["2012:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"2012:15:3"},"referencedDeclaration":669,"src":"2012:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":716,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":714,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2040:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$669_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:3"},{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":717,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"2071:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:3","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2071:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"nodeType":"ExpressionStatement","src":"2071:17:3"}]},"id":724,"implemented":true,"kind":"function","modifiers":[{"id":709,"kind":"modifierInvocation","modifierName":{"id":708,"name":"onlyInitializing","nameLocations":["1985:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1985:16:3"},"nodeType":"ModifierInvocation","src":"1985:16:3"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"1973:2:3"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"2002:0:3"},"scope":830,"src":"1939:156:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"2306:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":727,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2316:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"2316:19:3"},{"id":730,"nodeType":"PlaceholderStatement","src":"2345:1:3"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"2101:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":732,"name":"whenNotPaused","nameLocation":"2290:13:3","nodeType":"ModifierDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"2303:2:3"},"src":"2281:72:3","virtual":false,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"2553:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2563:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"2563:16:3"},{"id":738,"nodeType":"PlaceholderStatement","src":"2589:1:3"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"2359:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":740,"name":"whenPaused","nameLocation":"2540:10:3","nodeType":"ModifierDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[],"src":"2550:2:3"},"src":"2531:66:3","virtual":false,"visibility":"internal"},{"body":{"id":755,"nodeType":"Block","src":"2745:92:3","statements":[{"assignments":[748],"declarations":[{"constant":false,"id":748,"mutability":"mutable","name":"$","nameLocation":"2779:1:3","nodeType":"VariableDeclaration","scope":755,"src":"2755:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":747,"nodeType":"UserDefinedTypeName","pathNode":{"id":746,"name":"PausableStorage","nameLocations":["2755:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"2755:15:3"},"referencedDeclaration":669,"src":"2755:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":751,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":749,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2783:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$669_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:3"},{"expression":{"expression":{"id":752,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"2821:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:3","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2821:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":745,"id":754,"nodeType":"Return","src":"2814:16:3"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"2603:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":756,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:3","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"2707:2:3"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":756,"src":"2739:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":743,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:3"},"scope":830,"src":"2692:145:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":767,"nodeType":"Block","src":"2956:77:3","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":760,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2970:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"2966:61:3","trueBody":{"id":765,"nodeType":"Block","src":"2980:47:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":762,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3001:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"RevertStatement","src":"2994:22:3"}]}}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"2843:57:3","text":" @dev Throws if the contract is paused."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:3","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"2931:2:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"2956:0:3"},"scope":830,"src":"2905:128:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"3153:78:3","statements":[{"condition":{"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":772,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"3168:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":779,"nodeType":"IfStatement","src":"3163:62:3","trueBody":{"id":778,"nodeType":"Block","src":"3178:47:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":775,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"3199:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"RevertStatement","src":"3192:22:3"}]}}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"3039:61:3","text":" @dev Throws if the contract is not paused."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:3","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"3128:2:3"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"3153:0:3"},"scope":830,"src":"3105:126:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"3415:127:3","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"$","nameLocation":"3449:1:3","nodeType":"VariableDeclaration","scope":804,"src":"3425:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":788,"nodeType":"UserDefinedTypeName","pathNode":{"id":787,"name":"PausableStorage","nameLocations":["3425:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"3425:15:3"},"referencedDeclaration":669,"src":"3425:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":792,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":790,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3453:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$669_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:3"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":793,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"3484:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:3","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3484:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":798,"nodeType":"ExpressionStatement","src":"3484:16:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":800,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3522:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":799,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"3515:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"EmitStatement","src":"3510:25:3"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"3237:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":805,"implemented":true,"kind":"function","modifiers":[{"id":785,"kind":"modifierInvocation","modifierName":{"id":784,"name":"whenNotPaused","nameLocations":["3401:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":732,"src":"3401:13:3"},"nodeType":"ModifierInvocation","src":"3401:13:3"}],"name":"_pause","nameLocation":"3375:6:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"3381:2:3"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"3415:0:3"},"scope":830,"src":"3366:176:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":828,"nodeType":"Block","src":"3722:130:3","statements":[{"assignments":[813],"declarations":[{"constant":false,"id":813,"mutability":"mutable","name":"$","nameLocation":"3756:1:3","nodeType":"VariableDeclaration","scope":828,"src":"3732:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":812,"nodeType":"UserDefinedTypeName","pathNode":{"id":811,"name":"PausableStorage","nameLocations":["3732:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"3732:15:3"},"referencedDeclaration":669,"src":"3732:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":816,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":814,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"3760:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$669_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:3"},{"expression":{"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":817,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"3791:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$669_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:3","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3791:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":822,"nodeType":"ExpressionStatement","src":"3791:17:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":824,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3832:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":823,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3823:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"EmitStatement","src":"3818:27:3"}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"3548:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":829,"implemented":true,"kind":"function","modifiers":[{"id":809,"kind":"modifierInvocation","modifierName":{"id":808,"name":"whenPaused","nameLocations":["3711:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":740,"src":"3711:10:3"},"nodeType":"ModifierInvocation","src":"3711:10:3"}],"name":"_unpause","nameLocation":"3683:8:3","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"3691:2:3"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"3722:0:3"},"scope":830,"src":"3674:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":831,"src":"701:3153:3","usedErrors":[379,382,693,696],"usedEvents":[387,685,690]}],"src":"102:3753:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[1174],"IERC5267":[1322],"Initializable":[616],"MessageHashUtils":[1999]},"id":1175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":2000,"src":"139:97:4","symbolAliases":[{"foreign":{"id":833,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"147:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":1323,"src":"237:73:4","symbolAliases":[{"foreign":{"id":835,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"245:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":838,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":617,"src":"311:66:4","symbolAliases":[{"foreign":{"id":837,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"319:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":840,"name":"Initializable","nameLocations":["1998:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"1998:13:4"},"id":841,"nodeType":"InheritanceSpecifier","src":"1998:13:4"},{"baseName":{"id":842,"name":"IERC5267","nameLocations":["2013:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"2013:8:4"},"id":843,"nodeType":"InheritanceSpecifier","src":"2013:8:4"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"379:1579:4","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":1174,"linearizedBaseContracts":[1174,1322,616],"name":"EIP712Upgradeable","nameLocation":"1977:17:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":848,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2053:9:4","nodeType":"VariableDeclaration","scope":1174,"src":"2028:140:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2083:84:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":845,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2073:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"2175:64:4","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":860,"members":[{"constant":false,"id":852,"mutability":"mutable","name":"_hashedName","nameLocation":"2332:11:4","nodeType":"VariableDeclaration","scope":860,"src":"2324:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2413:14:4","nodeType":"VariableDeclaration","scope":860,"src":"2405:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2405:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"_name","nameLocation":"2445:5:4","nodeType":"VariableDeclaration","scope":860,"src":"2438:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":856,"name":"string","nodeType":"ElementaryTypeName","src":"2438:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"_version","nameLocation":"2467:8:4","nodeType":"VariableDeclaration","scope":860,"src":"2460:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":858,"name":"string","nodeType":"ElementaryTypeName","src":"2460:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2251:13:4","nodeType":"StructDefinition","scope":1174,"src":"2244:238:4","visibility":"public"},{"constant":true,"id":863,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2623:21:4","nodeType":"VariableDeclaration","scope":1174,"src":"2598:115:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2598:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:66:4","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":870,"nodeType":"Block","src":"2796:80:4","statements":[{"AST":{"nodeType":"YulBlock","src":"2815:55:4","statements":[{"nodeType":"YulAssignment","src":"2829:31:4","value":{"name":"EIP712StorageLocation","nodeType":"YulIdentifier","src":"2839:21:4"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2829:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":867,"isOffset":false,"isSlot":true,"src":"2829:6:4","suffix":"slot","valueSize":1},{"declaration":863,"isOffset":false,"isSlot":false,"src":"2839:21:4","valueSize":1}],"id":869,"nodeType":"InlineAssembly","src":"2806:64:4"}]},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2729:17:4","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[],"src":"2746:2:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"$","nameLocation":"2793:1:4","nodeType":"VariableDeclaration","scope":871,"src":"2771:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":866,"nodeType":"UserDefinedTypeName","pathNode":{"id":865,"name":"EIP712Storage","nameLocations":["2771:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"2771:13:4"},"referencedDeclaration":860,"src":"2771:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2770:25:4"},"scope":1174,"src":"2720:156:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":886,"nodeType":"Block","src":"3538:55:4","statements":[{"expression":{"arguments":[{"id":882,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3572:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":883,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"3578:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":881,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3548:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"3548:38:4"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"2882:559:4","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":887,"implemented":true,"kind":"function","modifiers":[{"id":879,"kind":"modifierInvocation","modifierName":{"id":878,"name":"onlyInitializing","nameLocations":["3521:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3521:16:4"},"nodeType":"ModifierInvocation","src":"3521:16:4"}],"name":"__EIP712_init","nameLocation":"3455:13:4","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"name","nameLocation":"3483:4:4","nodeType":"VariableDeclaration","scope":887,"src":"3469:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"3469:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"version","nameLocation":"3503:7:4","nodeType":"VariableDeclaration","scope":887,"src":"3489:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":875,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3468:43:4"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"3538:0:4"},"scope":1174,"src":"3446:147:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":926,"nodeType":"Block","src":"3701:228:4","statements":[{"assignments":[898],"declarations":[{"constant":false,"id":898,"mutability":"mutable","name":"$","nameLocation":"3733:1:4","nodeType":"VariableDeclaration","scope":926,"src":"3711:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":897,"nodeType":"UserDefinedTypeName","pathNode":{"id":896,"name":"EIP712Storage","nameLocations":["3711:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"3711:13:4"},"referencedDeclaration":860,"src":"3711:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":901,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":899,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"3737:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$860_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3711:45:4"},{"expression":{"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":902,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"3766:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3768:5:4","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":857,"src":"3766:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":905,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3776:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3766:14:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":907,"nodeType":"ExpressionStatement","src":"3766:14:4"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":908,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"3790:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3792:8:4","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":859,"src":"3790:10:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":911,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3803:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3790:20:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":913,"nodeType":"ExpressionStatement","src":"3790:20:4"},{"expression":{"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":914,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"3875:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3877:11:4","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":852,"src":"3875:13:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3875:17:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":919,"nodeType":"ExpressionStatement","src":"3875:17:4"},{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":920,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"3902:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3904:14:4","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":855,"src":"3902:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3902:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":925,"nodeType":"ExpressionStatement","src":"3902:20:4"}]},"id":927,"implemented":true,"kind":"function","modifiers":[{"id":894,"kind":"modifierInvocation","modifierName":{"id":893,"name":"onlyInitializing","nameLocations":["3684:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3684:16:4"},"nodeType":"ModifierInvocation","src":"3684:16:4"}],"name":"__EIP712_init_unchained","nameLocation":"3608:23:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"name","nameLocation":"3646:4:4","nodeType":"VariableDeclaration","scope":927,"src":"3632:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":888,"name":"string","nodeType":"ElementaryTypeName","src":"3632:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"version","nameLocation":"3666:7:4","nodeType":"VariableDeclaration","scope":927,"src":"3652:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":890,"name":"string","nodeType":"ElementaryTypeName","src":"3652:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3631:43:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"3701:0:4"},"scope":1174,"src":"3599:330:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":936,"nodeType":"Block","src":"4077:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":933,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"4094:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":932,"id":935,"nodeType":"Return","src":"4087:30:4"}]},"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"3935:75:4","text":" @dev Returns the domain separator for the current chain."},"id":937,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"4024:18:4","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"4042:2:4"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":937,"src":"4068:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4068:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4067:9:4"},"scope":1174,"src":"4015:109:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"4194:127:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":945,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4232:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":946,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"4243:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":948,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4262:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":950,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4284:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:7:4","memberName":"chainid","nodeType":"MemberAccess","src":"4284:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":954,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4307:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1174","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1174","typeString":"contract EIP712Upgradeable"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4299:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"4299:7:4","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":943,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4221:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4225:6:4","memberName":"encode","nodeType":"MemberAccess","src":"4221:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:92:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4211:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:103:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":941,"id":958,"nodeType":"Return","src":"4204:110:4"}]},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4139:21:4","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"4160:2:4"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"4185:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4185:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4184:9:4"},"scope":1174,"src":"4130:191:4","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":975,"nodeType":"Block","src":"5032:90:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":970,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5082:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":972,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5104:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":968,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5049:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$1999_$","typeString":"type(library MessageHashUtils)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:15:4","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":1998,"src":"5049:32:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":967,"id":974,"nodeType":"Return","src":"5042:73:4"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"4327:614:4","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4955:16:4","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"structHash","nameLocation":"4980:10:4","nodeType":"VariableDeclaration","scope":976,"src":"4972:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4972:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4971:20:4"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"5023:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5023:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5022:9:4"},"scope":1174,"src":"4946:176:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1321],"body":{"id":1036,"nodeType":"Block","src":"5501:575:4","statements":[{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"$","nameLocation":"5533:1:4","nodeType":"VariableDeclaration","scope":1036,"src":"5511:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":996,"nodeType":"UserDefinedTypeName","pathNode":{"id":995,"name":"EIP712Storage","nameLocations":["5511:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"5511:13:4"},"referencedDeclaration":860,"src":"5511:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":998,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"5537:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$860_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5511:45:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1002,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"5777:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5779:11:4","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":852,"src":"5777:13:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5794:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5777:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1006,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"5799:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5801:14:4","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":855,"src":"5799:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5819:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5799:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5777:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5822:23:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5769:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5769:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1013,"nodeType":"ExpressionStatement","src":"5769:77:4"},{"expression":{"components":[{"hexValue":"0f","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5878:7:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":1015,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5908:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5908:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1017,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"5935:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1019,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5965:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5971:7:4","memberName":"chainid","nodeType":"MemberAccess","src":"5965:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1023,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6000:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1174","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1174","typeString":"contract EIP712Upgradeable"}],"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5992:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:4","typeDescriptions":{}}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6027:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6019:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:4","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6057:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6043:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6047:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1030,"nodeType":"ArrayTypeName","src":"6047:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6043:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5864:205:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":994,"id":1035,"nodeType":"Return","src":"5857:212:4"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"5128:40:4","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5182:12:4","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[],"src":"5194:2:4"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"fields","nameLocation":"5278:6:4","nodeType":"VariableDeclaration","scope":1037,"src":"5271:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":979,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5271:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"name","nameLocation":"5312:4:4","nodeType":"VariableDeclaration","scope":1037,"src":"5298:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":981,"name":"string","nodeType":"ElementaryTypeName","src":"5298:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"version","nameLocation":"5344:7:4","nodeType":"VariableDeclaration","scope":1037,"src":"5330:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"5330:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"chainId","nameLocation":"5373:7:4","nodeType":"VariableDeclaration","scope":1037,"src":"5365:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"verifyingContract","nameLocation":"5402:17:4","nodeType":"VariableDeclaration","scope":1037,"src":"5394:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"5394:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"salt","nameLocation":"5441:4:4","nodeType":"VariableDeclaration","scope":1037,"src":"5433:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5433:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"extensions","nameLocation":"5476:10:4","nodeType":"VariableDeclaration","scope":1037,"src":"5459:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"5459:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5257:239:4"},"scope":1174,"src":"5173:903:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1052,"nodeType":"Block","src":"6369:86:4","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"$","nameLocation":"6401:1:4","nodeType":"VariableDeclaration","scope":1052,"src":"6379:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1044,"nodeType":"UserDefinedTypeName","pathNode":{"id":1043,"name":"EIP712Storage","nameLocations":["6379:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"6379:13:4"},"referencedDeclaration":860,"src":"6379:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1048,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6405:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$860_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6405:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6379:45:4"},{"expression":{"expression":{"id":1049,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"6441:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6443:5:4","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":857,"src":"6441:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1042,"id":1051,"nodeType":"Return","src":"6434:14:4"}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"6082:213:4","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6309:11:4","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"6320:2:4"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"6354:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1040,"name":"string","nodeType":"ElementaryTypeName","src":"6354:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6353:15:4"},"scope":1174,"src":"6300:155:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1068,"nodeType":"Block","src":"6754:89:4","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"$","nameLocation":"6786:1:4","nodeType":"VariableDeclaration","scope":1068,"src":"6764:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1060,"nodeType":"UserDefinedTypeName","pathNode":{"id":1059,"name":"EIP712Storage","nameLocations":["6764:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"6764:13:4"},"referencedDeclaration":860,"src":"6764:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1064,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1062,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6790:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$860_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6764:45:4"},{"expression":{"expression":{"id":1065,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"6826:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6828:8:4","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":859,"src":"6826:10:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1058,"id":1067,"nodeType":"Return","src":"6819:17:4"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"6461:216:4","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6691:14:4","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"6705:2:4"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"6739:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1056,"name":"string","nodeType":"ElementaryTypeName","src":"6739:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6738:15:4"},"scope":1174,"src":"6682:161:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"7117:628:4","statements":[{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"$","nameLocation":"7149:1:4","nodeType":"VariableDeclaration","scope":1120,"src":"7127:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1076,"nodeType":"UserDefinedTypeName","pathNode":{"id":1075,"name":"EIP712Storage","nameLocations":["7127:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"7127:13:4"},"referencedDeclaration":860,"src":"7127:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1080,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1078,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"7153:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$860_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7127:45:4"},{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"name","nameLocation":"7196:4:4","nodeType":"VariableDeclaration","scope":1120,"src":"7182:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1081,"name":"string","nodeType":"ElementaryTypeName","src":"7182:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1085,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1083,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7203:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7182:34:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1088,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7236:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7230:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"7230:5:4","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7230:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:6:4","memberName":"length","nodeType":"MemberAccess","src":"7230:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7230:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1118,"nodeType":"Block","src":"7314:425:4","statements":[{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"hashedName","nameLocation":"7559:10:4","nodeType":"VariableDeclaration","scope":1118,"src":"7551:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7551:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1105,"initialValue":{"expression":{"id":1103,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"7572:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7574:11:4","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":852,"src":"7572:13:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7551:34:4"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"7603:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7603:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1116,"nodeType":"Block","src":"7676:53:4","statements":[{"expression":{"arguments":[{"hexValue":"","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7711:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1112,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7701:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1074,"id":1115,"nodeType":"Return","src":"7694:20:4"}]},"id":1117,"nodeType":"IfStatement","src":"7599:130:4","trueBody":{"id":1111,"nodeType":"Block","src":"7620:50:4","statements":[{"expression":{"id":1109,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"7645:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1074,"id":1110,"nodeType":"Return","src":"7638:17:4"}]}}]},"id":1119,"nodeType":"IfStatement","src":"7226:513:4","trueBody":{"id":1100,"nodeType":"Block","src":"7254:54:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1096,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7291:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7285:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1094,"name":"bytes","nodeType":"ElementaryTypeName","src":"7285:5:4","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7285:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1093,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7275:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1074,"id":1099,"nodeType":"Return","src":"7268:29:4"}]}}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"6849:204:4","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"7067:15:4","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"7082:2:4"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"7108:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7108:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7107:9:4"},"scope":1174,"src":"7058:687:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1172,"nodeType":"Block","src":"8028:661:4","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"$","nameLocation":"8060:1:4","nodeType":"VariableDeclaration","scope":1172,"src":"8038:23:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1128,"nodeType":"UserDefinedTypeName","pathNode":{"id":1127,"name":"EIP712Storage","nameLocations":["8038:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":860,"src":"8038:13:4"},"referencedDeclaration":860,"src":"8038:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1132,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1130,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"8064:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$860_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8064:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8038:45:4"},{"assignments":[1134],"declarations":[{"constant":false,"id":1134,"mutability":"mutable","name":"version","nameLocation":"8107:7:4","nodeType":"VariableDeclaration","scope":1172,"src":"8093:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1133,"name":"string","nodeType":"ElementaryTypeName","src":"8093:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1137,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1135,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8117:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8093:40:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1140,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"8153:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8147:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1138,"name":"bytes","nodeType":"ElementaryTypeName","src":"8147:5:4","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8162:6:4","memberName":"length","nodeType":"MemberAccess","src":"8147:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8171:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8147:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1170,"nodeType":"Block","src":"8237:446:4","statements":[{"assignments":[1154],"declarations":[{"constant":false,"id":1154,"mutability":"mutable","name":"hashedVersion","nameLocation":"8491:13:4","nodeType":"VariableDeclaration","scope":1170,"src":"8483:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8483:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1157,"initialValue":{"expression":{"id":1155,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"8507:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$860_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8509:14:4","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":855,"src":"8507:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8483:40:4"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"8541:13:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8541:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1168,"nodeType":"Block","src":"8620:53:4","statements":[{"expression":{"arguments":[{"hexValue":"","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8655:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1164,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8645:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8645:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1126,"id":1167,"nodeType":"Return","src":"8638:20:4"}]},"id":1169,"nodeType":"IfStatement","src":"8537:136:4","trueBody":{"id":1163,"nodeType":"Block","src":"8561:53:4","statements":[{"expression":{"id":1161,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"8586:13:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1126,"id":1162,"nodeType":"Return","src":"8579:20:4"}]}}]},"id":1171,"nodeType":"IfStatement","src":"8143:540:4","trueBody":{"id":1152,"nodeType":"Block","src":"8174:57:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1148,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"8211:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"8205:5:4","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1145,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8195:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1126,"id":1151,"nodeType":"Return","src":"8188:32:4"}]}}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"7751:210:4","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7975:18:4","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"7993:2:4"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"8019:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8019:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8018:9:4"},"scope":1174,"src":"7966:723:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1175,"src":"1959:6732:4","usedErrors":[379,382],"usedEvents":[387,1302]}],"src":"113:8579:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1214],"IERC165":[2011],"Initializable":[616]},"id":1215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1176,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":2012,"src":"140:80:5","symbolAliases":[{"foreign":{"id":1177,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":617,"src":"221:66:5","symbolAliases":[{"foreign":{"id":1179,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"229:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1182,"name":"Initializable","nameLocations":["807:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"807:13:5"},"id":1183,"nodeType":"InheritanceSpecifier","src":"807:13:5"},{"baseName":{"id":1184,"name":"IERC165","nameLocations":["822:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2011,"src":"822:7:5"},"id":1185,"nodeType":"InheritanceSpecifier","src":"822:7:5"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"289:478:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1214,"linearizedBaseContracts":[1214,2011,616],"name":"ERC165Upgradeable","nameLocation":"786:17:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1190,"nodeType":"Block","src":"887:7:5","statements":[]},"id":1191,"implemented":true,"kind":"function","modifiers":[{"id":1188,"kind":"modifierInvocation","modifierName":{"id":1187,"name":"onlyInitializing","nameLocations":["870:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"870:16:5"},"nodeType":"ModifierInvocation","src":"870:16:5"}],"name":"__ERC165_init","nameLocation":"845:13:5","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"858:2:5"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"887:0:5"},"scope":1214,"src":"836:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"961:7:5","statements":[]},"id":1197,"implemented":true,"kind":"function","modifiers":[{"id":1194,"kind":"modifierInvocation","modifierName":{"id":1193,"name":"onlyInitializing","nameLocations":["944:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"944:16:5"},"nodeType":"ModifierInvocation","src":"944:16:5"}],"name":"__ERC165_init_unchained","nameLocation":"909:23:5","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"932:2:5"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"961:0:5"},"scope":1214,"src":"900:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2010],"body":{"id":1212,"nodeType":"Block","src":"1116:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1205,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"1133:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1207,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"1153:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2011_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2011_$","typeString":"type(contract IERC165)"}],"id":1206,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1148:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2011","typeString":"type(contract IERC165)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1162:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1148:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1133:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1204,"id":1211,"nodeType":"Return","src":"1126:47:5"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"973:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1043:17:5","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"interfaceId","nameLocation":"1068:11:5","nodeType":"VariableDeclaration","scope":1213,"src":"1061:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1199,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1061:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1060:20:5"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"1110:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1202,"name":"bool","nodeType":"ElementaryTypeName","src":"1110:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1109:6:5"},"scope":1214,"src":"1034:146:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1215,"src":"768:414:5","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1069:5"},"id":5},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1297]},"id":1298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1216,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"135:89:6","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":1297,"linearizedBaseContracts":[1297],"name":"IAccessControl","nameLocation":"235:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"256:56:6","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1224,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:6","nodeType":"ErrorDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"account","nameLocation":"364:7:6","nodeType":"VariableDeclaration","scope":1224,"src":"356:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:6","nodeType":"VariableDeclaration","scope":1224,"src":"373:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:6"},"src":"317:76:6"},{"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"399:148:6","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1227,"name":"AccessControlBadConfirmation","nameLocation":"558:28:6","nodeType":"ErrorDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"586:2:6"},"src":"552:37:6"},{"anonymous":false,"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"595:254:6","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1236,"name":"RoleAdminChanged","nameLocation":"860:16:6","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":1236,"src":"877:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1232,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:6","nodeType":"VariableDeclaration","scope":1236,"src":"899:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:6","nodeType":"VariableDeclaration","scope":1236,"src":"934:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:6"},"src":"854:110:6"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"970:212:6","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1245,"name":"RoleGranted","nameLocation":"1193:11:6","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:6","nodeType":"VariableDeclaration","scope":1245,"src":"1205:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:6","nodeType":"VariableDeclaration","scope":1245,"src":"1227:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:6","nodeType":"VariableDeclaration","scope":1245,"src":"1252:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:6"},"src":"1187:89:6"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1282:275:6","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1254,"name":"RoleRevoked","nameLocation":"1568:11:6","nodeType":"EventDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:6","nodeType":"VariableDeclaration","scope":1254,"src":"1580:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:6","nodeType":"VariableDeclaration","scope":1254,"src":"1602:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:6","nodeType":"VariableDeclaration","scope":1254,"src":"1627:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:6"},"src":"1562:89:6"},{"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"1657:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1264,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:6","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"role","nameLocation":"1763:4:6","nodeType":"VariableDeclaration","scope":1264,"src":"1755:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"account","nameLocation":"1777:7:6","nodeType":"VariableDeclaration","scope":1264,"src":"1769:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:6"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1264,"src":"1809:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:6"},"scope":1297,"src":"1738:77:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"1821:184:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1272,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:6","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"role","nameLocation":"2040:4:6","nodeType":"VariableDeclaration","scope":1272,"src":"2032:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:6"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1272,"src":"2069:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:6"},"scope":1297,"src":"2010:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"2084:239:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1280,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:6","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"role","nameLocation":"2355:4:6","nodeType":"VariableDeclaration","scope":1280,"src":"2347:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"account","nameLocation":"2369:7:6","nodeType":"VariableDeclaration","scope":1280,"src":"2361:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:6"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"2386:0:6"},"scope":1297,"src":"2328:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"2393:223:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1288,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:6","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"role","nameLocation":"2649:4:6","nodeType":"VariableDeclaration","scope":1288,"src":"2641:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"account","nameLocation":"2663:7:6","nodeType":"VariableDeclaration","scope":1288,"src":"2655:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:6"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"2680:0:6"},"scope":1297,"src":"2621:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"2687:491:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:6","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"role","nameLocation":"3213:4:6","nodeType":"VariableDeclaration","scope":1296,"src":"3205:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:6","nodeType":"VariableDeclaration","scope":1296,"src":"3219:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:6"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"3255:0:6"},"scope":1297,"src":"3183:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1298,"src":"225:3033:6","usedErrors":[1224,1227],"usedEvents":[1236,1245,1254]}],"src":"109:3150:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1322]},"id":1323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1299,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1322,"linearizedBaseContracts":[1322],"name":"IERC5267","nameLocation":"143:8:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"158:84:7","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":1302,"name":"EIP712DomainChanged","nameLocation":"253:19:7","nodeType":"EventDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"272:2:7"},"src":"247:28:7"},{"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"281:140:7","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1321,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:7","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"447:2:7"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"fields","nameLocation":"517:6:7","nodeType":"VariableDeclaration","scope":1321,"src":"510:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1305,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"name","nameLocation":"551:4:7","nodeType":"VariableDeclaration","scope":1321,"src":"537:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1307,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"version","nameLocation":"583:7:7","nodeType":"VariableDeclaration","scope":1321,"src":"569:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1309,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"chainId","nameLocation":"612:7:7","nodeType":"VariableDeclaration","scope":1321,"src":"604:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:7","nodeType":"VariableDeclaration","scope":1321,"src":"633:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"salt","nameLocation":"680:4:7","nodeType":"VariableDeclaration","scope":1321,"src":"672:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"extensions","nameLocation":"715:10:7","nodeType":"VariableDeclaration","scope":1321,"src":"698:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1318,"nodeType":"ArrayTypeName","src":"698:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:7"},"scope":1322,"src":"426:310:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1323,"src":"133:605:7","usedErrors":[],"usedEvents":[1302]}],"src":"107:632:7"},"id":7},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3065],"SignedMath":[3170],"Strings":[1577]},"id":1578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1324,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":3066,"src":"127:37:8","symbolAliases":[{"foreign":{"id":1325,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"135:4:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":3171,"src":"165:49:8","symbolAliases":[{"foreign":{"id":1327,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"173:10:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"216:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":1577,"linearizedBaseContracts":[1577],"name":"Strings","nameLocation":"259:7:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1332,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:8","nodeType":"VariableDeclaration","scope":1577,"src":"273:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1330,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1335,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:8","nodeType":"VariableDeclaration","scope":1577,"src":"335:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1333,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"384:81:8","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1342,"name":"StringsInsufficientHexLength","nameLocation":"476:28:8","nodeType":"ErrorDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"value","nameLocation":"513:5:8","nodeType":"VariableDeclaration","scope":1342,"src":"505:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"length","nameLocation":"528:6:8","nodeType":"VariableDeclaration","scope":1342,"src":"520:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:8"},"src":"470:66:8"},{"body":{"id":1389,"nodeType":"Block","src":"708:627:8","statements":[{"id":1388,"nodeType":"UncheckedBlock","src":"718:611:8","statements":[{"assignments":[1351],"declarations":[{"constant":false,"id":1351,"mutability":"mutable","name":"length","nameLocation":"750:6:8","nodeType":"VariableDeclaration","scope":1388,"src":"742:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1358,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"770:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1352,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"759:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3065_$","typeString":"type(library Math)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2885,"src":"759:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:8"},{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"buffer","nameLocation":"808:6:8","nodeType":"VariableDeclaration","scope":1388,"src":"794:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1359,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1365,"initialValue":{"arguments":[{"id":1363,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"828:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1361,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:8"},{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"ptr","nameLocation":"857:3:8","nodeType":"VariableDeclaration","scope":1388,"src":"849:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1368,"nodeType":"VariableDeclarationStatement","src":"849:11:8"},{"AST":{"nodeType":"YulBlock","src":"930:67:8","statements":[{"nodeType":"YulAssignment","src":"948:35:8","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:8","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:8"},"nodeType":"YulFunctionCall","src":"967:15:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:8"},"nodeType":"YulFunctionCall","src":"955:28:8"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1360,"isOffset":false,"isSlot":false,"src":"959:6:8","valueSize":1},{"declaration":1351,"isOffset":false,"isSlot":false,"src":"975:6:8","valueSize":1},{"declaration":1367,"isOffset":false,"isSlot":false,"src":"948:3:8","valueSize":1}],"id":1369,"nodeType":"InlineAssembly","src":"921:76:8"},{"body":{"id":1384,"nodeType":"Block","src":"1023:269:8","statements":[{"expression":{"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:8","subExpression":{"id":1371,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"1041:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1373,"nodeType":"ExpressionStatement","src":"1041:5:8"},{"AST":{"nodeType":"YulBlock","src":"1124:86:8","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:8"},"nodeType":"YulFunctionCall","src":"1164:14:8"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:8"},"nodeType":"YulFunctionCall","src":"1159:32:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:8"},"nodeType":"YulFunctionCall","src":"1146:46:8"},"nodeType":"YulExpressionStatement","src":"1146:46:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1332,"isOffset":false,"isSlot":false,"src":"1180:10:8","valueSize":1},{"declaration":1367,"isOffset":false,"isSlot":false,"src":"1154:3:8","valueSize":1},{"declaration":1345,"isOffset":false,"isSlot":false,"src":"1168:5:8","valueSize":1}],"id":1374,"nodeType":"InlineAssembly","src":"1115:95:8"},{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1227:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"1227:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1260:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"1256:21:8","trueBody":{"id":1382,"nodeType":"Break","src":"1272:5:8"}}]},"condition":{"hexValue":"74727565","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1385,"nodeType":"WhileStatement","src":"1010:282:8"},{"expression":{"id":1386,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"1312:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1349,"id":1387,"nodeType":"Return","src":"1305:13:8"}]}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"542:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:8","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"value","nameLocation":"663:5:8","nodeType":"VariableDeclaration","scope":1390,"src":"655:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:8"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"693:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1347,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:8"},"scope":1577,"src":"637:698:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"1511:92:8","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1542:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:8","trueExpression":{"hexValue":"2d","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1588:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1408,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"1573:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3170_$","typeString":"type(library SignedMath)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3169,"src":"1573:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1407,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1564:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1398,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:8","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:8","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1397,"id":1414,"nodeType":"Return","src":"1521:75:8"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"1341:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:8","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"value","nameLocation":"1466:5:8","nodeType":"VariableDeclaration","scope":1416,"src":"1459:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1392,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:8"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"1496:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1395,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:8"},"scope":1577,"src":"1435:168:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1435,"nodeType":"Block","src":"1782:100:8","statements":[{"id":1434,"nodeType":"UncheckedBlock","src":"1792:84:8","statements":[{"expression":{"arguments":[{"id":1425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1854:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1426,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"1842:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3065_$","typeString":"type(library Math)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"1842:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1424,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1436,1519,1539],"referencedDeclaration":1519,"src":"1823:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1423,"id":1433,"nodeType":"Return","src":"1816:49:8"}]}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"1609:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1436,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:8","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"1737:5:8","nodeType":"VariableDeclaration","scope":1436,"src":"1729:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:8"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1436,"src":"1767:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1421,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:8"},"scope":1577,"src":"1708:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1518,"nodeType":"Block","src":"2095:435:8","statements":[{"assignments":[1447],"declarations":[{"constant":false,"id":1447,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:8","nodeType":"VariableDeclaration","scope":1518,"src":"2105:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1449,"initialValue":{"id":1448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"2126:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:8"},{"assignments":[1451],"declarations":[{"constant":false,"id":1451,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:8","nodeType":"VariableDeclaration","scope":1518,"src":"2141:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1455,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2177:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:8"},{"expression":{"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2198:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1463,"indexExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1466,"nodeType":"ExpressionStatement","src":"2198:15:8"},{"expression":{"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1467,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2223:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1469,"indexExpression":{"hexValue":"31","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1472,"nodeType":"ExpressionStatement","src":"2223:15:8"},{"body":{"id":1501,"nodeType":"Block","src":"2293:95:8","statements":[{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1487,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2307:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1489,"indexExpression":{"id":1488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2314:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1490,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2319:10:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1494,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1491,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2330:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1496,"nodeType":"ExpressionStatement","src":"2307:40:8"},{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1497,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2361:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ExpressionStatement","src":"2361:16:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2281:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"initializationExpression":{"assignments":[1474],"declarations":[{"constant":false,"id":1474,"mutability":"mutable","name":"i","nameLocation":"2261:1:8","nodeType":"VariableDeclaration","scope":1502,"src":"2253:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1476,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2269:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:8"},"loopExpression":{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:8","subExpression":{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2290:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"2288:3:8"},"nodeType":"ForStatement","src":"2248:140:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2401:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1512,"nodeType":"IfStatement","src":"2397:96:8","trueBody":{"id":1511,"nodeType":"Block","src":"2418:75:8","statements":[{"errorCall":{"arguments":[{"id":1507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"2468:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1508,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2475:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1506,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2439:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1510,"nodeType":"RevertStatement","src":"2432:50:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2516:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1513,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:8","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1445,"id":1517,"nodeType":"Return","src":"2502:21:8"}]},"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"1888:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1519,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:8","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"value","nameLocation":"2034:5:8","nodeType":"VariableDeclaration","scope":1519,"src":"2026:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"length","nameLocation":"2049:6:8","nodeType":"VariableDeclaration","scope":1519,"src":"2041:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:8"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"2080:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1443,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:8"},"scope":1577,"src":"2005:525:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1538,"nodeType":"Block","src":"2762:75:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1532,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2807:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1530,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:8","typeDescriptions":{}}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:8","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1535,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2815:14:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1527,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1436,1519,1539],"referencedDeclaration":1519,"src":"2779:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1526,"id":1537,"nodeType":"Return","src":"2772:58:8"}]},"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"2536:148:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:8","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"addr","nameLocation":"2718:4:8","nodeType":"VariableDeclaration","scope":1539,"src":"2710:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:8"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"2747:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1524,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:8"},"scope":1577,"src":"2689:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"2992:104:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1551,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"3015:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1549,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:8","typeDescriptions":{}}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:8","memberName":"length","nodeType":"MemberAccess","src":"3009:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3034:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1554,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:8","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:8","memberName":"length","nodeType":"MemberAccess","src":"3028:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"3063:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1560,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1569,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3086:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1567,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:8","typeDescriptions":{}}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1566,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1548,"id":1574,"nodeType":"Return","src":"3002:87:8"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"2843:66:8","text":" @dev Returns true if the two strings are equal."},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:8","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"a","nameLocation":"2943:1:8","nodeType":"VariableDeclaration","scope":1576,"src":"2929:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1541,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"b","nameLocation":"2960:1:8","nodeType":"VariableDeclaration","scope":1576,"src":"2946:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1543,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:8"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1576,"src":"2986:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1546,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:8"},"scope":1577,"src":"2914:182:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1578,"src":"251:2847:8","usedErrors":[1342],"usedEvents":[]}],"src":"101:2998:8"},"id":8},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1925]},"id":1926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1579,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"138:205:9","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1925,"linearizedBaseContracts":[1925],"name":"ECDSA","nameLocation":"352:5:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1585,"members":[{"id":1581,"name":"NoError","nameLocation":"392:7:9","nodeType":"EnumValue","src":"392:7:9"},{"id":1582,"name":"InvalidSignature","nameLocation":"409:16:9","nodeType":"EnumValue","src":"409:16:9"},{"id":1583,"name":"InvalidSignatureLength","nameLocation":"435:22:9","nodeType":"EnumValue","src":"435:22:9"},{"id":1584,"name":"InvalidSignatureS","nameLocation":"467:17:9","nodeType":"EnumValue","src":"467:17:9"}],"name":"RecoverError","nameLocation":"369:12:9","nodeType":"EnumDefinition","src":"364:126:9"},{"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"496:63:9","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1588,"name":"ECDSAInvalidSignature","nameLocation":"570:21:9","nodeType":"ErrorDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[],"src":"591:2:9"},"src":"564:30:9"},{"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"600:60:9","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1593,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:9","nodeType":"ErrorDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"length","nameLocation":"707:6:9","nodeType":"VariableDeclaration","scope":1593,"src":"699:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:9"},"src":"665:50:9"},{"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"721:85:9","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1598,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:9","nodeType":"ErrorDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"s","nameLocation":"848:1:9","nodeType":"VariableDeclaration","scope":1598,"src":"840:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:9"},"src":"811:40:9"},{"body":{"id":1650,"nodeType":"Block","src":"2242:653:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1613,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2256:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:9","memberName":"length","nodeType":"MemberAccess","src":"2256:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1648,"nodeType":"Block","src":"2781:108:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:9","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1639,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2815:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:9","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1583,"src":"2815:35:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1643,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2860:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:9","memberName":"length","nodeType":"MemberAccess","src":"2860:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:9","typeDescriptions":{}}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1612,"id":1647,"nodeType":"Return","src":"2795:83:9"}]},"id":1649,"nodeType":"IfStatement","src":"2252:637:9","trueBody":{"id":1634,"nodeType":"Block","src":"2280:495:9","statements":[{"assignments":[1618],"declarations":[{"constant":false,"id":1618,"mutability":"mutable","name":"r","nameLocation":"2302:1:9","nodeType":"VariableDeclaration","scope":1634,"src":"2294:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1619,"nodeType":"VariableDeclarationStatement","src":"2294:9:9"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"s","nameLocation":"2325:1:9","nodeType":"VariableDeclaration","scope":1634,"src":"2317:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1622,"nodeType":"VariableDeclarationStatement","src":"2317:9:9"},{"assignments":[1624],"declarations":[{"constant":false,"id":1624,"mutability":"mutable","name":"v","nameLocation":"2346:1:9","nodeType":"VariableDeclaration","scope":1634,"src":"2340:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1623,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1625,"nodeType":"VariableDeclarationStatement","src":"2340:7:9"},{"AST":{"nodeType":"YulBlock","src":"2548:171:9","statements":[{"nodeType":"YulAssignment","src":"2566:32:9","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:9"},"nodeType":"YulFunctionCall","src":"2577:20:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:9"},"nodeType":"YulFunctionCall","src":"2571:27:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:9"}]},{"nodeType":"YulAssignment","src":"2615:32:9","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:9"},"nodeType":"YulFunctionCall","src":"2626:20:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:9"},"nodeType":"YulFunctionCall","src":"2620:27:9"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:9"}]},{"nodeType":"YulAssignment","src":"2664:41:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:9","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:9"},"nodeType":"YulFunctionCall","src":"2683:20:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:9"},"nodeType":"YulFunctionCall","src":"2677:27:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:9"},"nodeType":"YulFunctionCall","src":"2669:36:9"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1618,"isOffset":false,"isSlot":false,"src":"2566:1:9","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":false,"src":"2615:1:9","valueSize":1},{"declaration":1603,"isOffset":false,"isSlot":false,"src":"2581:9:9","valueSize":1},{"declaration":1603,"isOffset":false,"isSlot":false,"src":"2630:9:9","valueSize":1},{"declaration":1603,"isOffset":false,"isSlot":false,"src":"2687:9:9","valueSize":1},{"declaration":1624,"isOffset":false,"isSlot":false,"src":"2664:1:9","valueSize":1}],"id":1626,"nodeType":"InlineAssembly","src":"2539:180:9"},{"expression":{"arguments":[{"id":1628,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2750:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1629,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2756:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1630,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2759:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1631,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2762:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1627,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1651,1731,1839],"referencedDeclaration":1839,"src":"2739:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1612,"id":1633,"nodeType":"Return","src":"2732:32:9"}]}}]},"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"857:1267:9","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1651,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:9","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"hash","nameLocation":"2157:4:9","nodeType":"VariableDeclaration","scope":1651,"src":"2149:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"signature","nameLocation":"2176:9:9","nodeType":"VariableDeclaration","scope":1651,"src":"2163:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1602,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:9"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"2210:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"2219:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1608,"nodeType":"UserDefinedTypeName","pathNode":{"id":1607,"name":"RecoverError","nameLocations":["2219:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"2219:12:9"},"referencedDeclaration":1585,"src":"2219:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"2233:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:9"},"scope":1925,"src":"2129:766:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"3789:168:9","statements":[{"assignments":[1662,1665,1667],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:9","nodeType":"VariableDeclaration","scope":1680,"src":"3800:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"error","nameLocation":"3832:5:9","nodeType":"VariableDeclaration","scope":1680,"src":"3819:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1664,"nodeType":"UserDefinedTypeName","pathNode":{"id":1663,"name":"RecoverError","nameLocations":["3819:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"3819:12:9"},"referencedDeclaration":1585,"src":"3819:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:9","nodeType":"VariableDeclaration","scope":1680,"src":"3839:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1672,"initialValue":{"arguments":[{"id":1669,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"3870:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1670,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"3876:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1668,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1651,1731,1839],"referencedDeclaration":1651,"src":"3859:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:9"},{"expression":{"arguments":[{"id":1674,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"3908:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"id":1675,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3915:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1673,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"3896:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1585_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"ExpressionStatement","src":"3896:28:9"},{"expression":{"id":1678,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"3941:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1660,"id":1679,"nodeType":"Return","src":"3934:16:9"}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"2901:796:9","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:9","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"hash","nameLocation":"3727:4:9","nodeType":"VariableDeclaration","scope":1681,"src":"3719:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"signature","nameLocation":"3746:9:9","nodeType":"VariableDeclaration","scope":1681,"src":"3733:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1655,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:9"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"3780:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:9"},"scope":1925,"src":"3702:255:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"4285:342:9","statements":[{"id":1729,"nodeType":"UncheckedBlock","src":"4295:326:9","statements":[{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"s","nameLocation":"4327:1:9","nodeType":"VariableDeclaration","scope":1729,"src":"4319:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1706,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"4331:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:9","typeDescriptions":{}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:9"},{"assignments":[1708],"declarations":[{"constant":false,"id":1708,"mutability":"mutable","name":"v","nameLocation":"4528:1:9","nodeType":"VariableDeclaration","scope":1729,"src":"4522:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1707,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1721,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1713,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"4547:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:9","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:9","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1709,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:9","typeDescriptions":{}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:9"},{"expression":{"arguments":[{"id":1723,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4596:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1724,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4602:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1725,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"4605:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1726,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"4608:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1722,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1651,1731,1839],"referencedDeclaration":1839,"src":"4585:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1697,"id":1728,"nodeType":"Return","src":"4578:32:9"}]}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"3963:205:9","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:9","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"hash","nameLocation":"4201:4:9","nodeType":"VariableDeclaration","scope":1731,"src":"4193:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"r","nameLocation":"4215:1:9","nodeType":"VariableDeclaration","scope":1731,"src":"4207:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"vs","nameLocation":"4226:2:9","nodeType":"VariableDeclaration","scope":1731,"src":"4218:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:9"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"4253:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"4262:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1693,"nodeType":"UserDefinedTypeName","pathNode":{"id":1692,"name":"RecoverError","nameLocations":["4262:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"4262:12:9"},"referencedDeclaration":1585,"src":"4262:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"4276:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:9"},"scope":1925,"src":"4173:454:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1763,"nodeType":"Block","src":"4840:164:9","statements":[{"assignments":[1744,1747,1749],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:9","nodeType":"VariableDeclaration","scope":1763,"src":"4851:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"error","nameLocation":"4883:5:9","nodeType":"VariableDeclaration","scope":1763,"src":"4870:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1746,"nodeType":"UserDefinedTypeName","pathNode":{"id":1745,"name":"RecoverError","nameLocations":["4870:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"4870:12:9"},"referencedDeclaration":1585,"src":"4870:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:9","nodeType":"VariableDeclaration","scope":1763,"src":"4890:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1755,"initialValue":{"arguments":[{"id":1751,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"4921:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1752,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4927:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1753,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"4930:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1750,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1651,1731,1839],"referencedDeclaration":1731,"src":"4910:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:9"},{"expression":{"arguments":[{"id":1757,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4955:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"id":1758,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"4962:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1756,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"4943:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1585_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"ExpressionStatement","src":"4943:28:9"},{"expression":{"id":1761,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4988:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1742,"id":1762,"nodeType":"Return","src":"4981:16:9"}]},"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"4633:116:9","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:9","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"hash","nameLocation":"4779:4:9","nodeType":"VariableDeclaration","scope":1764,"src":"4771:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"r","nameLocation":"4793:1:9","nodeType":"VariableDeclaration","scope":1764,"src":"4785:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"vs","nameLocation":"4804:2:9","nodeType":"VariableDeclaration","scope":1764,"src":"4796:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:9"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"4831:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:9"},"scope":1925,"src":"4754:250:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"5298:1372:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1785,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6194:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:9","typeDescriptions":{}}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"nodeType":"IfStatement","src":"6182:164:9","trueBody":{"id":1798,"nodeType":"Block","src":"6267:79:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:9","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1793,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"6301:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:9","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"6301:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"id":1795,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6333:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1782,"id":1797,"nodeType":"Return","src":"6281:54:9"}]}},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"signer","nameLocation":"6448:6:9","nodeType":"VariableDeclaration","scope":1838,"src":"6440:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1808,"initialValue":{"arguments":[{"id":1803,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6467:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1804,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6473:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1805,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6476:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1806,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6479:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1802,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:9","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1809,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"6495:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:9","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1828,"nodeType":"IfStatement","src":"6491:113:9","trueBody":{"id":1827,"nodeType":"Block","src":"6517:87:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:9","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1819,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"6551:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:9","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"6551:29:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:9","typeDescriptions":{}}},"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1782,"id":1826,"nodeType":"Return","src":"6531:62:9"}]}},{"expression":{"components":[{"id":1829,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"6622:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1830,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"6630:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"6630:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:9","typeDescriptions":{}}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1782,"id":1837,"nodeType":"Return","src":"6614:49:9"}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"5010:125:9","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:9","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"hash","nameLocation":"5177:4:9","nodeType":"VariableDeclaration","scope":1839,"src":"5169:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"v","nameLocation":"5197:1:9","nodeType":"VariableDeclaration","scope":1839,"src":"5191:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1768,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"r","nameLocation":"5216:1:9","nodeType":"VariableDeclaration","scope":1839,"src":"5208:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"s","nameLocation":"5235:1:9","nodeType":"VariableDeclaration","scope":1839,"src":"5227:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:9"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"5266:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"5275:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"RecoverError","nameLocations":["5275:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"5275:12:9"},"referencedDeclaration":1585,"src":"5275:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"5289:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:9"},"scope":1925,"src":"5140:1530:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"6897:166:9","statements":[{"assignments":[1854,1857,1859],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:9","nodeType":"VariableDeclaration","scope":1874,"src":"6908:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"error","nameLocation":"6940:5:9","nodeType":"VariableDeclaration","scope":1874,"src":"6927:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1856,"nodeType":"UserDefinedTypeName","pathNode":{"id":1855,"name":"RecoverError","nameLocations":["6927:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"6927:12:9"},"referencedDeclaration":1585,"src":"6927:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:9","nodeType":"VariableDeclaration","scope":1874,"src":"6947:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1866,"initialValue":{"arguments":[{"id":1861,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"6978:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1862,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6984:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1863,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"6987:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1864,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"6990:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1860,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1651,1731,1839],"referencedDeclaration":1839,"src":"6967:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1585_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:9"},{"expression":{"arguments":[{"id":1868,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"7014:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},{"id":1869,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"7021:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1867,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7002:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1585_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1871,"nodeType":"ExpressionStatement","src":"7002:28:9"},{"expression":{"id":1872,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7047:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1852,"id":1873,"nodeType":"Return","src":"7040:16:9"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"6676:122:9","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:9","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"hash","nameLocation":"6828:4:9","nodeType":"VariableDeclaration","scope":1875,"src":"6820:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"v","nameLocation":"6840:1:9","nodeType":"VariableDeclaration","scope":1875,"src":"6834:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1843,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"r","nameLocation":"6851:1:9","nodeType":"VariableDeclaration","scope":1875,"src":"6843:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"s","nameLocation":"6862:1:9","nodeType":"VariableDeclaration","scope":1875,"src":"6854:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:9"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"6888:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:9"},"scope":1925,"src":"6803:260:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"7268:460:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7282:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1885,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7291:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"7291:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7378:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1891,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7387:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:9","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"7387:29:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7483:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1899,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7492:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:9","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1583,"src":"7492:35:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7617:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1911,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7626:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1585_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:9","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"7626:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1919,"nodeType":"IfStatement","src":"7613:109:9","trueBody":{"id":1918,"nodeType":"Block","src":"7658:64:9","statements":[{"errorCall":{"arguments":[{"id":1915,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"7702:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1914,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"7679:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1917,"nodeType":"RevertStatement","src":"7672:39:9"}]}},"id":1920,"nodeType":"IfStatement","src":"7479:243:9","trueBody":{"id":1909,"nodeType":"Block","src":"7529:78:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1905,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"7586:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:9","typeDescriptions":{}}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1902,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"7550:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"RevertStatement","src":"7543:53:9"}]}},"id":1921,"nodeType":"IfStatement","src":"7374:348:9","trueBody":{"id":1897,"nodeType":"Block","src":"7418:55:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1894,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"7439:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"RevertStatement","src":"7432:30:9"}]}},"id":1922,"nodeType":"IfStatement","src":"7278:444:9","trueBody":{"id":1889,"nodeType":"Block","src":"7313:55:9","statements":[{"functionReturnParameters":1883,"id":1888,"nodeType":"Return","src":"7327:7:9"}]}}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"7069:122:9","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:9","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"error","nameLocation":"7230:5:9","nodeType":"VariableDeclaration","scope":1924,"src":"7217:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1878,"nodeType":"UserDefinedTypeName","pathNode":{"id":1877,"name":"RecoverError","nameLocations":["7217:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1585,"src":"7217:12:9"},"referencedDeclaration":1585,"src":"7217:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1585","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:9","nodeType":"VariableDeclaration","scope":1924,"src":"7237:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:9"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"7268:0:9"},"scope":1925,"src":"7196:532:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1926,"src":"344:7386:9","usedErrors":[1588,1593,1598],"usedEvents":[]}],"src":"112:7619:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[1999],"Strings":[1577]},"id":2000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1927,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2000,"sourceUnit":1578,"src":"149:39:10","symbolAliases":[{"foreign":{"id":1928,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"157:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"190:330:10","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":1999,"linearizedBaseContracts":[1999],"name":"MessageHashUtils","nameLocation":"529:16:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1939,"nodeType":"Block","src":"1314:368:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:10","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:10","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:10"},"nodeType":"YulFunctionCall","src":"1390:48:10"},"nodeType":"YulExpressionStatement","src":"1390:48:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:10","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:10"},"nodeType":"YulFunctionCall","src":"1492:25:10"},"nodeType":"YulExpressionStatement","src":"1492:25:10"},{"nodeType":"YulAssignment","src":"1571:31:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:10","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:10"},"nodeType":"YulFunctionCall","src":"1581:21:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1936,"isOffset":false,"isSlot":false,"src":"1571:6:10","valueSize":1},{"declaration":1933,"isOffset":false,"isSlot":false,"src":"1505:11:10","valueSize":1}],"id":1938,"nodeType":"InlineAssembly","src":"1367:309:10"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"552:665:10","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:10","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:10","nodeType":"VariableDeclaration","scope":1940,"src":"1254:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:10"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"digest","nameLocation":"1306:6:10","nodeType":"VariableDeclaration","scope":1940,"src":"1298:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:10"},"scope":1999,"src":"1222:460:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1965,"nodeType":"Block","src":"2234:143:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":1957,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:10","memberName":"length","nodeType":"MemberAccess","src":"2343:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1955,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2326:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1577_$","typeString":"type(library Strings)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2326:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1953,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:10","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1961,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2361:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:10","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:10","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1947,"id":1964,"nodeType":"Return","src":"2244:126:10"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"1688:455:10","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:10","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"message","nameLocation":"2193:7:10","nodeType":"VariableDeclaration","scope":1966,"src":"2180:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1942,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:10"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"2225:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:10"},"scope":1999,"src":"2148:229:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1985,"nodeType":"Block","src":"2831:80:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1980,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2887:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1981,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2898:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1977,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1976,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1975,"id":1984,"nodeType":"Return","src":"2841:63:10"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"2383:332:10","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:10","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"validator","nameLocation":"2769:9:10","nodeType":"VariableDeclaration","scope":1986,"src":"2761:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"data","nameLocation":"2793:4:10","nodeType":"VariableDeclaration","scope":1986,"src":"2780:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1970,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:10"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1986,"src":"2822:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:10"},"scope":1999,"src":"2720:191:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"3462:292:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:10"},"nodeType":"YulFunctionCall","src":"3549:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:10"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:10","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:10"},"nodeType":"YulFunctionCall","src":"3573:23:10"},"nodeType":"YulExpressionStatement","src":"3573:23:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:10","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:10"},"nodeType":"YulFunctionCall","src":"3616:14:10"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:10"},"nodeType":"YulFunctionCall","src":"3609:39:10"},"nodeType":"YulExpressionStatement","src":"3609:39:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:10"},"nodeType":"YulFunctionCall","src":"3668:14:10"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:10"},"nodeType":"YulFunctionCall","src":"3661:34:10"},"nodeType":"YulExpressionStatement","src":"3661:34:10"},{"nodeType":"YulAssignment","src":"3708:30:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:10","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:10"},"nodeType":"YulFunctionCall","src":"3718:20:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1994,"isOffset":false,"isSlot":false,"src":"3708:6:10","valueSize":1},{"declaration":1989,"isOffset":false,"isSlot":false,"src":"3632:15:10","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"3684:10:10","valueSize":1}],"id":1996,"nodeType":"InlineAssembly","src":"3515:233:10"}]},"documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"2917:431:10","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:10","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:10","nodeType":"VariableDeclaration","scope":1998,"src":"3378:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:10","nodeType":"VariableDeclaration","scope":1998,"src":"3403:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:10"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"digest","nameLocation":"3454:6:10","nodeType":"VariableDeclaration","scope":1998,"src":"3446:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:10"},"scope":1999,"src":"3353:401:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2000,"src":"521:3235:10","usedErrors":[],"usedEvents":[]}],"src":"123:3634:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2011]},"id":2012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"141:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2011,"linearizedBaseContracts":[2011],"name":"IERC165","nameLocation":"431:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"445:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2010,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:11","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:11","nodeType":"VariableDeclaration","scope":2010,"src":"817:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2004,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:11"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"860:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2007,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:11"},"scope":2011,"src":"790:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2012,"src":"421:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:754:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3065]},"id":3066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2013,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"129:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3065,"linearizedBaseContracts":[3065],"name":"Math","nameLocation":"211:4:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"222:50:12","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2017,"name":"MathOverflowedMulDiv","nameLocation":"283:20:12","nodeType":"ErrorDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"303:2:12"},"src":"277:29:12"},{"canonicalName":"Math.Rounding","id":2022,"members":[{"id":2018,"name":"Floor","nameLocation":"336:5:12","nodeType":"EnumValue","src":"336:5:12"},{"id":2019,"name":"Ceil","nameLocation":"379:4:12","nodeType":"EnumValue","src":"379:4:12"},{"id":2020,"name":"Trunc","nameLocation":"421:5:12","nodeType":"EnumValue","src":"421:5:12"},{"id":2021,"name":"Expand","nameLocation":"451:6:12","nodeType":"EnumValue","src":"451:6:12"}],"name":"Rounding","nameLocation":"317:8:12","nodeType":"EnumDefinition","src":"312:169:12"},{"body":{"id":2053,"nodeType":"Block","src":"661:140:12","statements":[{"id":2052,"nodeType":"UncheckedBlock","src":"671:124:12","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"c","nameLocation":"703:1:12","nodeType":"VariableDeclaration","scope":2052,"src":"695:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2039,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"707:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"711:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"730:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"734:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"726:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2033,"id":2046,"nodeType":"Return","src":"737:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2049,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"782:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2033,"id":2051,"nodeType":"Return","src":"768:16:12"}]}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"487:93:12","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2054,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:12","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"a","nameLocation":"609:1:12","nodeType":"VariableDeclaration","scope":2054,"src":"601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"b","nameLocation":"620:1:12","nodeType":"VariableDeclaration","scope":2054,"src":"612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"646:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2029,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"652:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:12"},"scope":3065,"src":"585:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"984:113:12","statements":[{"id":2080,"nodeType":"UncheckedBlock","src":"994:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1026:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"IfStatement","src":"1018:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2065,"id":2072,"nodeType":"Return","src":"1029:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1074:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2076,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2065,"id":2079,"nodeType":"Return","src":"1060:20:12"}]}]},"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"807:96:12","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:12","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"a","nameLocation":"932:1:12","nodeType":"VariableDeclaration","scope":2082,"src":"924:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"b","nameLocation":"943:1:12","nodeType":"VariableDeclaration","scope":2082,"src":"935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:12"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"969:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2061,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"975:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:12"},"scope":3065,"src":"908:189:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2123,"nodeType":"Block","src":"1283:417:12","statements":[{"id":2122,"nodeType":"UncheckedBlock","src":"1293:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2101,"nodeType":"IfStatement","src":"1547:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2093,"id":2100,"nodeType":"Return","src":"1559:16:12"}},{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"c","nameLocation":"1597:1:12","nodeType":"VariableDeclaration","scope":2122,"src":"1589:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2107,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1601:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"1605:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"1624:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"1633:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2117,"nodeType":"IfStatement","src":"1620:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2093,"id":2116,"nodeType":"Return","src":"1636:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2119,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"1681:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2093,"id":2121,"nodeType":"Return","src":"1667:16:12"}]}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"1103:99:12","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:12","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"a","nameLocation":"1231:1:12","nodeType":"VariableDeclaration","scope":2124,"src":"1223:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"b","nameLocation":"1242:1:12","nodeType":"VariableDeclaration","scope":2124,"src":"1234:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:12"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2089,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"1274:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:12"},"scope":3065,"src":"1207:493:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"1887:114:12","statements":[{"id":2150,"nodeType":"UncheckedBlock","src":"1897:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1925:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2143,"nodeType":"IfStatement","src":"1921:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2135,"id":2142,"nodeType":"Return","src":"1933:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1978:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2135,"id":2149,"nodeType":"Return","src":"1964:20:12"}]}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"1706:100:12","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:12","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"a","nameLocation":"1835:1:12","nodeType":"VariableDeclaration","scope":2152,"src":"1827:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"b","nameLocation":"1846:1:12","nodeType":"VariableDeclaration","scope":2152,"src":"1838:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:12"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"1872:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2131,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"1878:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:12"},"scope":3065,"src":"1811:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"2198:114:12","statements":[{"id":2178,"nodeType":"UncheckedBlock","src":"2208:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"2236:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2171,"nodeType":"IfStatement","src":"2232:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2163,"id":2170,"nodeType":"Return","src":"2244:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"2289:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2174,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"2293:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2163,"id":2177,"nodeType":"Return","src":"2275:20:12"}]}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"2007:110:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:12","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"a","nameLocation":"2146:1:12","nodeType":"VariableDeclaration","scope":2180,"src":"2138:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"b","nameLocation":"2157:1:12","nodeType":"VariableDeclaration","scope":2180,"src":"2149:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:12"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"2183:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2159,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"2189:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:12"},"scope":3065,"src":"2122:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"2449:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"2466:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2478:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:12","trueExpression":{"id":2193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"2474:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2189,"id":2196,"nodeType":"Return","src":"2459:20:12"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"2318:59:12","text":" @dev Returns the largest of two numbers."},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:12","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"a","nameLocation":"2403:1:12","nodeType":"VariableDeclaration","scope":2198,"src":"2395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"b","nameLocation":"2414:1:12","nodeType":"VariableDeclaration","scope":2198,"src":"2406:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:12"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"2440:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:12"},"scope":3065,"src":"2382:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"2624:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"2641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"2645:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"2653:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:12","trueExpression":{"id":2211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"2649:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2207,"id":2214,"nodeType":"Return","src":"2634:20:12"}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"2492:60:12","text":" @dev Returns the smallest of two numbers."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:12","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"a","nameLocation":"2578:1:12","nodeType":"VariableDeclaration","scope":2216,"src":"2570:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"b","nameLocation":"2589:1:12","nodeType":"VariableDeclaration","scope":2216,"src":"2581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:12"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"2615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:12"},"scope":3065,"src":"2557:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"2845:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2900:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2904:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2910:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2231,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2914:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2225,"id":2237,"nodeType":"Return","src":"2892:28:12"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"2667:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:12","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"a","nameLocation":"2799:1:12","nodeType":"VariableDeclaration","scope":2239,"src":"2791:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"b","nameLocation":"2810:1:12","nodeType":"VariableDeclaration","scope":2239,"src":"2802:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:12"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"2836:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:12"},"scope":3065,"src":"2774:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2272,"nodeType":"Block","src":"3219:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3233:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"IfStatement","src":"3229:127:12","trueBody":{"id":2256,"nodeType":"Block","src":"3241:115:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3340:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3344:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2248,"id":2255,"nodeType":"Return","src":"3333:12:12"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3444:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:12","trueExpression":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2248,"id":2271,"nodeType":"Return","src":"3437:35:12"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"2933:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2273,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:12","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"a","nameLocation":"3173:1:12","nodeType":"VariableDeclaration","scope":2273,"src":"3165:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"b","nameLocation":"3184:1:12","nodeType":"VariableDeclaration","scope":2273,"src":"3176:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:12"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2273,"src":"3210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:12"},"scope":3065,"src":"3148:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2398,"nodeType":"Block","src":"3901:4018:12","statements":[{"id":2397,"nodeType":"UncheckedBlock","src":"3911:4002:12","statements":[{"assignments":[2286],"declarations":[{"constant":false,"id":2286,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:12","nodeType":"VariableDeclaration","scope":2397,"src":"4232:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2290,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4248:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2288,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"4252:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:12"},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:12","nodeType":"VariableDeclaration","scope":2397,"src":"4312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2293,"nodeType":"VariableDeclarationStatement","src":"4312:13:12"},{"AST":{"nodeType":"YulBlock","src":"4392:122:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:12"},"nodeType":"YulFunctionCall","src":"4433:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:12"},"nodeType":"YulFunctionCall","src":"4420:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:12","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:12"},"nodeType":"YulFunctionCall","src":"4470:14:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:12"},"nodeType":"YulFunctionCall","src":"4486:13:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:12"},"nodeType":"YulFunctionCall","src":"4466:34:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2286,"isOffset":false,"isSlot":false,"src":"4478:5:12","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"4493:5:12","valueSize":1},{"declaration":2292,"isOffset":false,"isSlot":false,"src":"4457:5:12","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"4427:1:12","valueSize":1},{"declaration":2278,"isOffset":false,"isSlot":false,"src":"4430:1:12","valueSize":1}],"id":2294,"nodeType":"InlineAssembly","src":"4383:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2295,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"4595:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"nodeType":"IfStatement","src":"4591:368:12","trueBody":{"id":2302,"nodeType":"Block","src":"4607:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"4925:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2299,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4933:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2284,"id":2301,"nodeType":"Return","src":"4918:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2304,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"5065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2305,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"5080:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"5061:88:12","trueBody":{"id":2310,"nodeType":"Block","src":"5087:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2307,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"5112:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"RevertStatement","src":"5105:29:12"}]}},{"assignments":[2313],"declarations":[{"constant":false,"id":2313,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:12","nodeType":"VariableDeclaration","scope":2397,"src":"5404:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2314,"nodeType":"VariableDeclarationStatement","src":"5404:17:12"},{"AST":{"nodeType":"YulBlock","src":"5444:291:12","statements":[{"nodeType":"YulAssignment","src":"5513:38:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:12"},"nodeType":"YulFunctionCall","src":"5526:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:12"}]},{"nodeType":"YulAssignment","src":"5633:41:12","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:12"},"nodeType":"YulFunctionCall","src":"5653:20:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:12"},"nodeType":"YulFunctionCall","src":"5642:32:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:12"}]},{"nodeType":"YulAssignment","src":"5691:30:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:12"},"nodeType":"YulFunctionCall","src":"5700:21:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2280,"isOffset":false,"isSlot":false,"src":"5539:11:12","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"5667:5:12","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"5691:5:12","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"5704:5:12","valueSize":1},{"declaration":2292,"isOffset":false,"isSlot":false,"src":"5633:5:12","valueSize":1},{"declaration":2292,"isOffset":false,"isSlot":false,"src":"5646:5:12","valueSize":1},{"declaration":2313,"isOffset":false,"isSlot":false,"src":"5513:9:12","valueSize":1},{"declaration":2313,"isOffset":false,"isSlot":false,"src":"5656:9:12","valueSize":1},{"declaration":2313,"isOffset":false,"isSlot":false,"src":"5711:9:12","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"5533:1:12","valueSize":1},{"declaration":2278,"isOffset":false,"isSlot":false,"src":"5536:1:12","valueSize":1}],"id":2315,"nodeType":"InlineAssembly","src":"5435:300:12"},{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"twos","nameLocation":"5947:4:12","nodeType":"VariableDeclaration","scope":2397,"src":"5939:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2324,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"5954:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"5973:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:12"},{"AST":{"nodeType":"YulBlock","src":"6008:362:12","statements":[{"nodeType":"YulAssignment","src":"6073:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:12"},"nodeType":"YulFunctionCall","src":"6088:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:12"}]},{"nodeType":"YulAssignment","src":"6177:25:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:12"},"nodeType":"YulFunctionCall","src":"6186:16:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:12"}]},{"nodeType":"YulAssignment","src":"6317:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:12"},"nodeType":"YulFunctionCall","src":"6333:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:12"},"nodeType":"YulFunctionCall","src":"6329:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:12"},"nodeType":"YulFunctionCall","src":"6325:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2280,"isOffset":false,"isSlot":false,"src":"6073:11:12","valueSize":1},{"declaration":2280,"isOffset":false,"isSlot":false,"src":"6092:11:12","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"6177:5:12","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"6190:5:12","valueSize":1},{"declaration":2317,"isOffset":false,"isSlot":false,"src":"6105:4:12","valueSize":1},{"declaration":2317,"isOffset":false,"isSlot":false,"src":"6197:4:12","valueSize":1},{"declaration":2317,"isOffset":false,"isSlot":false,"src":"6317:4:12","valueSize":1},{"declaration":2317,"isOffset":false,"isSlot":false,"src":"6340:4:12","valueSize":1},{"declaration":2317,"isOffset":false,"isSlot":false,"src":"6347:4:12","valueSize":1}],"id":2325,"nodeType":"InlineAssembly","src":"5999:371:12"},{"expression":{"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"6436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6445:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2328,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"6453:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ExpressionStatement","src":"6436:21:12"},{"assignments":[2333],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:12","nodeType":"VariableDeclaration","scope":2397,"src":"6775:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2340,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2335,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"6798:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:12"},{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2341,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2344,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7060:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"7031:36:12"},{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7115:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2352,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"7100:36:12"},{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2357,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7170:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7185:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2360,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ExpressionStatement","src":"7170:36:12"},{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2365,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7255:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2368,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"nodeType":"ExpressionStatement","src":"7240:36:12"},{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2373,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2375,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7325:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2376,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2380,"nodeType":"ExpressionStatement","src":"7310:36:12"},{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2381,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7381:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7396:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7410:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"7381:36:12"},{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"7851:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2390,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"7860:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2391,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"7851:24:12"},{"expression":{"id":2395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"7896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2284,"id":2396,"nodeType":"Return","src":"7889:13:12"}]}]},"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"3485:313:12","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:12","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"x","nameLocation":"3827:1:12","nodeType":"VariableDeclaration","scope":2399,"src":"3819:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"y","nameLocation":"3838:1:12","nodeType":"VariableDeclaration","scope":2399,"src":"3830:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:12","nodeType":"VariableDeclaration","scope":2399,"src":"3841:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:12"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"result","nameLocation":"3893:6:12","nodeType":"VariableDeclaration","scope":2399,"src":"3885:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:12"},"scope":3065,"src":"3803:4116:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2441,"nodeType":"Block","src":"8161:192:12","statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"result","nameLocation":"8179:6:12","nodeType":"VariableDeclaration","scope":2441,"src":"8171:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2421,"initialValue":{"arguments":[{"id":2417,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8195:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2418,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8198:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2419,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"8201:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2416,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2399,2442],"referencedDeclaration":2399,"src":"8188:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2423,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8244:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}],"id":2422,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"8227:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2022_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2426,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8264:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2427,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8267:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2428,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"8270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2425,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2438,"nodeType":"IfStatement","src":"8223:101:12","trueBody":{"id":2437,"nodeType":"Block","src":"8288:36:12","statements":[{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"8302:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2436,"nodeType":"ExpressionStatement","src":"8302:11:12"}]}},{"expression":{"id":2439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"8340:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2413,"id":2440,"nodeType":"Return","src":"8333:13:12"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"7925:121:12","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:12","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"x","nameLocation":"8075:1:12","nodeType":"VariableDeclaration","scope":2442,"src":"8067:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"y","nameLocation":"8086:1:12","nodeType":"VariableDeclaration","scope":2442,"src":"8078:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:12","nodeType":"VariableDeclaration","scope":2442,"src":"8089:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:12","nodeType":"VariableDeclaration","scope":2442,"src":"8110:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"},"typeName":{"id":2408,"nodeType":"UserDefinedTypeName","pathNode":{"id":2407,"name":"Rounding","nameLocations":["8110:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2022,"src":"8110:8:12"},"referencedDeclaration":2022,"src":"8110:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:12"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2442,"src":"8152:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:12"},"scope":3065,"src":"8051:302:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2553,"nodeType":"Block","src":"8644:1585:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"8658:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2456,"nodeType":"IfStatement","src":"8654:45:12","trueBody":{"id":2455,"nodeType":"Block","src":"8666:33:12","statements":[{"expression":{"hexValue":"30","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2449,"id":2454,"nodeType":"Return","src":"8680:8:12"}]}},{"assignments":[2458],"declarations":[{"constant":false,"id":2458,"mutability":"mutable","name":"result","nameLocation":"9386:6:12","nodeType":"VariableDeclaration","scope":2553,"src":"9378:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2467,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"9406:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2721,2756],"referencedDeclaration":2721,"src":"9401:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:12"},{"id":2552,"nodeType":"UncheckedBlock","src":"9815:408:12","statements":[{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9839:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9849:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"9858:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ExpressionStatement","src":"9839:35:12"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9888:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9898:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"9907:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9911:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"9888:35:12"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9937:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9947:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"9956:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"9937:35:12"},{"expression":{"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9996:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10005:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10009:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2511,"nodeType":"ExpressionStatement","src":"9986:35:12"},{"expression":{"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10035:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10045:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10058:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2522,"nodeType":"ExpressionStatement","src":"10035:35:12"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10084:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10094:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10103:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10107:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"10084:35:12"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10133:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10143:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10152:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10156:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"10133:35:12"},{"expression":{"arguments":[{"id":2546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10193:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10201:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2545,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10189:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2449,"id":2551,"nodeType":"Return","src":"10182:30:12"}]}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"8359:223:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2554,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:12","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"a","nameLocation":"8609:1:12","nodeType":"VariableDeclaration","scope":2554,"src":"8601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:12"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2554,"src":"8635:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:12"},"scope":3065,"src":"8587:1642:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"10405:164:12","statements":[{"id":2587,"nodeType":"UncheckedBlock","src":"10415:148:12","statements":[{"assignments":[2566],"declarations":[{"constant":false,"id":2566,"mutability":"mutable","name":"result","nameLocation":"10447:6:12","nodeType":"VariableDeclaration","scope":2587,"src":"10439:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2570,"initialValue":{"arguments":[{"id":2568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"10461:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2567,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2554,2589],"referencedDeclaration":2554,"src":"10456:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"10484:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2573,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"10511:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}],"id":2572,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"10494:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2022_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"10524:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"10533:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"10542:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:12","trueExpression":{"hexValue":"31","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2564,"id":2586,"nodeType":"Return","src":"10477:75:12"}]}]},"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"10235:89:12","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:12","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"a","nameLocation":"10351:1:12","nodeType":"VariableDeclaration","scope":2589,"src":"10343:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:12","nodeType":"VariableDeclaration","scope":2589,"src":"10354:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"},"typeName":{"id":2559,"nodeType":"UserDefinedTypeName","pathNode":{"id":2558,"name":"Rounding","nameLocations":["10354:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2022,"src":"10354:8:12"},"referencedDeclaration":2022,"src":"10354:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:12"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"10396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:12"},"scope":3065,"src":"10329:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"10760:922:12","statements":[{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"result","nameLocation":"10778:6:12","nodeType":"VariableDeclaration","scope":2720,"src":"10770:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:12"},{"id":2717,"nodeType":"UncheckedBlock","src":"10798:855:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"IfStatement","src":"10822:99:12","trueBody":{"id":2614,"nodeType":"Block","src":"10844:77:12","statements":[{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10862:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2609,"nodeType":"ExpressionStatement","src":"10862:13:12"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"10893:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"10893:13:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10938:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2630,"nodeType":"IfStatement","src":"10934:96:12","trueBody":{"id":2629,"nodeType":"Block","src":"10955:75:12","statements":[{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10973:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ExpressionStatement","src":"10973:12:12"},{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11003:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"11003:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11047:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"nodeType":"IfStatement","src":"11043:96:12","trueBody":{"id":2644,"nodeType":"Block","src":"11064:75:12","statements":[{"expression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11082:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2639,"nodeType":"ExpressionStatement","src":"11082:12:12"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11112:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"11112:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11156:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2660,"nodeType":"IfStatement","src":"11152:96:12","trueBody":{"id":2659,"nodeType":"Block","src":"11173:75:12","statements":[{"expression":{"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11191:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2654,"nodeType":"ExpressionStatement","src":"11191:12:12"},{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11221:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2658,"nodeType":"ExpressionStatement","src":"11221:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11265:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2675,"nodeType":"IfStatement","src":"11261:93:12","trueBody":{"id":2674,"nodeType":"Block","src":"11281:73:12","statements":[{"expression":{"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11299:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"nodeType":"ExpressionStatement","src":"11299:11:12"},{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11328:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"11328:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11371:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2690,"nodeType":"IfStatement","src":"11367:93:12","trueBody":{"id":2689,"nodeType":"Block","src":"11387:73:12","statements":[{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11405:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2684,"nodeType":"ExpressionStatement","src":"11405:11:12"},{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11434:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2688,"nodeType":"ExpressionStatement","src":"11434:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11477:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2705,"nodeType":"IfStatement","src":"11473:93:12","trueBody":{"id":2704,"nodeType":"Block","src":"11493:73:12","statements":[{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11511:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2699,"nodeType":"ExpressionStatement","src":"11511:11:12"},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11540:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"11540:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"11583:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2716,"nodeType":"IfStatement","src":"11579:64:12","trueBody":{"id":2715,"nodeType":"Block","src":"11599:44:12","statements":[{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11617:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"11617:11:12"}]}}]},{"expression":{"id":2718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11669:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2596,"id":2719,"nodeType":"Return","src":"11662:13:12"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"10575:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:12","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"value","nameLocation":"10721:5:12","nodeType":"VariableDeclaration","scope":2721,"src":"10713:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:12"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"10751:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:12"},"scope":3065,"src":"10699:983:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2755,"nodeType":"Block","src":"11915:168:12","statements":[{"id":2754,"nodeType":"UncheckedBlock","src":"11925:152:12","statements":[{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"result","nameLocation":"11957:6:12","nodeType":"VariableDeclaration","scope":2754,"src":"11949:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"11971:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2734,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2721,2756],"referencedDeclaration":2721,"src":"11966:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"11998:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2740,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"12025:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}],"id":2739,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"12008:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2022_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"12043:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"12052:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:12","trueExpression":{"hexValue":"31","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2731,"id":2753,"nodeType":"Return","src":"11991:75:12"}]}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"11688:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:12","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"value","nameLocation":"11857:5:12","nodeType":"VariableDeclaration","scope":2756,"src":"11849:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:12","nodeType":"VariableDeclaration","scope":2756,"src":"11864:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"},"typeName":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"Rounding","nameLocations":["11864:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2022,"src":"11864:8:12"},"referencedDeclaration":2022,"src":"11864:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:12"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"11906:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:12"},"scope":3065,"src":"11835:248:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"12276:854:12","statements":[{"assignments":[2765],"declarations":[{"constant":false,"id":2765,"mutability":"mutable","name":"result","nameLocation":"12294:6:12","nodeType":"VariableDeclaration","scope":2884,"src":"12286:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2767,"initialValue":{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:12"},{"id":2881,"nodeType":"UncheckedBlock","src":"12314:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12342:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2784,"nodeType":"IfStatement","src":"12338:103:12","trueBody":{"id":2783,"nodeType":"Block","src":"12361:80:12","statements":[{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2778,"nodeType":"ExpressionStatement","src":"12379:17:12"},{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12414:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"12414:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"nodeType":"IfStatement","src":"12454:103:12","trueBody":{"id":2800,"nodeType":"Block","src":"12477:80:12","statements":[{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2795,"nodeType":"ExpressionStatement","src":"12495:17:12"},{"expression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12530:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2799,"nodeType":"ExpressionStatement","src":"12530:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12574:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"12570:103:12","trueBody":{"id":2817,"nodeType":"Block","src":"12593:80:12","statements":[{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"12611:17:12"},{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12646:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ExpressionStatement","src":"12646:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12690:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"nodeType":"IfStatement","src":"12686:100:12","trueBody":{"id":2834,"nodeType":"Block","src":"12708:78:12","statements":[{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12726:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"12726:16:12"},{"expression":{"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12760:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2833,"nodeType":"ExpressionStatement","src":"12760:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12803:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2852,"nodeType":"IfStatement","src":"12799:100:12","trueBody":{"id":2851,"nodeType":"Block","src":"12821:78:12","statements":[{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12839:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2846,"nodeType":"ExpressionStatement","src":"12839:16:12"},{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12873:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2850,"nodeType":"ExpressionStatement","src":"12873:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12916:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2869,"nodeType":"IfStatement","src":"12912:100:12","trueBody":{"id":2868,"nodeType":"Block","src":"12934:78:12","statements":[{"expression":{"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"12952:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2863,"nodeType":"ExpressionStatement","src":"12952:16:12"},{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"12986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"12986:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"13029:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2880,"nodeType":"IfStatement","src":"13025:66:12","trueBody":{"id":2879,"nodeType":"Block","src":"13047:44:12","statements":[{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13065:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"13065:11:12"}]}}]},{"expression":{"id":2882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13117:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2763,"id":2883,"nodeType":"Return","src":"13110:13:12"}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"12089:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:12","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"value","nameLocation":"12237:5:12","nodeType":"VariableDeclaration","scope":2885,"src":"12229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:12"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2885,"src":"12267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:12"},"scope":3065,"src":"12214:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"13365:170:12","statements":[{"id":2918,"nodeType":"UncheckedBlock","src":"13375:154:12","statements":[{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"result","nameLocation":"13407:6:12","nodeType":"VariableDeclaration","scope":2918,"src":"13399:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2901,"initialValue":{"arguments":[{"id":2899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"13422:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2885,2920],"referencedDeclaration":2885,"src":"13416:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"13449:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2904,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"13476:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}],"id":2903,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"13459:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2022_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"13495:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"13504:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:12","trueExpression":{"hexValue":"31","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2895,"id":2917,"nodeType":"Return","src":"13442:76:12"}]}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"13136:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:12","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"value","nameLocation":"13307:5:12","nodeType":"VariableDeclaration","scope":2920,"src":"13299:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:12","nodeType":"VariableDeclaration","scope":2920,"src":"13314:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"},"typeName":{"id":2890,"nodeType":"UserDefinedTypeName","pathNode":{"id":2889,"name":"Rounding","nameLocations":["13314:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2022,"src":"13314:8:12"},"referencedDeclaration":2022,"src":"13314:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:12"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2920,"src":"13356:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:12"},"scope":3065,"src":"13284:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"13855:600:12","statements":[{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"result","nameLocation":"13873:6:12","nodeType":"VariableDeclaration","scope":3006,"src":"13865:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2931,"initialValue":{"hexValue":"30","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:12"},{"id":3003,"nodeType":"UncheckedBlock","src":"13893:533:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"13921:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"IfStatement","src":"13917:98:12","trueBody":{"id":2945,"nodeType":"Block","src":"13939:76:12","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"13957:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"13957:13:12"},{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"13988:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"13988:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14032:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2961,"nodeType":"IfStatement","src":"14028:95:12","trueBody":{"id":2960,"nodeType":"Block","src":"14049:74:12","statements":[{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14067:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"14067:12:12"},{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"14097:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"14097:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14140:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2976,"nodeType":"IfStatement","src":"14136:95:12","trueBody":{"id":2975,"nodeType":"Block","src":"14157:74:12","statements":[{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"14175:12:12"},{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"14205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2974,"nodeType":"ExpressionStatement","src":"14205:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"14244:95:12","trueBody":{"id":2990,"nodeType":"Block","src":"14265:74:12","statements":[{"expression":{"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14283:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2985,"nodeType":"ExpressionStatement","src":"14283:12:12"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"14313:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"14313:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"14356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"14352:64:12","trueBody":{"id":3001,"nodeType":"Block","src":"14372:44:12","statements":[{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"14390:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"14390:11:12"}]}}]},{"expression":{"id":3004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"14442:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2927,"id":3005,"nodeType":"Return","src":"14435:13:12"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"13541:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:12","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"value","nameLocation":"13816:5:12","nodeType":"VariableDeclaration","scope":3007,"src":"13808:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:12"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"13846:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:12"},"scope":3065,"src":"13792:663:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"14692:177:12","statements":[{"id":3043,"nodeType":"UncheckedBlock","src":"14702:161:12","statements":[{"assignments":[3019],"declarations":[{"constant":false,"id":3019,"mutability":"mutable","name":"result","nameLocation":"14734:6:12","nodeType":"VariableDeclaration","scope":3043,"src":"14726:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3023,"initialValue":{"arguments":[{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"14750:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3020,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3007,3045],"referencedDeclaration":3007,"src":"14743:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"14777:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3026,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"14804:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}],"id":3025,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"14787:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2022_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"14823:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"14838:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:12","trueExpression":{"hexValue":"31","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3017,"id":3042,"nodeType":"Return","src":"14770:82:12"}]}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"14461:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:12","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"value","nameLocation":"14634:5:12","nodeType":"VariableDeclaration","scope":3045,"src":"14626:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:12","nodeType":"VariableDeclaration","scope":3045,"src":"14641:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"},"typeName":{"id":3012,"nodeType":"UserDefinedTypeName","pathNode":{"id":3011,"name":"Rounding","nameLocations":["14641:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2022,"src":"14641:8:12"},"referencedDeclaration":2022,"src":"14641:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:12"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3045,"src":"14683:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:12"},"scope":3065,"src":"14610:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3063,"nodeType":"Block","src":"15067:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3056,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"15090:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}],"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3054,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:12","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3053,"id":3062,"nodeType":"Return","src":"15077:31:12"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"14875:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:12","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:12","nodeType":"VariableDeclaration","scope":3064,"src":"15019:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"},"typeName":{"id":3048,"nodeType":"UserDefinedTypeName","pathNode":{"id":3047,"name":"Rounding","nameLocations":["15019:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2022,"src":"15019:8:12"},"referencedDeclaration":2022,"src":"15019:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2022","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:12"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3064,"src":"15061:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3051,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:12"},"scope":3065,"src":"14993:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3066,"src":"203:14914:12","usedErrors":[2017],"usedEvents":[]}],"src":"103:15015:12"},"id":12},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3170]},"id":3171,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3067,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"135:80:13","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3170,"linearizedBaseContracts":[3170],"name":"SignedMath","nameLocation":"224:10:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3085,"nodeType":"Block","src":"376:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"393:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"397:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"405:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:13","trueExpression":{"id":3081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"401:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3077,"id":3084,"nodeType":"Return","src":"386:20:13"}]},"documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"241:66:13","text":" @dev Returns the largest of two signed numbers."},"id":3086,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:13","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"a","nameLocation":"332:1:13","nodeType":"VariableDeclaration","scope":3086,"src":"325:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3070,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3073,"mutability":"mutable","name":"b","nameLocation":"342:1:13","nodeType":"VariableDeclaration","scope":3086,"src":"335:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3072,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:13"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3086,"src":"368:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3075,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:13"},"scope":3170,"src":"312:101:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3103,"nodeType":"Block","src":"555:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"572:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3097,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"576:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"584:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:13","trueExpression":{"id":3099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"580:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3095,"id":3102,"nodeType":"Return","src":"565:20:13"}]},"documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"419:67:13","text":" @dev Returns the smallest of two signed numbers."},"id":3104,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:13","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"a","nameLocation":"511:1:13","nodeType":"VariableDeclaration","scope":3104,"src":"504:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3088,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"b","nameLocation":"521:1:13","nodeType":"VariableDeclaration","scope":3104,"src":"514:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3090,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:13"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3104,"src":"547:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3093,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:13"},"scope":3170,"src":"491:101:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3147,"nodeType":"Block","src":"797:162:13","statements":[{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"x","nameLocation":"866:1:13","nodeType":"VariableDeclaration","scope":3147,"src":"859:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3114,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3128,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"871:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"875:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"882:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"886:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:13"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"911:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"931:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:13","typeDescriptions":{}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3130,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:13","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"945:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"949:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3113,"id":3146,"nodeType":"Return","src":"904:48:13"}]},"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"598:126:13","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3148,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:13","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"a","nameLocation":"753:1:13","nodeType":"VariableDeclaration","scope":3148,"src":"746:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3106,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"b","nameLocation":"763:1:13","nodeType":"VariableDeclaration","scope":3148,"src":"756:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3108,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:13"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"789:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3111,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:13"},"scope":3170,"src":"729:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3168,"nodeType":"Block","src":"1103:158:13","statements":[{"id":3167,"nodeType":"UncheckedBlock","src":"1113:142:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"1228:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:13","subExpression":{"id":3162,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"1242:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:13","trueExpression":{"id":3161,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"1237:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:13","typeDescriptions":{}}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3155,"id":3166,"nodeType":"Return","src":"1213:31:13"}]}]},"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"965:78:13","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3169,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:13","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"n","nameLocation":"1068:1:13","nodeType":"VariableDeclaration","scope":3169,"src":"1061:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3150,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:13"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3169,"src":"1094:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:13"},"scope":3170,"src":"1048:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3171,"src":"216:1047:13","usedErrors":[],"usedEvents":[]}],"src":"109:1155:13"},"id":13},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[3783]},"id":3784,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3172,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"231:1098:14","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3783,"linearizedBaseContracts":[3783],"name":"EnumerableSet","nameLocation":"1338:13:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3181,"members":[{"constant":false,"id":3176,"mutability":"mutable","name":"_values","nameLocation":"1862:7:14","nodeType":"VariableDeclaration","scope":3181,"src":"1852:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3175,"nodeType":"ArrayTypeName","src":"1852:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:14","nodeType":"VariableDeclaration","scope":3181,"src":"2020:44:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3179,"keyName":"value","keyNameLocation":"2036:5:14","keyType":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:14","nodeType":"StructDefinition","scope":3783,"src":"1798:273:14","visibility":"public"},{"body":{"id":3222,"nodeType":"Block","src":"2310:337:14","statements":[{"condition":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:14","subExpression":{"arguments":[{"id":3193,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"2335:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"2340:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3192,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2325:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3220,"nodeType":"Block","src":"2604:37:14","statements":[{"expression":{"hexValue":"66616c7365","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3191,"id":3219,"nodeType":"Return","src":"2618:12:14"}]},"id":3221,"nodeType":"IfStatement","src":"2320:321:14","trueBody":{"id":3217,"nodeType":"Block","src":"2348:250:14","statements":[{"expression":{"arguments":[{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"2379:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3197,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"2362:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"2362:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:14","memberName":"push","nodeType":"MemberAccess","src":"2362:16:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3204,"nodeType":"ExpressionStatement","src":"2362:23:14"},{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3205,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"2520:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"2520:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3209,"indexExpression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"2535:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3210,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"2544:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"2544:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:14","memberName":"length","nodeType":"MemberAccess","src":"2544:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3214,"nodeType":"ExpressionStatement","src":"2520:42:14"},{"expression":{"hexValue":"74727565","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3191,"id":3216,"nodeType":"Return","src":"2576:11:14"}]}}]},"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"2077:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:14","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"set","nameLocation":"2267:3:14","nodeType":"VariableDeclaration","scope":3223,"src":"2255:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3184,"nodeType":"UserDefinedTypeName","pathNode":{"id":3183,"name":"Set","nameLocations":["2255:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"2255:3:14"},"referencedDeclaration":3181,"src":"2255:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"value","nameLocation":"2280:5:14","nodeType":"VariableDeclaration","scope":3223,"src":"2272:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:14"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3223,"src":"2304:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3189,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:14"},"scope":3783,"src":"2241:406:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3306,"nodeType":"Block","src":"2887:1296:14","statements":[{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"position","nameLocation":"2999:8:14","nodeType":"VariableDeclaration","scope":3306,"src":"2991:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3240,"initialValue":{"baseExpression":{"expression":{"id":3236,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3010:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"3010:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3239,"indexExpression":{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3025:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3241,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"3046:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3304,"nodeType":"Block","src":"4140:37:14","statements":[{"expression":{"hexValue":"66616c7365","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3233,"id":3303,"nodeType":"Return","src":"4154:12:14"}]},"id":3305,"nodeType":"IfStatement","src":"3042:1135:14","trueBody":{"id":3301,"nodeType":"Block","src":"3061:1073:14","statements":[{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:14","nodeType":"VariableDeclaration","scope":3301,"src":"3413:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"3434:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:14"},{"assignments":[3251],"declarations":[{"constant":false,"id":3251,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:14","nodeType":"VariableDeclaration","scope":3301,"src":"3460:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3257,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3480:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"3480:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:14","memberName":"length","nodeType":"MemberAccess","src":"3480:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3521:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3259,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"3535:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3285,"nodeType":"IfStatement","src":"3517:378:14","trueBody":{"id":3284,"nodeType":"Block","src":"3546:349:14","statements":[{"assignments":[3262],"declarations":[{"constant":false,"id":3262,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:14","nodeType":"VariableDeclaration","scope":3284,"src":"3564:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3267,"initialValue":{"baseExpression":{"expression":{"id":3263,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3584:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"3584:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3266,"indexExpression":{"id":3265,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"3596:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:14"},{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3268,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3705:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"3705:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3272,"indexExpression":{"id":3270,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3717:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3273,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3731:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3275,"nodeType":"ExpressionStatement","src":"3705:35:14"},{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3276,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3844:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"3844:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3280,"indexExpression":{"id":3278,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3859:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3281,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"3872:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3283,"nodeType":"ExpressionStatement","src":"3844:36:14"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3286,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3973:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"3973:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:14","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:14","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3292,"nodeType":"ExpressionStatement","src":"3973:17:14"},{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:14","subExpression":{"baseExpression":{"expression":{"id":3293,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4076:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"4076:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3296,"indexExpression":{"id":3295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"4091:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"ExpressionStatement","src":"4069:28:14"},{"expression":{"hexValue":"74727565","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3233,"id":3300,"nodeType":"Return","src":"4112:11:14"}]}}]},"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"2653:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:14","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"set","nameLocation":"2844:3:14","nodeType":"VariableDeclaration","scope":3307,"src":"2832:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3226,"nodeType":"UserDefinedTypeName","pathNode":{"id":3225,"name":"Set","nameLocations":["2832:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"2832:3:14"},"referencedDeclaration":3181,"src":"2832:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"value","nameLocation":"2857:5:14","nodeType":"VariableDeclaration","scope":3307,"src":"2849:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:14"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"2881:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3231,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:14"},"scope":3783,"src":"2815:1368:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3325,"nodeType":"Block","src":"4343:50:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3318,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"4360:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:14","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"4360:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3321,"indexExpression":{"id":3320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"4375:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3317,"id":3324,"nodeType":"Return","src":"4353:33:14"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"4189:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:14","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"set","nameLocation":"4295:3:14","nodeType":"VariableDeclaration","scope":3326,"src":"4283:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3310,"nodeType":"UserDefinedTypeName","pathNode":{"id":3309,"name":"Set","nameLocations":["4283:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"4283:3:14"},"referencedDeclaration":3181,"src":"4283:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"value","nameLocation":"4308:5:14","nodeType":"VariableDeclaration","scope":3326,"src":"4300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:14"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3326,"src":"4337:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3315,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:14"},"scope":3783,"src":"4264:129:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3339,"nodeType":"Block","src":"4539:42:14","statements":[{"expression":{"expression":{"expression":{"id":3335,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"4556:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"4556:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:14","memberName":"length","nodeType":"MemberAccess","src":"4556:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3334,"id":3338,"nodeType":"Return","src":"4549:25:14"}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"4399:70:14","text":" @dev Returns the number of values on the set. O(1)."},"id":3340,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:14","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"set","nameLocation":"4503:3:14","nodeType":"VariableDeclaration","scope":3340,"src":"4491:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3329,"nodeType":"UserDefinedTypeName","pathNode":{"id":3328,"name":"Set","nameLocations":["4491:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"4491:3:14"},"referencedDeclaration":3181,"src":"4491:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:14"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3340,"src":"4530:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:14"},"scope":3783,"src":"4474:107:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3356,"nodeType":"Block","src":"4999:42:14","statements":[{"expression":{"baseExpression":{"expression":{"id":3351,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"5016:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"5016:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3354,"indexExpression":{"id":3353,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"5028:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3350,"id":3355,"nodeType":"Return","src":"5009:25:14"}]},"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"4587:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3357,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:14","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"set","nameLocation":"4948:3:14","nodeType":"VariableDeclaration","scope":3357,"src":"4936:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3343,"nodeType":"UserDefinedTypeName","pathNode":{"id":3342,"name":"Set","nameLocations":["4936:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"4936:3:14"},"referencedDeclaration":3181,"src":"4936:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"index","nameLocation":"4961:5:14","nodeType":"VariableDeclaration","scope":3357,"src":"4953:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:14"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3357,"src":"4990:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:14"},"scope":3783,"src":"4923:118:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3370,"nodeType":"Block","src":"5655:35:14","statements":[{"expression":{"expression":{"id":3367,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"5672:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:14","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"5672:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3366,"id":3369,"nodeType":"Return","src":"5665:18:14"}]},"documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"5047:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:14","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"set","nameLocation":"5610:3:14","nodeType":"VariableDeclaration","scope":3371,"src":"5598:15:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3360,"nodeType":"UserDefinedTypeName","pathNode":{"id":3359,"name":"Set","nameLocations":["5598:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"5598:3:14"},"referencedDeclaration":3181,"src":"5598:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:14"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"5637:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3364,"nodeType":"ArrayTypeName","src":"5637:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:14"},"scope":3783,"src":"5581:109:14","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3375,"members":[{"constant":false,"id":3374,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:14","nodeType":"VariableDeclaration","scope":3375,"src":"5743:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3373,"nodeType":"UserDefinedTypeName","pathNode":{"id":3372,"name":"Set","nameLocations":["5743:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"5743:3:14"},"referencedDeclaration":3181,"src":"5743:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:14","nodeType":"StructDefinition","scope":3783,"src":"5715:45:14","visibility":"public"},{"body":{"id":3392,"nodeType":"Block","src":"6006:47:14","statements":[{"expression":{"arguments":[{"expression":{"id":3387,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"6028:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"6028:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"6040:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3386,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"6023:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3385,"id":3391,"nodeType":"Return","src":"6016:30:14"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"5766:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3393,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:14","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"set","nameLocation":"5962:3:14","nodeType":"VariableDeclaration","scope":3393,"src":"5943:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"Bytes32Set","nameLocations":["5943:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"5943:10:14"},"referencedDeclaration":3375,"src":"5943:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"value","nameLocation":"5975:5:14","nodeType":"VariableDeclaration","scope":3393,"src":"5967:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:14"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3393,"src":"6000:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3383,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:14"},"scope":3783,"src":"5930:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3410,"nodeType":"Block","src":"6300:50:14","statements":[{"expression":{"arguments":[{"expression":{"id":3405,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6325:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"6325:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"6337:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3404,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"6317:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3403,"id":3409,"nodeType":"Return","src":"6310:33:14"}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"6059:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:14","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"set","nameLocation":"6256:3:14","nodeType":"VariableDeclaration","scope":3411,"src":"6237:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3396,"nodeType":"UserDefinedTypeName","pathNode":{"id":3395,"name":"Bytes32Set","nameLocations":["6237:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"6237:10:14"},"referencedDeclaration":3375,"src":"6237:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"value","nameLocation":"6269:5:14","nodeType":"VariableDeclaration","scope":3411,"src":"6261:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:14"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3411,"src":"6294:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3401,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:14"},"scope":3783,"src":"6221:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3428,"nodeType":"Block","src":"6517:52:14","statements":[{"expression":{"arguments":[{"expression":{"id":3423,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6544:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"6544:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6556:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3422,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"6534:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3421,"id":3427,"nodeType":"Return","src":"6527:35:14"}]},"documentation":{"id":3412,"nodeType":"StructuredDocumentation","src":"6356:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:14","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"set","nameLocation":"6468:3:14","nodeType":"VariableDeclaration","scope":3429,"src":"6449:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3414,"nodeType":"UserDefinedTypeName","pathNode":{"id":3413,"name":"Bytes32Set","nameLocations":["6449:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"6449:10:14"},"referencedDeclaration":3375,"src":"6449:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"value","nameLocation":"6481:5:14","nodeType":"VariableDeclaration","scope":3429,"src":"6473:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:14"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"6511:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3419,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:14"},"scope":3783,"src":"6431:138:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3443,"nodeType":"Block","src":"6722:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3439,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"6747:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"6747:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3438,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"6739:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3437,"id":3442,"nodeType":"Return","src":"6732:26:14"}]},"documentation":{"id":3430,"nodeType":"StructuredDocumentation","src":"6575:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3444,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:14","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"set","nameLocation":"6685:3:14","nodeType":"VariableDeclaration","scope":3444,"src":"6666:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3432,"nodeType":"UserDefinedTypeName","pathNode":{"id":3431,"name":"Bytes32Set","nameLocations":["6666:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"6666:10:14"},"referencedDeclaration":3375,"src":"6666:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:14"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"6713:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:14"},"scope":3783,"src":"6650:115:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"7190:46:14","statements":[{"expression":{"arguments":[{"expression":{"id":3456,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"7211:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"7211:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3458,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"7223:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3455,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"7207:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3454,"id":3460,"nodeType":"Return","src":"7200:29:14"}]},"documentation":{"id":3445,"nodeType":"StructuredDocumentation","src":"6771:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:14","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"set","nameLocation":"7138:3:14","nodeType":"VariableDeclaration","scope":3462,"src":"7119:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3447,"nodeType":"UserDefinedTypeName","pathNode":{"id":3446,"name":"Bytes32Set","nameLocations":["7119:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"7119:10:14"},"referencedDeclaration":3375,"src":"7119:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"index","nameLocation":"7151:5:14","nodeType":"VariableDeclaration","scope":3462,"src":"7143:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:14"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"7181:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:14"},"scope":3783,"src":"7107:129:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3491,"nodeType":"Block","src":"7857:219:14","statements":[{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"store","nameLocation":"7884:5:14","nodeType":"VariableDeclaration","scope":3491,"src":"7867:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3475,"nodeType":"ArrayTypeName","src":"7867:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3481,"initialValue":{"arguments":[{"expression":{"id":3478,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"7900:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3374,"src":"7900:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3477,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"7892:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:14"},{"assignments":[3486],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"result","nameLocation":"7938:6:14","nodeType":"VariableDeclaration","scope":3491,"src":"7921:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3485,"nodeType":"ArrayTypeName","src":"7921:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3487,"nodeType":"VariableDeclarationStatement","src":"7921:23:14"},{"AST":{"nodeType":"YulBlock","src":"8007:39:14","statements":[{"nodeType":"YulAssignment","src":"8021:15:14","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3486,"isOffset":false,"isSlot":false,"src":"8021:6:14","valueSize":1},{"declaration":3476,"isOffset":false,"isSlot":false,"src":"8031:5:14","valueSize":1}],"id":3488,"nodeType":"InlineAssembly","src":"7998:48:14"},{"expression":{"id":3489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"8063:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3471,"id":3490,"nodeType":"Return","src":"8056:13:14"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"7242:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3492,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:14","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"set","nameLocation":"7811:3:14","nodeType":"VariableDeclaration","scope":3492,"src":"7792:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3465,"nodeType":"UserDefinedTypeName","pathNode":{"id":3464,"name":"Bytes32Set","nameLocations":["7792:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"7792:10:14"},"referencedDeclaration":3375,"src":"7792:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:14"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3492,"src":"7839:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3469,"nodeType":"ArrayTypeName","src":"7839:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:14"},"scope":3783,"src":"7776:300:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3496,"members":[{"constant":false,"id":3495,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:14","nodeType":"VariableDeclaration","scope":3496,"src":"8129:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3494,"nodeType":"UserDefinedTypeName","pathNode":{"id":3493,"name":"Set","nameLocations":["8129:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"8129:3:14"},"referencedDeclaration":3181,"src":"8129:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:14","nodeType":"StructDefinition","scope":3783,"src":"8101:45:14","visibility":"public"},{"body":{"id":3522,"nodeType":"Block","src":"8392:74:14","statements":[{"expression":{"arguments":[{"expression":{"id":3508,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8414:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"8414:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"8450:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3514,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:14","typeDescriptions":{}}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:14","typeDescriptions":{}}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:14","typeDescriptions":{}}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3507,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"8409:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3506,"id":3521,"nodeType":"Return","src":"8402:57:14"}]},"documentation":{"id":3497,"nodeType":"StructuredDocumentation","src":"8152:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3523,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:14","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"set","nameLocation":"8348:3:14","nodeType":"VariableDeclaration","scope":3523,"src":"8329:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3499,"nodeType":"UserDefinedTypeName","pathNode":{"id":3498,"name":"AddressSet","nameLocations":["8329:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"8329:10:14"},"referencedDeclaration":3496,"src":"8329:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"value","nameLocation":"8361:5:14","nodeType":"VariableDeclaration","scope":3523,"src":"8353:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:14"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3523,"src":"8386:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3504,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:14"},"scope":3783,"src":"8316:150:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3549,"nodeType":"Block","src":"8713:77:14","statements":[{"expression":{"arguments":[{"expression":{"id":3535,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"8738:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"8738:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"8774:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3541,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:14","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:14","typeDescriptions":{}}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:14","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3534,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"8730:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3533,"id":3548,"nodeType":"Return","src":"8723:60:14"}]},"documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"8472:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:14","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"set","nameLocation":"8669:3:14","nodeType":"VariableDeclaration","scope":3550,"src":"8650:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3526,"nodeType":"UserDefinedTypeName","pathNode":{"id":3525,"name":"AddressSet","nameLocations":["8650:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"8650:10:14"},"referencedDeclaration":3496,"src":"8650:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"value","nameLocation":"8682:5:14","nodeType":"VariableDeclaration","scope":3550,"src":"8674:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3528,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:14"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3550,"src":"8707:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3531,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:14"},"scope":3783,"src":"8634:156:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"8957:79:14","statements":[{"expression":{"arguments":[{"expression":{"id":3562,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"8984:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"8984:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"9020:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3568,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:14","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:14","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:14","typeDescriptions":{}}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3561,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"8974:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3560,"id":3575,"nodeType":"Return","src":"8967:62:14"}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"8796:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:14","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"mutability":"mutable","name":"set","nameLocation":"8908:3:14","nodeType":"VariableDeclaration","scope":3577,"src":"8889:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3553,"nodeType":"UserDefinedTypeName","pathNode":{"id":3552,"name":"AddressSet","nameLocations":["8889:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"8889:10:14"},"referencedDeclaration":3496,"src":"8889:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3556,"mutability":"mutable","name":"value","nameLocation":"8921:5:14","nodeType":"VariableDeclaration","scope":3577,"src":"8913:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:14"},"returnParameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3577,"src":"8951:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3558,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:14"},"scope":3783,"src":"8871:165:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"9189:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3587,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"9214:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"9214:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3586,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"9206:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3585,"id":3590,"nodeType":"Return","src":"9199:26:14"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"9042:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:14","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"set","nameLocation":"9152:3:14","nodeType":"VariableDeclaration","scope":3592,"src":"9133:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3580,"nodeType":"UserDefinedTypeName","pathNode":{"id":3579,"name":"AddressSet","nameLocations":["9133:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"9133:10:14"},"referencedDeclaration":3496,"src":"9133:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:14"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"9180:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:14"},"scope":3783,"src":"9117:115:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"9657:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3610,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"9702:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"9702:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3612,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"9714:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3609,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"9698:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:14","typeDescriptions":{}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3605,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:14","typeDescriptions":{}}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:14","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3602,"id":3617,"nodeType":"Return","src":"9667:56:14"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"9238:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:14","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"set","nameLocation":"9605:3:14","nodeType":"VariableDeclaration","scope":3619,"src":"9586:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3595,"nodeType":"UserDefinedTypeName","pathNode":{"id":3594,"name":"AddressSet","nameLocations":["9586:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"9586:10:14"},"referencedDeclaration":3496,"src":"9586:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"index","nameLocation":"9618:5:14","nodeType":"VariableDeclaration","scope":3619,"src":"9610:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:14"},"returnParameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"9648:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:14"},"scope":3783,"src":"9574:156:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"10351:219:14","statements":[{"assignments":[3633],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"store","nameLocation":"10378:5:14","nodeType":"VariableDeclaration","scope":3648,"src":"10361:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3632,"nodeType":"ArrayTypeName","src":"10361:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3638,"initialValue":{"arguments":[{"expression":{"id":3635,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"10394:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"10394:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3634,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"10386:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:14"},{"assignments":[3643],"declarations":[{"constant":false,"id":3643,"mutability":"mutable","name":"result","nameLocation":"10432:6:14","nodeType":"VariableDeclaration","scope":3648,"src":"10415:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3641,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3642,"nodeType":"ArrayTypeName","src":"10415:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3644,"nodeType":"VariableDeclarationStatement","src":"10415:23:14"},{"AST":{"nodeType":"YulBlock","src":"10501:39:14","statements":[{"nodeType":"YulAssignment","src":"10515:15:14","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3643,"isOffset":false,"isSlot":false,"src":"10515:6:14","valueSize":1},{"declaration":3633,"isOffset":false,"isSlot":false,"src":"10525:5:14","valueSize":1}],"id":3645,"nodeType":"InlineAssembly","src":"10492:48:14"},{"expression":{"id":3646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"10557:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3628,"id":3647,"nodeType":"Return","src":"10550:13:14"}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"9736:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:14","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"set","nameLocation":"10305:3:14","nodeType":"VariableDeclaration","scope":3649,"src":"10286:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3622,"nodeType":"UserDefinedTypeName","pathNode":{"id":3621,"name":"AddressSet","nameLocations":["10286:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"10286:10:14"},"referencedDeclaration":3496,"src":"10286:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3496_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:14"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"10333:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3625,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3626,"nodeType":"ArrayTypeName","src":"10333:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:14"},"scope":3783,"src":"10270:300:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3653,"members":[{"constant":false,"id":3652,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:14","nodeType":"VariableDeclaration","scope":3653,"src":"10617:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3651,"nodeType":"UserDefinedTypeName","pathNode":{"id":3650,"name":"Set","nameLocations":["10617:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"10617:3:14"},"referencedDeclaration":3181,"src":"10617:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:14","nodeType":"StructDefinition","scope":3783,"src":"10592:42:14","visibility":"public"},{"body":{"id":3673,"nodeType":"Block","src":"10877:56:14","statements":[{"expression":{"arguments":[{"expression":{"id":3665,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"10899:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"10899:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"10919:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:14","typeDescriptions":{}}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3664,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"10894:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3663,"id":3672,"nodeType":"Return","src":"10887:39:14"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"10640:159:14","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:14","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"set","nameLocation":"10833:3:14","nodeType":"VariableDeclaration","scope":3674,"src":"10817:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3656,"nodeType":"UserDefinedTypeName","pathNode":{"id":3655,"name":"UintSet","nameLocations":["10817:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"10817:7:14"},"referencedDeclaration":3653,"src":"10817:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"value","nameLocation":"10846:5:14","nodeType":"VariableDeclaration","scope":3674,"src":"10838:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:14"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"10871:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3661,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:14"},"scope":3783,"src":"10804:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"11177:59:14","statements":[{"expression":{"arguments":[{"expression":{"id":3686,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"11202:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"11202:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"11222:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:14","typeDescriptions":{}}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3685,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"11194:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3684,"id":3693,"nodeType":"Return","src":"11187:42:14"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"10939:157:14","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:14","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"set","nameLocation":"11133:3:14","nodeType":"VariableDeclaration","scope":3695,"src":"11117:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3677,"nodeType":"UserDefinedTypeName","pathNode":{"id":3676,"name":"UintSet","nameLocations":["11117:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"11117:7:14"},"referencedDeclaration":3653,"src":"11117:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"value","nameLocation":"11146:5:14","nodeType":"VariableDeclaration","scope":3695,"src":"11138:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:14"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3695,"src":"11171:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3682,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:14"},"scope":3783,"src":"11101:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3715,"nodeType":"Block","src":"11400:61:14","statements":[{"expression":{"arguments":[{"expression":{"id":3707,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"11427:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"11427:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"11447:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:14","typeDescriptions":{}}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3706,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"11417:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3705,"id":3714,"nodeType":"Return","src":"11410:44:14"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"11242:70:14","text":" @dev Returns true if the value is in the set. O(1)."},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:14","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"set","nameLocation":"11351:3:14","nodeType":"VariableDeclaration","scope":3716,"src":"11335:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3698,"nodeType":"UserDefinedTypeName","pathNode":{"id":3697,"name":"UintSet","nameLocations":["11335:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"11335:7:14"},"referencedDeclaration":3653,"src":"11335:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"value","nameLocation":"11364:5:14","nodeType":"VariableDeclaration","scope":3716,"src":"11356:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:14"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3716,"src":"11394:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3703,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:14"},"scope":3783,"src":"11317:144:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3730,"nodeType":"Block","src":"11611:43:14","statements":[{"expression":{"arguments":[{"expression":{"id":3726,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"11636:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"11636:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3725,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"11628:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3724,"id":3729,"nodeType":"Return","src":"11621:26:14"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"11467:70:14","text":" @dev Returns the number of values in the set. O(1)."},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:14","nodeType":"FunctionDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"set","nameLocation":"11574:3:14","nodeType":"VariableDeclaration","scope":3731,"src":"11558:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"UintSet","nameLocations":["11558:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"11558:7:14"},"referencedDeclaration":3653,"src":"11558:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:14"},"returnParameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3731,"src":"11602:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:14"},"scope":3783,"src":"11542:112:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3751,"nodeType":"Block","src":"12076:55:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3745,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"12105:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"12105:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3747,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"12117:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3744,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"12101:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:14","typeDescriptions":{}}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3741,"id":3750,"nodeType":"Return","src":"12086:38:14"}]},"documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"11660:331:14","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3752,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:14","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"set","nameLocation":"12024:3:14","nodeType":"VariableDeclaration","scope":3752,"src":"12008:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3734,"nodeType":"UserDefinedTypeName","pathNode":{"id":3733,"name":"UintSet","nameLocations":["12008:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"12008:7:14"},"referencedDeclaration":3653,"src":"12008:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"index","nameLocation":"12037:5:14","nodeType":"VariableDeclaration","scope":3752,"src":"12029:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:14"},"returnParameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3752,"src":"12067:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:14"},"scope":3783,"src":"11996:135:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"12749:219:14","statements":[{"assignments":[3766],"declarations":[{"constant":false,"id":3766,"mutability":"mutable","name":"store","nameLocation":"12776:5:14","nodeType":"VariableDeclaration","scope":3781,"src":"12759:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3765,"nodeType":"ArrayTypeName","src":"12759:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3771,"initialValue":{"arguments":[{"expression":{"id":3768,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12792:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:14","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"12792:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3181_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3767,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"12784:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3181_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:14"},{"assignments":[3776],"declarations":[{"constant":false,"id":3776,"mutability":"mutable","name":"result","nameLocation":"12830:6:14","nodeType":"VariableDeclaration","scope":3781,"src":"12813:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3775,"nodeType":"ArrayTypeName","src":"12813:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3777,"nodeType":"VariableDeclarationStatement","src":"12813:23:14"},{"AST":{"nodeType":"YulBlock","src":"12899:39:14","statements":[{"nodeType":"YulAssignment","src":"12913:15:14","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3776,"isOffset":false,"isSlot":false,"src":"12913:6:14","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"12923:5:14","valueSize":1}],"id":3778,"nodeType":"InlineAssembly","src":"12890:48:14"},{"expression":{"id":3779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"12955:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3761,"id":3780,"nodeType":"Return","src":"12948:13:14"}]},"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"12137:529:14","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:14","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"set","nameLocation":"12703:3:14","nodeType":"VariableDeclaration","scope":3782,"src":"12687:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3755,"nodeType":"UserDefinedTypeName","pathNode":{"id":3754,"name":"UintSet","nameLocations":["12687:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"12687:7:14"},"referencedDeclaration":3653,"src":"12687:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3653_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:14"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3782,"src":"12731:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ArrayTypeName","src":"12731:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:14"},"scope":3783,"src":"12671:297:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3784,"src":"1330:11640:14","usedErrors":[],"usedEvents":[]}],"src":"205:12766:14"},"id":14},"@uniswap/lib/contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"@uniswap/lib/contracts/libraries/TransferHelper.sol","exportedSymbols":{"TransferHelper":[3943]},"id":3944,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3785,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"46:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"TransferHelper","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3943,"linearizedBaseContracts":[3943],"name":"TransferHelper","nameLocation":"191:14:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3827,"nodeType":"Block","src":"314:332:15","statements":[{"assignments":[3795,3797],"declarations":[{"constant":false,"id":3795,"mutability":"mutable","name":"success","nameLocation":"395:7:15","nodeType":"VariableDeclaration","scope":3827,"src":"390:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3794,"name":"bool","nodeType":"ElementaryTypeName","src":"390:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"data","nameLocation":"417:4:15","nodeType":"VariableDeclaration","scope":3827,"src":"404:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3796,"name":"bytes","nodeType":"ElementaryTypeName","src":"404:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3807,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783039356561376233","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"459:10:15","typeDescriptions":{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},"value":"0x095ea7b3"},{"id":3803,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"471:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"475:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3800,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"436:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"440:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"436:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"436:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3798,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"425:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"431:4:15","memberName":"call","nodeType":"MemberAccess","src":"425:10:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"425:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"389:93:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"513:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"525:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"530:6:15","memberName":"length","nodeType":"MemberAccess","src":"525:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"540:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"525:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"556:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"563:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3817,"name":"bool","nodeType":"ElementaryTypeName","src":"563:4:15","typeDescriptions":{}}}],"id":3819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"562:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3814,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"545:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"549:6:15","memberName":"decode","nodeType":"MemberAccess","src":"545:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"545:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"525:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"524:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"513:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"584:45:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""},"value":"TransferHelper::safeApprove: approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""}],"id":3808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"492:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:147:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3826,"nodeType":"ExpressionStatement","src":"492:147:15"}]},"id":3828,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"221:11:15","nodeType":"FunctionDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"token","nameLocation":"250:5:15","nodeType":"VariableDeclaration","scope":3828,"src":"242:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3786,"name":"address","nodeType":"ElementaryTypeName","src":"242:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"to","nameLocation":"273:2:15","nodeType":"VariableDeclaration","scope":3828,"src":"265:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"value","nameLocation":"293:5:15","nodeType":"VariableDeclaration","scope":3828,"src":"285:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"232:72:15"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[],"src":"314:0:15"},"scope":3943,"src":"212:434:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"755:335:15","statements":[{"assignments":[3838,3840],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"success","nameLocation":"837:7:15","nodeType":"VariableDeclaration","scope":3870,"src":"832:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3837,"name":"bool","nodeType":"ElementaryTypeName","src":"832:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"data","nameLocation":"859:4:15","nodeType":"VariableDeclaration","scope":3870,"src":"846:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3839,"name":"bytes","nodeType":"ElementaryTypeName","src":"846:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3850,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30786139303539636262","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"901:10:15","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":3846,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"913:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"917:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3843,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"878:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"882:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"878:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"878:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3841,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"867:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"873:4:15","memberName":"call","nodeType":"MemberAccess","src":"867:10:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"867:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"831:93:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"955:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3853,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"967:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"972:6:15","memberName":"length","nodeType":"MemberAccess","src":"967:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"967:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"998:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1005:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3860,"name":"bool","nodeType":"ElementaryTypeName","src":"1005:4:15","typeDescriptions":{}}}],"id":3862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1004:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3857,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"987:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"991:6:15","memberName":"decode","nodeType":"MemberAccess","src":"987:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"987:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"967:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"966:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"955:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1026:47:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""},"value":"TransferHelper::safeTransfer: transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""}],"id":3851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"934:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:149:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3869,"nodeType":"ExpressionStatement","src":"934:149:15"}]},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"661:12:15","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"token","nameLocation":"691:5:15","nodeType":"VariableDeclaration","scope":3871,"src":"683:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3829,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"to","nameLocation":"714:2:15","nodeType":"VariableDeclaration","scope":3871,"src":"706:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"value","nameLocation":"734:5:15","nodeType":"VariableDeclaration","scope":3871,"src":"726:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"673:72:15"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"755:0:15"},"scope":3943,"src":"652:438:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3916,"nodeType":"Block","src":"1225:357:15","statements":[{"assignments":[3883,3885],"declarations":[{"constant":false,"id":3883,"mutability":"mutable","name":"success","nameLocation":"1319:7:15","nodeType":"VariableDeclaration","scope":3916,"src":"1314:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3882,"name":"bool","nodeType":"ElementaryTypeName","src":"1314:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"data","nameLocation":"1341:4:15","nodeType":"VariableDeclaration","scope":3916,"src":"1328:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3884,"name":"bytes","nodeType":"ElementaryTypeName","src":"1328:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3896,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783233623837326464","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1383:10:15","typeDescriptions":{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},"value":"0x23b872dd"},{"id":3891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"1395:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3892,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"1401:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1405:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3888,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1360:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1364:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1360:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1360:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3886,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"1349:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:4:15","memberName":"call","nodeType":"MemberAccess","src":"1349:10:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1313:99:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3898,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"1443:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3899,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"1455:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1460:6:15","memberName":"length","nodeType":"MemberAccess","src":"1455:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1470:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1455:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3905,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"1486:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1493:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3906,"name":"bool","nodeType":"ElementaryTypeName","src":"1493:4:15","typeDescriptions":{}}}],"id":3908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1492:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3903,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1475:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1479:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1475:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1475:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1455:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1454:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1443:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1514:51:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""},"value":"TransferHelper::transferFrom: transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""}],"id":3897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1422:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:153:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3915,"nodeType":"ExpressionStatement","src":"1422:153:15"}]},"id":3917,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1105:16:15","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"token","nameLocation":"1139:5:15","nodeType":"VariableDeclaration","scope":3917,"src":"1131:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"from","nameLocation":"1162:4:15","nodeType":"VariableDeclaration","scope":3917,"src":"1154:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"to","nameLocation":"1184:2:15","nodeType":"VariableDeclaration","scope":3917,"src":"1176:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"value","nameLocation":"1204:5:15","nodeType":"VariableDeclaration","scope":3917,"src":"1196:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1121:94:15"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[],"src":"1225:0:15"},"scope":3943,"src":"1096:486:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3941,"nodeType":"Block","src":"1649:153:15","statements":[{"assignments":[3925,null],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"success","nameLocation":"1665:7:15","nodeType":"VariableDeclaration","scope":3941,"src":"1660:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3924,"name":"bool","nodeType":"ElementaryTypeName","src":"1660:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3935,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1700:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3930,"name":"bytes","nodeType":"ElementaryTypeName","src":"1704:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1700:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"1678:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1681:4:15","memberName":"call","nodeType":"MemberAccess","src":"1678:7:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"1693:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1678:21:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1659:54:15"},{"expression":{"arguments":[{"id":3937,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"1731:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1740:54:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""},"value":"TransferHelper::safeTransferETH: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""}],"id":3936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1723:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3940,"nodeType":"ExpressionStatement","src":"1723:72:15"}]},"id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"1597:15:15","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"to","nameLocation":"1621:2:15","nodeType":"VariableDeclaration","scope":3942,"src":"1613:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3918,"name":"address","nodeType":"ElementaryTypeName","src":"1613:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"value","nameLocation":"1633:5:15","nodeType":"VariableDeclaration","scope":3942,"src":"1625:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1625:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1612:27:15"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[],"src":"1649:0:15"},"scope":3943,"src":"1588:214:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3944,"src":"183:1621:15","usedErrors":[],"usedEvents":[]}],"src":"46:1759:15"},"id":15},"contracts/abstracts/OwnablePausableUpgradeable.sol":{"ast":{"absolutePath":"contracts/abstracts/OwnablePausableUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[654],"ERC165Upgradeable":[1214],"IAccessControl":[1297],"IOwnablePausable":[4997],"Initializable":[616],"OwnablePausableUpgradeable":[4158],"PausableUpgradeable":[830]},"id":4159,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3945,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"43:23:16"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":3946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4159,"sourceUnit":363,"src":"68:81:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":3947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4159,"sourceUnit":831,"src":"150:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/abstracts/interfaces/IOwnablePausable.sol","file":"./interfaces/IOwnablePausable.sol","id":3948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4159,"sourceUnit":4998,"src":"226:43:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3950,"name":"IOwnablePausable","nameLocations":["445:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":4997,"src":"445:16:16"},"id":3951,"nodeType":"InheritanceSpecifier","src":"445:16:16"},{"baseName":{"id":3952,"name":"PausableUpgradeable","nameLocations":["463:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":830,"src":"463:19:16"},"id":3953,"nodeType":"InheritanceSpecifier","src":"463:19:16"},{"baseName":{"id":3954,"name":"AccessControlUpgradeable","nameLocations":["484:24:16"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"484:24:16"},"id":3955,"nodeType":"InheritanceSpecifier","src":"484:24:16"}],"canonicalName":"OwnablePausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"271:125:16","text":" @title OwnablePausableUpgradeable\n @dev Bundles Access Control, Pausable and Upgradeable contracts in one."},"fullyImplemented":true,"id":4158,"linearizedBaseContracts":[4158,362,1214,2011,1297,830,654,616,4997],"name":"OwnablePausableUpgradeable","nameLocation":"415:26:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":3960,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"537:11:16","nodeType":"VariableDeclaration","scope":4158,"src":"513:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"513:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"561:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":3957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"551:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"551:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"3d538ecf","id":3962,"mutability":"mutable","name":"paginationSize","nameLocation":"594:14:16","nodeType":"VariableDeclaration","scope":4158,"src":"579:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3975,"nodeType":"Block","src":"710:100:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3967,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"732:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"752:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"756:6:16","memberName":"sender","nodeType":"MemberAccess","src":"752:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3966,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"724:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"724:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c655061757361626c653a206163636573732064656e696564","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"765:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d","typeString":"literal_string \"OwnablePausable: access denied\""},"value":"OwnablePausable: access denied"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d","typeString":"literal_string \"OwnablePausable: access denied\""}],"id":3965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"716:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"716:82:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3973,"nodeType":"ExpressionStatement","src":"716:82:16"},{"id":3974,"nodeType":"PlaceholderStatement","src":"804:1:16"}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"613:73:16","text":" @dev Modifier for checking whether the caller is an admin."},"id":3976,"name":"onlyAdmin","nameLocation":"698:9:16","nodeType":"ModifierDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[],"src":"707:2:16"},"src":"689:121:16","virtual":false,"visibility":"internal"},{"body":{"id":3989,"nodeType":"Block","src":"912:93:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3981,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"934:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"947:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"951:6:16","memberName":"sender","nodeType":"MemberAccess","src":"947:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3980,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c655061757361626c653a206163636573732064656e696564","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"960:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d","typeString":"literal_string \"OwnablePausable: access denied\""},"value":"OwnablePausable: access denied"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d","typeString":"literal_string \"OwnablePausable: access denied\""}],"id":3979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"918:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3987,"nodeType":"ExpressionStatement","src":"918:75:16"},{"id":3988,"nodeType":"PlaceholderStatement","src":"999:1:16"}]},"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"814:73:16","text":" @dev Modifier for checking whether the caller is a pauser."},"id":3990,"name":"onlyPauser","nameLocation":"899:10:16","nodeType":"ModifierDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[],"src":"909:2:16"},"src":"890:115:16","virtual":false,"visibility":"internal"},{"body":{"id":4014,"nodeType":"Block","src":"1140:191:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3997,"name":"__Context_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1146:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1146:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3999,"nodeType":"ExpressionStatement","src":"1146:26:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4000,"name":"__AccessControl_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1178:30:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1178:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4002,"nodeType":"ExpressionStatement","src":"1178:32:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4003,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1216:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4005,"nodeType":"ExpressionStatement","src":"1216:27:16"},{"expression":{"arguments":[{"id":4007,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"1293:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4006,"name":"__OwnablePausableUpgradeable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"1249:43:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1249:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4009,"nodeType":"ExpressionStatement","src":"1249:51:16"},{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4010,"name":"paginationSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"1306:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1323:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1306:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ExpressionStatement","src":"1306:20:16"}]},"id":4015,"implemented":true,"kind":"function","modifiers":[{"id":3995,"kind":"modifierInvocation","modifierName":{"id":3994,"name":"initializer","nameLocations":["1128:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"1128:11:16"},"nodeType":"ModifierInvocation","src":"1128:11:16"}],"name":"__OwnablePausableUpgradeable_init","nameLocation":"1069:33:16","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"_admin","nameLocation":"1111:6:16","nodeType":"VariableDeclaration","scope":4015,"src":"1103:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"1103:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1102:16:16"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"1140:0:16"},"scope":4158,"src":"1060:271:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4033,"nodeType":"Block","src":"1563:86:16","statements":[{"expression":{"arguments":[{"id":4024,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1580:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4025,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"1600:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4023,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1569:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1569:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"ExpressionStatement","src":"1569:38:16"},{"expression":{"arguments":[{"id":4029,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1624:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4030,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"1637:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4028,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1613:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"ExpressionStatement","src":"1613:31:16"}]},"documentation":{"id":4016,"nodeType":"StructuredDocumentation","src":"1335:84:16","text":" @dev Grants `DEFAULT_ADMIN_ROLE`, `PAUSER_ROLE` to the admin account."},"id":4034,"implemented":true,"kind":"function","modifiers":[{"id":4021,"kind":"modifierInvocation","modifierName":{"id":4020,"name":"initializer","nameLocations":["1551:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"1551:11:16"},"nodeType":"ModifierInvocation","src":"1551:11:16"}],"name":"__OwnablePausableUpgradeable_init_unchained","nameLocation":"1482:43:16","nodeType":"FunctionDefinition","parameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"_admin","nameLocation":"1534:6:16","nodeType":"VariableDeclaration","scope":4034,"src":"1526:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4017,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1525:16:16"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[],"src":"1563:0:16"},"scope":4158,"src":"1473:176:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4956],"body":{"id":4048,"nodeType":"Block","src":"1780:55:16","statements":[{"expression":{"arguments":[{"id":4044,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1801:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4045,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"1821:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4043,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1793:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1793:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4042,"id":4047,"nodeType":"Return","src":"1786:44:16"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"1653:51:16","text":" @dev See {IOwnablePausable-isAdmin}."},"functionSelector":"24d7806c","id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"1716:7:16","nodeType":"FunctionDefinition","overrides":{"id":4039,"nodeType":"OverrideSpecifier","overrides":[],"src":"1756:8:16"},"parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"_account","nameLocation":"1732:8:16","nodeType":"VariableDeclaration","scope":4049,"src":"1724:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4036,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1723:18:16"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"1774:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4040,"name":"bool","nodeType":"ElementaryTypeName","src":"1774:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1773:6:16"},"scope":4158,"src":"1707:128:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4962],"body":{"id":4061,"nodeType":"Block","src":"1948:50:16","statements":[{"expression":{"arguments":[{"id":4057,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1964:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4058,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"1984:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4056,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1954:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4060,"nodeType":"ExpressionStatement","src":"1954:39:16"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"1839:52:16","text":" @dev See {IOwnablePausable-addAdmin}."},"functionSelector":"70480275","id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"addAdmin","nameLocation":"1903:8:16","nodeType":"FunctionDefinition","overrides":{"id":4054,"nodeType":"OverrideSpecifier","overrides":[],"src":"1939:8:16"},"parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"_account","nameLocation":"1920:8:16","nodeType":"VariableDeclaration","scope":4062,"src":"1912:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4051,"name":"address","nodeType":"ElementaryTypeName","src":"1912:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1911:18:16"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[],"src":"1948:0:16"},"scope":4158,"src":"1894:104:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4968],"body":{"id":4074,"nodeType":"Block","src":"2117:51:16","statements":[{"expression":{"arguments":[{"id":4070,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2134:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4071,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"2154:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4069,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2123:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2123:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4073,"nodeType":"ExpressionStatement","src":"2123:40:16"}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"2002:55:16","text":" @dev See {IOwnablePausable-removeAdmin}."},"functionSelector":"1785f53c","id":4075,"implemented":true,"kind":"function","modifiers":[],"name":"removeAdmin","nameLocation":"2069:11:16","nodeType":"FunctionDefinition","overrides":{"id":4067,"nodeType":"OverrideSpecifier","overrides":[],"src":"2108:8:16"},"parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"_account","nameLocation":"2089:8:16","nodeType":"VariableDeclaration","scope":4075,"src":"2081:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"2081:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2080:18:16"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[],"src":"2117:0:16"},"scope":4158,"src":"2060:108:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4976],"body":{"id":4089,"nodeType":"Block","src":"2301:48:16","statements":[{"expression":{"arguments":[{"id":4085,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2322:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4086,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"2335:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4084,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2314:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4083,"id":4088,"nodeType":"Return","src":"2307:37:16"}]},"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"2172:52:16","text":" @dev See {IOwnablePausable-isPauser}."},"functionSelector":"46fbf68e","id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"isPauser","nameLocation":"2236:8:16","nodeType":"FunctionDefinition","overrides":{"id":4080,"nodeType":"OverrideSpecifier","overrides":[],"src":"2277:8:16"},"parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"_account","nameLocation":"2253:8:16","nodeType":"VariableDeclaration","scope":4090,"src":"2245:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2244:18:16"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"2295:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4081,"name":"bool","nodeType":"ElementaryTypeName","src":"2295:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2294:6:16"},"scope":4158,"src":"2227:122:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4982],"body":{"id":4102,"nodeType":"Block","src":"2464:43:16","statements":[{"expression":{"arguments":[{"id":4098,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2480:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4099,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"2493:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4097,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2470:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2470:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"ExpressionStatement","src":"2470:32:16"}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"2353:53:16","text":" @dev See {IOwnablePausable-addPauser}."},"functionSelector":"82dc1ec4","id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"addPauser","nameLocation":"2418:9:16","nodeType":"FunctionDefinition","overrides":{"id":4095,"nodeType":"OverrideSpecifier","overrides":[],"src":"2455:8:16"},"parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"_account","nameLocation":"2436:8:16","nodeType":"VariableDeclaration","scope":4103,"src":"2428:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4092,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:18:16"},"returnParameters":{"id":4096,"nodeType":"ParameterList","parameters":[],"src":"2464:0:16"},"scope":4158,"src":"2409:98:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4988],"body":{"id":4115,"nodeType":"Block","src":"2628:44:16","statements":[{"expression":{"arguments":[{"id":4111,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2645:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4112,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"2658:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4110,"name":"revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2634:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2634:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4114,"nodeType":"ExpressionStatement","src":"2634:33:16"}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"2511:56:16","text":" @dev See {IOwnablePausable-removePauser}."},"functionSelector":"6b2c0f55","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"removePauser","nameLocation":"2579:12:16","nodeType":"FunctionDefinition","overrides":{"id":4108,"nodeType":"OverrideSpecifier","overrides":[],"src":"2619:8:16"},"parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"_account","nameLocation":"2600:8:16","nodeType":"VariableDeclaration","scope":4116,"src":"2592:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"2592:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2591:18:16"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[],"src":"2628:0:16"},"scope":4158,"src":"2570:102:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4992],"body":{"id":4126,"nodeType":"Block","src":"2774:19:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4123,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"2780:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2780:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4125,"nodeType":"ExpressionStatement","src":"2780:8:16"}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"2676:49:16","text":" @dev See {IOwnablePausable-pause}."},"functionSelector":"8456cb59","id":4127,"implemented":true,"kind":"function","modifiers":[{"id":4121,"kind":"modifierInvocation","modifierName":{"id":4120,"name":"onlyPauser","nameLocations":["2763:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"2763:10:16"},"nodeType":"ModifierInvocation","src":"2763:10:16"}],"name":"pause","nameLocation":"2737:5:16","nodeType":"FunctionDefinition","overrides":{"id":4119,"nodeType":"OverrideSpecifier","overrides":[],"src":"2754:8:16"},"parameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"2742:2:16"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[],"src":"2774:0:16"},"scope":4158,"src":"2728:65:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4996],"body":{"id":4137,"nodeType":"Block","src":"2899:21:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4134,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2905:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2905:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"ExpressionStatement","src":"2905:10:16"}]},"documentation":{"id":4128,"nodeType":"StructuredDocumentation","src":"2797:51:16","text":" @dev See {IOwnablePausable-unpause}."},"functionSelector":"3f4ba83a","id":4138,"implemented":true,"kind":"function","modifiers":[{"id":4132,"kind":"modifierInvocation","modifierName":{"id":4131,"name":"onlyPauser","nameLocations":["2888:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"2888:10:16"},"nodeType":"ModifierInvocation","src":"2888:10:16"}],"name":"unpause","nameLocation":"2860:7:16","nodeType":"FunctionDefinition","overrides":{"id":4130,"nodeType":"OverrideSpecifier","overrides":[],"src":"2879:8:16"},"parameters":{"id":4129,"nodeType":"ParameterList","parameters":[],"src":"2867:2:16"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[],"src":"2899:0:16"},"scope":4158,"src":"2851:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4156,"nodeType":"Block","src":"2995:107:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"_paginationSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3009:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3027:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3009:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6f726967696e4170703a20696e76616c69642076616c756521","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3030:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01","typeString":"literal_string \"MoriginApp: invalid value!\""},"value":"MoriginApp: invalid value!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01","typeString":"literal_string \"MoriginApp: invalid value!\""}],"id":4145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3001:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4151,"nodeType":"ExpressionStatement","src":"3001:58:16"},{"expression":{"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4152,"name":"paginationSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"3065:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4153,"name":"_paginationSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3082:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4155,"nodeType":"ExpressionStatement","src":"3065:32:16"}]},"functionSelector":"f2407ca4","id":4157,"implemented":true,"kind":"function","modifiers":[{"id":4143,"kind":"modifierInvocation","modifierName":{"id":4142,"name":"onlyAdmin","nameLocations":["2985:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3976,"src":"2985:9:16"},"nodeType":"ModifierInvocation","src":"2985:9:16"}],"name":"setPaginationSize","nameLocation":"2933:17:16","nodeType":"FunctionDefinition","parameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"_paginationSize","nameLocation":"2959:15:16","nodeType":"VariableDeclaration","scope":4157,"src":"2951:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2951:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2950:25:16"},"returnParameters":{"id":4144,"nodeType":"ParameterList","parameters":[],"src":"2995:0:16"},"scope":4158,"src":"2924:178:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4159,"src":"397:2707:16","usedErrors":[379,382,693,696,1224,1227],"usedEvents":[387,685,690,1236,1245,1254]}],"src":"43:3062:16"},"id":16},"contracts/abstracts/Vault.sol":{"ast":{"absolutePath":"contracts/abstracts/Vault.sol","exportedSymbols":{"ContextUpgradeable":[654],"IVault":[5076],"TransferHelper":[3943],"Vault":[4773]},"id":4774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4160,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":4162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4774,"sourceUnit":655,"src":"57:100:17","symbolAliases":[{"foreign":{"id":4161,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"65:18:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@uniswap/lib/contracts/libraries/TransferHelper.sol","file":"@uniswap/lib/contracts/libraries/TransferHelper.sol","id":4164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4774,"sourceUnit":3944,"src":"158:83:17","symbolAliases":[{"foreign":{"id":4163,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"166:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/abstracts/interfaces/IVault.sol","file":"./interfaces/IVault.sol","id":4166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4774,"sourceUnit":5077,"src":"242:48:17","symbolAliases":[{"foreign":{"id":4165,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"250:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4167,"name":"ContextUpgradeable","nameLocations":["319:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":654,"src":"319:18:17"},"id":4168,"nodeType":"InheritanceSpecifier","src":"319:18:17"},{"baseName":{"id":4169,"name":"IVault","nameLocations":["338:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":5076,"src":"338:6:17"},"id":4170,"nodeType":"InheritanceSpecifier","src":"338:6:17"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4773,"linearizedBaseContracts":[4773,5076,654,616],"name":"Vault","nameLocation":"310:5:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4176,"mutability":"mutable","name":"_balances","nameLocation":"434:9:17","nodeType":"VariableDeclaration","scope":4773,"src":"357:86:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4175,"keyName":"account","keyNameLocation":"373:7:17","keyType":{"id":4171,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"357:68:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4174,"keyName":"token","keyNameLocation":"400:5:17","keyType":{"id":4172,"name":"address","nodeType":"ElementaryTypeName","src":"392:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"384:40:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"amount","valueNameLocation":"417:6:17","valueType":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":4184,"mutability":"mutable","name":"_allowances","nameLocation":"548:11:17","nodeType":"VariableDeclaration","scope":4773,"src":"449:110:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"},"typeName":{"id":4183,"keyName":"account","keyNameLocation":"465:7:17","keyType":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"449:90:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4182,"keyName":"token","keyNameLocation":"493:5:17","keyType":{"id":4178,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"476:62:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4181,"keyName":"spender","keyNameLocation":"518:7:17","keyType":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"502:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"visibility":"private"},{"anonymous":false,"eventSelector":"91ed140d4ef0d36cfe0e48d6e199657e7295b810bded34c1c95874b2b676e06d","id":4192,"name":"VaultApproval","nameLocation":"573:13:17","nodeType":"EventDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"603:5:17","nodeType":"VariableDeclaration","scope":4192,"src":"587:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4188,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"626:7:17","nodeType":"VariableDeclaration","scope":4192,"src":"610:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4187,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4190,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"651:5:17","nodeType":"VariableDeclaration","scope":4192,"src":"635:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"586:71:17"},"src":"566:92:17"},{"anonymous":false,"eventSelector":"c4298a5beffbb92832adef4bde23a2148eea5117fee88fd06e963ddcb4a523f4","id":4202,"name":"VaultTransfer","nameLocation":"670:13:17","nodeType":"EventDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"692:5:17","nodeType":"VariableDeclaration","scope":4202,"src":"684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4193,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4196,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"707:4:17","nodeType":"VariableDeclaration","scope":4202,"src":"699:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4198,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"721:2:17","nodeType":"VariableDeclaration","scope":4202,"src":"713:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4197,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4200,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"733:5:17","nodeType":"VariableDeclaration","scope":4202,"src":"725:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"683:56:17"},"src":"663:77:17"},{"anonymous":false,"eventSelector":"5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62","id":4210,"name":"Deposit","nameLocation":"779:7:17","nodeType":"EventDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"803:5:17","nodeType":"VariableDeclaration","scope":4210,"src":"787:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4203,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4206,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"826:4:17","nodeType":"VariableDeclaration","scope":4210,"src":"810:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4205,"name":"address","nodeType":"ElementaryTypeName","src":"810:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4208,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"840:5:17","nodeType":"VariableDeclaration","scope":4210,"src":"832:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"786:60:17"},"src":"773:74:17"},{"anonymous":false,"eventSelector":"2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398","id":4218,"name":"Withdrawal","nameLocation":"887:10:17","nodeType":"EventDefinition","parameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"914:5:17","nodeType":"VariableDeclaration","scope":4218,"src":"898:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4211,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4214,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"937:2:17","nodeType":"VariableDeclaration","scope":4218,"src":"921:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4213,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4216,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"949:5:17","nodeType":"VariableDeclaration","scope":4218,"src":"941:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"897:58:17"},"src":"881:75:17"},{"errorSelector":"d5d258fa","id":4222,"name":"VaultInvalidApprover","nameLocation":"973:20:17","nodeType":"ErrorDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"approver","nameLocation":"1002:8:17","nodeType":"VariableDeclaration","scope":4222,"src":"994:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4219,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:18:17"},"src":"967:45:17"},{"errorSelector":"0abbbe2e","id":4226,"name":"VaultInvalidSpender","nameLocation":"1024:19:17","nodeType":"ErrorDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"spender","nameLocation":"1052:7:17","nodeType":"VariableDeclaration","scope":4226,"src":"1044:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4223,"name":"address","nodeType":"ElementaryTypeName","src":"1044:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1043:17:17"},"src":"1018:43:17"},{"errorSelector":"f4d2be29","id":4230,"name":"VaultInvalidSender","nameLocation":"1072:18:17","nodeType":"ErrorDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"sender","nameLocation":"1099:6:17","nodeType":"VariableDeclaration","scope":4230,"src":"1091:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1090:16:17"},"src":"1066:41:17"},{"errorSelector":"e0823dd8","id":4234,"name":"VaultInvalidReceiver","nameLocation":"1118:20:17","nodeType":"ErrorDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"receiver","nameLocation":"1147:8:17","nodeType":"VariableDeclaration","scope":4234,"src":"1139:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1138:18:17"},"src":"1112:45:17"},{"errorSelector":"cf7e3678","id":4242,"name":"VaultInsufficientAllowance","nameLocation":"1169:26:17","nodeType":"ErrorDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"spender","nameLocation":"1204:7:17","nodeType":"VariableDeclaration","scope":4242,"src":"1196:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4235,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4238,"mutability":"mutable","name":"currentAllowance","nameLocation":"1221:16:17","nodeType":"VariableDeclaration","scope":4242,"src":"1213:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4240,"mutability":"mutable","name":"value","nameLocation":"1247:5:17","nodeType":"VariableDeclaration","scope":4242,"src":"1239:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1195:58:17"},"src":"1163:91:17"},{"errorSelector":"680f1b42","id":4252,"name":"VaultInsufficientBalance","nameLocation":"1275:24:17","nodeType":"ErrorDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"token","nameLocation":"1308:5:17","nodeType":"VariableDeclaration","scope":4252,"src":"1300:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4243,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4246,"mutability":"mutable","name":"from","nameLocation":"1323:4:17","nodeType":"VariableDeclaration","scope":4252,"src":"1315:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4245,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"fromBalance","nameLocation":"1337:11:17","nodeType":"VariableDeclaration","scope":4252,"src":"1329:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"value","nameLocation":"1358:5:17","nodeType":"VariableDeclaration","scope":4252,"src":"1350:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1299:65:17"},"src":"1269:96:17"},{"errorSelector":"e279109d","id":4256,"name":"VaultInvalidAmount","nameLocation":"1377:18:17","nodeType":"ErrorDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"amount","nameLocation":"1404:6:17","nodeType":"VariableDeclaration","scope":4256,"src":"1396:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1395:16:17"},"src":"1371:41:17"},{"errorSelector":"0f30c25e","id":4260,"name":"VaultAdditionalEther","nameLocation":"1423:20:17","nodeType":"ErrorDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"amount","nameLocation":"1452:6:17","nodeType":"VariableDeclaration","scope":4260,"src":"1444:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1443:16:17"},"src":"1417:43:17"},{"baseFunctions":[5045],"body":{"id":4287,"nodeType":"Block","src":"1860:119:17","statements":[{"assignments":[4273],"declarations":[{"constant":false,"id":4273,"mutability":"mutable","name":"owner","nameLocation":"1878:5:17","nodeType":"VariableDeclaration","scope":4287,"src":"1870:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4272,"name":"address","nodeType":"ElementaryTypeName","src":"1870:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4276,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4274,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"1886:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1886:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1870:28:17"},{"expression":{"arguments":[{"id":4278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"1917:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4279,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"1923:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4280,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"1930:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"1939:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1946:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4277,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"1908:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bool)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4284,"nodeType":"ExpressionStatement","src":"1908:43:17"},{"expression":{"hexValue":"74727565","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1968:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4271,"id":4286,"nodeType":"Return","src":"1961:11:17"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"1465:296:17","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"e1f21c67","id":4288,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1775:7:17","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"token","nameLocation":"1791:5:17","nodeType":"VariableDeclaration","scope":4288,"src":"1783:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"1783:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"spender","nameLocation":"1806:7:17","nodeType":"VariableDeclaration","scope":4288,"src":"1798:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4264,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"value","nameLocation":"1823:5:17","nodeType":"VariableDeclaration","scope":4288,"src":"1815:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1782:47:17"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4288,"src":"1854:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4269,"name":"bool","nodeType":"ElementaryTypeName","src":"1854:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1853:6:17"},"scope":4773,"src":"1766:213:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4350,"nodeType":"Block","src":"2104:346:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2118:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2135:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2127:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:17","typeDescriptions":{}}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2127:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2118:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"2114:89:17","trueBody":{"id":4314,"nodeType":"Block","src":"2139:64:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4308,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:17","typeDescriptions":{}}},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4307,"name":"VaultInvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"2160:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2160:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4313,"nodeType":"RevertStatement","src":"2153:39:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2216:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2235:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4317,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:17","typeDescriptions":{}}},"id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2216:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4330,"nodeType":"IfStatement","src":"2212:90:17","trueBody":{"id":4329,"nodeType":"Block","src":"2239:63:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2288:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2280:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4323,"name":"address","nodeType":"ElementaryTypeName","src":"2280:7:17","typeDescriptions":{}}},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2280:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4322,"name":"VaultInvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"2260:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2260:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4328,"nodeType":"RevertStatement","src":"2253:38:17"}]}},{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4331,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"2311:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":4335,"indexExpression":{"id":4332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2323:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2311:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4336,"indexExpression":{"id":4333,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"2330:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2311:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4337,"indexExpression":{"id":4334,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2337:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2311:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"2348:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2311:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"2311:42:17"},{"condition":{"id":4341,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"2367:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4349,"nodeType":"IfStatement","src":"2363:81:17","trueBody":{"id":4348,"nodeType":"Block","src":"2378:66:17","statements":[{"eventCall":{"arguments":[{"id":4343,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2411:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4344,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2418:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"2427:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"name":"VaultApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"2397:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"EmitStatement","src":"2392:41:17"}]}}]},"id":4351,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"2000:8:17","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"token","nameLocation":"2017:5:17","nodeType":"VariableDeclaration","scope":4351,"src":"2009:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"owner","nameLocation":"2032:5:17","nodeType":"VariableDeclaration","scope":4351,"src":"2024:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4291,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"spender","nameLocation":"2047:7:17","nodeType":"VariableDeclaration","scope":4351,"src":"2039:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4296,"mutability":"mutable","name":"value","nameLocation":"2064:5:17","nodeType":"VariableDeclaration","scope":4351,"src":"2056:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"emitEvent","nameLocation":"2076:9:17","nodeType":"VariableDeclaration","scope":4351,"src":"2071:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4297,"name":"bool","nodeType":"ElementaryTypeName","src":"2071:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2008:78:17"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"2104:0:17"},"scope":4773,"src":"1991:459:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[5009],"body":{"id":4366,"nodeType":"Block","src":"2547:49:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4360,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"2564:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4362,"indexExpression":{"id":4361,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"2574:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2564:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4364,"indexExpression":{"id":4363,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"2583:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2564:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4359,"id":4365,"nodeType":"Return","src":"2557:32:17"}]},"functionSelector":"f7888aec","id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2468:9:17","nodeType":"FunctionDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"account","nameLocation":"2486:7:17","nodeType":"VariableDeclaration","scope":4367,"src":"2478:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4352,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4355,"mutability":"mutable","name":"token","nameLocation":"2502:5:17","nodeType":"VariableDeclaration","scope":4367,"src":"2494:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4354,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2477:31:17"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"2538:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2538:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2537:9:17"},"scope":4773,"src":"2459:137:17","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[5021],"body":{"id":4393,"nodeType":"Block","src":"2881:109:17","statements":[{"assignments":[4380],"declarations":[{"constant":false,"id":4380,"mutability":"mutable","name":"owner","nameLocation":"2899:5:17","nodeType":"VariableDeclaration","scope":4393,"src":"2891:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4379,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4383,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4381,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2907:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2907:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2891:28:17"},{"expression":{"arguments":[{"id":4385,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"2939:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4386,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"2945:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"2952:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4384,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"2929:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4390,"nodeType":"ExpressionStatement","src":"2929:33:17"},{"expression":{"hexValue":"74727565","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2979:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4378,"id":4392,"nodeType":"Return","src":"2972:11:17"}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"2603:184:17","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"beabacc8","id":4394,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2801:8:17","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"token","nameLocation":"2818:5:17","nodeType":"VariableDeclaration","scope":4394,"src":"2810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4369,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"to","nameLocation":"2832:2:17","nodeType":"VariableDeclaration","scope":4394,"src":"2824:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4371,"name":"address","nodeType":"ElementaryTypeName","src":"2824:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"value","nameLocation":"2844:5:17","nodeType":"VariableDeclaration","scope":4394,"src":"2836:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2809:41:17"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4394,"src":"2875:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4376,"name":"bool","nodeType":"ElementaryTypeName","src":"2875:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2874:6:17"},"scope":4773,"src":"2792:198:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[5059],"body":{"id":4429,"nodeType":"Block","src":"3658:163:17","statements":[{"assignments":[4409],"declarations":[{"constant":false,"id":4409,"mutability":"mutable","name":"spender","nameLocation":"3676:7:17","nodeType":"VariableDeclaration","scope":4429,"src":"3668:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"3668:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4412,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4410,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3686:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3668:30:17"},{"expression":{"arguments":[{"id":4414,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"3724:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"3730:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4416,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"3736:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4413,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"3708:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3708:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4419,"nodeType":"ExpressionStatement","src":"3708:43:17"},{"expression":{"arguments":[{"id":4421,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"3771:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4422,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"3777:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"3783:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"3787:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"3761:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3761:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4426,"nodeType":"ExpressionStatement","src":"3761:32:17"},{"expression":{"hexValue":"74727565","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3810:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4407,"id":4428,"nodeType":"Return","src":"3803:11:17"}]},"documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"2996:549:17","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"15dacbea","id":4430,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3559:12:17","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"token","nameLocation":"3580:5:17","nodeType":"VariableDeclaration","scope":4430,"src":"3572:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4396,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4399,"mutability":"mutable","name":"from","nameLocation":"3595:4:17","nodeType":"VariableDeclaration","scope":4430,"src":"3587:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4398,"name":"address","nodeType":"ElementaryTypeName","src":"3587:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4401,"mutability":"mutable","name":"to","nameLocation":"3609:2:17","nodeType":"VariableDeclaration","scope":4430,"src":"3601:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4400,"name":"address","nodeType":"ElementaryTypeName","src":"3601:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"3621:5:17","nodeType":"VariableDeclaration","scope":4430,"src":"3613:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3571:56:17"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4430,"src":"3652:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4405,"name":"bool","nodeType":"ElementaryTypeName","src":"3652:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3651:6:17"},"scope":4773,"src":"3550:271:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[5033],"body":{"id":4450,"nodeType":"Block","src":"3982:58:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4442,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"3999:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => uint256)))"}},"id":4444,"indexExpression":{"id":4443,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"4011:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3999:18:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4446,"indexExpression":{"id":4445,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"4018:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3999:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4448,"indexExpression":{"id":4447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"4025:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3999:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4441,"id":4449,"nodeType":"Return","src":"3992:41:17"}]},"documentation":{"id":4431,"nodeType":"StructuredDocumentation","src":"3827:47:17","text":" @dev See {IERC20-allowance}."},"functionSelector":"927da105","id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3888:9:17","nodeType":"FunctionDefinition","parameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"token","nameLocation":"3906:5:17","nodeType":"VariableDeclaration","scope":4451,"src":"3898:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"3898:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4435,"mutability":"mutable","name":"owner","nameLocation":"3920:5:17","nodeType":"VariableDeclaration","scope":4451,"src":"3912:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"3912:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4437,"mutability":"mutable","name":"spender","nameLocation":"3935:7:17","nodeType":"VariableDeclaration","scope":4451,"src":"3927:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4436,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3897:46:17"},"returnParameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4451,"src":"3973:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3973:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3972:9:17"},"scope":4773,"src":"3879:161:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4500,"nodeType":"Block","src":"4498:237:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"4512:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4528:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4520:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"4520:7:17","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4520:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4512:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4477,"nodeType":"IfStatement","src":"4508:86:17","trueBody":{"id":4476,"nodeType":"Block","src":"4532:62:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4572:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4470,"name":"address","nodeType":"ElementaryTypeName","src":"4572:7:17","typeDescriptions":{}}},"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4572:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4469,"name":"VaultInvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"4553:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4475,"nodeType":"RevertStatement","src":"4546:37:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"4607:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4621:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4479,"name":"address","nodeType":"ElementaryTypeName","src":"4613:7:17","typeDescriptions":{}}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4607:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4492,"nodeType":"IfStatement","src":"4603:86:17","trueBody":{"id":4491,"nodeType":"Block","src":"4625:64:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4675:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4667:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4485,"name":"address","nodeType":"ElementaryTypeName","src":"4667:7:17","typeDescriptions":{}}},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4484,"name":"VaultInvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"4646:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4646:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"RevertStatement","src":"4639:39:17"}]}},{"expression":{"arguments":[{"id":4494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"4706:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"4712:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4496,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"4718:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"4722:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"4698:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4698:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4499,"nodeType":"ExpressionStatement","src":"4698:30:17"}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"4047:362:17","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":4501,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"4423:9:17","nodeType":"FunctionDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"token","nameLocation":"4441:5:17","nodeType":"VariableDeclaration","scope":4501,"src":"4433:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4453,"name":"address","nodeType":"ElementaryTypeName","src":"4433:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"from","nameLocation":"4456:4:17","nodeType":"VariableDeclaration","scope":4501,"src":"4448:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4458,"mutability":"mutable","name":"to","nameLocation":"4470:2:17","nodeType":"VariableDeclaration","scope":4501,"src":"4462:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"value","nameLocation":"4482:5:17","nodeType":"VariableDeclaration","scope":4501,"src":"4474:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4474:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4432:56:17"},"returnParameters":{"id":4462,"nodeType":"ParameterList","parameters":[],"src":"4498:0:17"},"scope":4773,"src":"4414:321:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"5140:588:17","statements":[{"assignments":[4514],"declarations":[{"constant":false,"id":4514,"mutability":"mutable","name":"fromBalance","nameLocation":"5158:11:17","nodeType":"VariableDeclaration","scope":4560,"src":"5150:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4520,"initialValue":{"baseExpression":{"baseExpression":{"id":4515,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5172:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4517,"indexExpression":{"id":4516,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"5182:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5172:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4519,"indexExpression":{"id":4518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5188:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5172:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5150:44:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5208:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5222:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5208:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4532,"nodeType":"IfStatement","src":"5204:114:17","trueBody":{"id":4531,"nodeType":"Block","src":"5229:89:17","statements":[{"errorCall":{"arguments":[{"id":4525,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5275:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"5282:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4527,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5288:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5301:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"name":"VaultInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"5250:24:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256) pure"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5250:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4530,"nodeType":"RevertStatement","src":"5243:64:17"}]}},{"id":4543,"nodeType":"UncheckedBlock","src":"5327:158:17","statements":[{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4533,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5430:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4536,"indexExpression":{"id":4534,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"5440:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5430:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4537,"indexExpression":{"id":4535,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5446:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5430:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5455:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5455:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5430:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"5430:44:17"}]},{"id":4552,"nodeType":"UncheckedBlock","src":"5494:177:17","statements":[{"expression":{"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4544,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5631:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4547,"indexExpression":{"id":4545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"5641:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5631:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4548,"indexExpression":{"id":4546,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5645:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5631:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5655:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5631:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ExpressionStatement","src":"5631:29:17"}]},{"eventCall":{"arguments":[{"id":4554,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5699:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4555,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"5705:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"5711:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5715:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4553,"name":"VaultTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"5685:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5685:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4559,"nodeType":"EmitStatement","src":"5680:41:17"}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"4741:304:17","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5059:7:17","nodeType":"FunctionDefinition","parameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"token","nameLocation":"5075:5:17","nodeType":"VariableDeclaration","scope":4561,"src":"5067:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4503,"name":"address","nodeType":"ElementaryTypeName","src":"5067:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"from","nameLocation":"5090:4:17","nodeType":"VariableDeclaration","scope":4561,"src":"5082:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4505,"name":"address","nodeType":"ElementaryTypeName","src":"5082:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"to","nameLocation":"5104:2:17","nodeType":"VariableDeclaration","scope":4561,"src":"5096:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"5096:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"value","nameLocation":"5116:5:17","nodeType":"VariableDeclaration","scope":4561,"src":"5108:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5108:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5066:56:17"},"returnParameters":{"id":4512,"nodeType":"ParameterList","parameters":[],"src":"5140:0:17"},"scope":4773,"src":"5050:678:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4612,"nodeType":"Block","src":"6113:400:17","statements":[{"assignments":[4574],"declarations":[{"constant":false,"id":4574,"mutability":"mutable","name":"currentAllowance","nameLocation":"6131:16:17","nodeType":"VariableDeclaration","scope":4612,"src":"6123:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"6123:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4580,"initialValue":{"arguments":[{"id":4576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"6160:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4577,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6166:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4578,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"6173:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4575,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"6150:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,address) view returns (uint256)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6150:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6123:58:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"6195:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6220:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"6220:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6215:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6229:3:17","memberName":"max","nodeType":"MemberAccess","src":"6215:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6195:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4611,"nodeType":"IfStatement","src":"6191:316:17","trueBody":{"id":4610,"nodeType":"Block","src":"6234:273:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"6252:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"6271:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6252:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4598,"nodeType":"IfStatement","src":"6248:130:17","trueBody":{"id":4597,"nodeType":"Block","src":"6278:100:17","statements":[{"errorCall":{"arguments":[{"id":4592,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"6330:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4593,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"6339:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"6357:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4591,"name":"VaultInsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"6303:26:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6303:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4596,"nodeType":"RevertStatement","src":"6296:67:17"}]}},{"id":4609,"nodeType":"UncheckedBlock","src":"6391:106:17","statements":[{"expression":{"arguments":[{"id":4600,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"6428:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4601,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6434:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4602,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"6441:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"6450:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"6469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6450:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6476:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4599,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"6419:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bool)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4608,"nodeType":"ExpressionStatement","src":"6419:63:17"}]}]}}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"5733:271:17","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":4613,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"6018:15:17","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"token","nameLocation":"6042:5:17","nodeType":"VariableDeclaration","scope":4613,"src":"6034:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"6034:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"owner","nameLocation":"6057:5:17","nodeType":"VariableDeclaration","scope":4613,"src":"6049:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"6049:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"spender","nameLocation":"6072:7:17","nodeType":"VariableDeclaration","scope":4613,"src":"6064:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4567,"name":"address","nodeType":"ElementaryTypeName","src":"6064:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"value","nameLocation":"6089:5:17","nodeType":"VariableDeclaration","scope":4613,"src":"6081:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"6081:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6033:62:17"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[],"src":"6113:0:17"},"scope":4773,"src":"6009:504:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[5066],"body":{"id":4679,"nodeType":"Block","src":"6765:551:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"6779:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6796:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6788:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4622,"name":"address","nodeType":"ElementaryTypeName","src":"6788:7:17","typeDescriptions":{}}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6779:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4661,"nodeType":"Block","src":"7049:114:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7066:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7070:5:17","memberName":"value","nodeType":"MemberAccess","src":"7066:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4653,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"7079:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7066:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4660,"nodeType":"IfStatement","src":"7063:90:17","trueBody":{"id":4659,"nodeType":"Block","src":"7087:66:17","statements":[{"errorCall":{"arguments":[{"id":4656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"7131:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4655,"name":"VaultInvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"7112:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7112:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4658,"nodeType":"RevertStatement","src":"7105:33:17"}]}}]},"id":4662,"nodeType":"IfStatement","src":"6775:388:17","trueBody":{"id":4650,"nodeType":"Block","src":"6800:243:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4627,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6860:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6864:5:17","memberName":"value","nodeType":"MemberAccess","src":"6860:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6860:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"IfStatement","src":"6857:87:17","trueBody":{"id":4635,"nodeType":"Block","src":"6876:68:17","statements":[{"errorCall":{"arguments":[{"id":4632,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"6922:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"name":"VaultAdditionalEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"6901:20:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6901:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4634,"nodeType":"RevertStatement","src":"6894:35:17"}]}},{"expression":{"arguments":[{"id":4640,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"6989:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4641,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6996:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6996:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4645,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7018:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$4773","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$4773","typeString":"contract Vault"}],"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7010:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4643,"name":"address","nodeType":"ElementaryTypeName","src":"7010:7:17","typeDescriptions":{}}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7010:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4647,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"7025:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4637,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6957:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3943_$","typeString":"type(library TransferHelper)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6972:16:17","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3917,"src":"6957:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6957:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4649,"nodeType":"ExpressionStatement","src":"6957:75:17"}]}},{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"7218:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4667,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4664,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"7228:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7228:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7218:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4668,"indexExpression":{"id":4666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"7242:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7218:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"7252:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7218:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4671,"nodeType":"ExpressionStatement","src":"7218:40:17"},{"eventCall":{"arguments":[{"id":4673,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"7281:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4674,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"7288:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7288:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"7302:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4672,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"7273:7:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7273:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"EmitStatement","src":"7268:41:17"}]},"documentation":{"id":4614,"nodeType":"StructuredDocumentation","src":"6519:178:17","text":" @dev Allows a user to deposit ERC20 tokens or Ether into the vault.\n @param token The address of the ERC20 token contract, or the zero address for Ether."},"functionSelector":"47e7ef24","id":4680,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"6711:7:17","nodeType":"FunctionDefinition","parameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"token","nameLocation":"6727:5:17","nodeType":"VariableDeclaration","scope":4680,"src":"6719:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4615,"name":"address","nodeType":"ElementaryTypeName","src":"6719:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"amount","nameLocation":"6742:6:17","nodeType":"VariableDeclaration","scope":4680,"src":"6734:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"6734:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6718:31:17"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[],"src":"6765:0:17"},"scope":4773,"src":"6702:614:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[5075],"body":{"id":4763,"nodeType":"Block","src":"7637:690:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7650:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7659:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7650:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"nodeType":"IfStatement","src":"7647:73:17","trueBody":{"id":4697,"nodeType":"Block","src":"7662:58:17","statements":[{"errorCall":{"arguments":[{"id":4694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7702:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4693,"name":"VaultInvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"7683:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4696,"nodeType":"RevertStatement","src":"7676:33:17"}]}},{"assignments":[4700],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"balance","nameLocation":"7737:7:17","nodeType":"VariableDeclaration","scope":4763,"src":"7729:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"7729:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4707,"initialValue":{"baseExpression":{"baseExpression":{"id":4701,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"7747:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4704,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4702,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"7757:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7757:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7747:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4706,"indexExpression":{"id":4705,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"7771:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7747:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7729:48:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"7790:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4709,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7800:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7790:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4716,"nodeType":"IfStatement","src":"7787:79:17","trueBody":{"id":4715,"nodeType":"Block","src":"7808:58:17","statements":[{"errorCall":{"arguments":[{"id":4712,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7848:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4711,"name":"VaultInvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"7829:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4714,"nodeType":"RevertStatement","src":"7822:33:17"}]}},{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4717,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"7913:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4721,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4718,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"7923:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7913:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4722,"indexExpression":{"id":4720,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"7937:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7913:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4723,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7947:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7913:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"7913:40:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"7968:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7985:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7977:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"7977:7:17","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7968:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4755,"nodeType":"Block","src":"8159:117:17","statements":[{"expression":{"arguments":[{"id":4750,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"8247:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"8254:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4752,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"8258:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4747,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"8219:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3943_$","typeString":"type(library TransferHelper)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8234:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3871,"src":"8219:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8219:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4754,"nodeType":"ExpressionStatement","src":"8219:46:17"}]},"id":4756,"nodeType":"IfStatement","src":"7964:312:17","trueBody":{"id":4746,"nodeType":"Block","src":"7989:164:17","statements":[{"assignments":[4733,null],"declarations":[{"constant":false,"id":4733,"mutability":"mutable","name":"sent","nameLocation":"8048:4:17","nodeType":"VariableDeclaration","scope":4746,"src":"8043:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4732,"name":"bool","nodeType":"ElementaryTypeName","src":"8043:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4740,"initialValue":{"arguments":[{"hexValue":"","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8081:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4734,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"8058:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8061:4:17","memberName":"call","nodeType":"MemberAccess","src":"8058:7:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4736,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"8073:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8058:22:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8058:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8042:42:17"},{"expression":{"arguments":[{"id":4742,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"8106:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a204661696c656420746f2073656e64204574686572","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8112:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303","typeString":"literal_string \"Vault: Failed to send Ether\""},"value":"Vault: Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303","typeString":"literal_string \"Vault: Failed to send Ether\""}],"id":4741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8098:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4745,"nodeType":"ExpressionStatement","src":"8098:44:17"}]}},{"eventCall":{"arguments":[{"id":4758,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"8302:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"8309:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4760,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"8313:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4757,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"8291:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8291:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4762,"nodeType":"EmitStatement","src":"8286:34:17"}]},"documentation":{"id":4681,"nodeType":"StructuredDocumentation","src":"7322:243:17","text":" @dev Allows a user to withdraw ERC20 tokens or Ether from the vault.\n @param token The address of the ERC20 token contract, or the zero address for Ether.\n @param amount The amount of tokens or Ether to withdraw."},"functionSelector":"d9caed12","id":4764,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"7579:8:17","nodeType":"FunctionDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"token","nameLocation":"7596:5:17","nodeType":"VariableDeclaration","scope":4764,"src":"7588:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4682,"name":"address","nodeType":"ElementaryTypeName","src":"7588:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"to","nameLocation":"7610:2:17","nodeType":"VariableDeclaration","scope":4764,"src":"7602:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4684,"name":"address","nodeType":"ElementaryTypeName","src":"7602:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4687,"mutability":"mutable","name":"amount","nameLocation":"7622:6:17","nodeType":"VariableDeclaration","scope":4764,"src":"7614:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7587:42:17"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[],"src":"7637:0:17"},"scope":4773,"src":"7570:757:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4767,"nodeType":"Block","src":"8427:2:17","statements":[]},"id":4768,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[],"src":"8407:2:17"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[],"src":"8427:0:17"},"scope":4773,"src":"8400:29:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4771,"nodeType":"Block","src":"8516:2:17","statements":[]},"id":4772,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4769,"nodeType":"ParameterList","parameters":[],"src":"8496:2:17"},"returnParameters":{"id":4770,"nodeType":"ParameterList","parameters":[],"src":"8516:0:17"},"scope":4773,"src":"8488:30:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4774,"src":"292:8228:17","usedErrors":[379,382,4222,4226,4230,4234,4242,4252,4256,4260],"usedEvents":[387,4192,4202,4210,4218]}],"src":"32:8488:17"},"id":17},"contracts/abstracts/interfaces/IAtomicSwapBase.sol":{"ast":{"absolutePath":"contracts/abstracts/interfaces/IAtomicSwapBase.sol","exportedSymbols":{"IAtomicSwapBase":[4946]},"id":4947,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":4775,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IAtomicSwapBase","contractDependencies":[],"contractKind":"interface","documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"64:256:18","text":"@title IAtomicSwapBase\n @notice Interface for defining the basic structures and functionalities required for atomic swap operations.\n @dev This interface includes enums, structs, events, and custom errors essential for implementing atomic swaps."},"fullyImplemented":true,"id":4946,"linearizedBaseContracts":[4946],"name":"IAtomicSwapBase","nameLocation":"330:15:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IAtomicSwapBase.Coin","documentation":{"id":4777,"nodeType":"StructuredDocumentation","src":"357:165:18","text":"@notice Struct representing a cryptocurrency or token with its address and amount.\n @dev Address should be set to the zero address for Ether transactions."},"id":4782,"members":[{"constant":false,"id":4779,"mutability":"mutable","name":"token","nameLocation":"557:5:18","nodeType":"VariableDeclaration","scope":4782,"src":"549:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4778,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"amount","nameLocation":"640:6:18","nodeType":"VariableDeclaration","scope":4782,"src":"632:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Coin","nameLocation":"534:4:18","nodeType":"StructDefinition","scope":4946,"src":"527:163:18","visibility":"public"},{"canonicalName":"IAtomicSwapBase.OrderStatus","documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"696:138:18","text":"@notice Enum defining the possible states of an atomic swap order.\n @dev These states help track the lifecycle of a swap order."},"id":4788,"members":[{"id":4784,"name":"INITIAL","nameLocation":"866:7:18","nodeType":"EnumValue","src":"866:7:18"},{"id":4785,"name":"CANCEL","nameLocation":"932:6:18","nodeType":"EnumValue","src":"932:6:18"},{"id":4786,"name":"COMPLETE","nameLocation":"996:8:18","nodeType":"EnumValue","src":"996:8:18"},{"id":4787,"name":"SYNC","nameLocation":"1074:4:18","nodeType":"EnumValue","src":"1074:4:18"}],"name":"OrderStatus","nameLocation":"844:11:18","nodeType":"EnumDefinition","src":"839:303:18"},{"canonicalName":"IAtomicSwapBase.AtomicSwapOrder","documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"1148:136:18","text":"@notice Struct detailing the attributes of an atomic swap order.\n @dev Captures all necessary information about a swap order."},"id":4817,"members":[{"constant":false,"id":4791,"mutability":"mutable","name":"id","nameLocation":"1330:2:18","nodeType":"VariableDeclaration","scope":4817,"src":"1322:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1322:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"status","nameLocation":"1390:6:18","nodeType":"VariableDeclaration","scope":4817,"src":"1378:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$4788","typeString":"enum IAtomicSwapBase.OrderStatus"},"typeName":{"id":4793,"nodeType":"UserDefinedTypeName","pathNode":{"id":4792,"name":"OrderStatus","nameLocations":["1378:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4788,"src":"1378:11:18"},"referencedDeclaration":4788,"src":"1378:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_OrderStatus_$4788","typeString":"enum IAtomicSwapBase.OrderStatus"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"maker","nameLocation":"1446:5:18","nodeType":"VariableDeclaration","scope":4817,"src":"1438:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4795,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"sellToken","nameLocation":"1499:9:18","nodeType":"VariableDeclaration","scope":4817,"src":"1494:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"},"typeName":{"id":4798,"nodeType":"UserDefinedTypeName","pathNode":{"id":4797,"name":"Coin","nameLocations":["1494:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":4782,"src":"1494:4:18"},"referencedDeclaration":4782,"src":"1494:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"}},"visibility":"internal"},{"constant":false,"id":4801,"mutability":"mutable","name":"taker","nameLocation":"1547:5:18","nodeType":"VariableDeclaration","scope":4817,"src":"1539:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4800,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"buyToken","nameLocation":"1625:8:18","nodeType":"VariableDeclaration","scope":4817,"src":"1620:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"},"typeName":{"id":4803,"nodeType":"UserDefinedTypeName","pathNode":{"id":4802,"name":"Coin","nameLocations":["1620:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":4782,"src":"1620:4:18"},"referencedDeclaration":4782,"src":"1620:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"}},"visibility":"internal"},{"constant":false,"id":4806,"mutability":"mutable","name":"minBidAmount","nameLocation":"1674:12:18","nodeType":"VariableDeclaration","scope":4817,"src":"1666:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4808,"mutability":"mutable","name":"createdAt","nameLocation":"1752:9:18","nodeType":"VariableDeclaration","scope":4817,"src":"1744:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"canceledAt","nameLocation":"1811:10:18","nodeType":"VariableDeclaration","scope":4817,"src":"1803:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1803:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4812,"mutability":"mutable","name":"completedAt","nameLocation":"1875:11:18","nodeType":"VariableDeclaration","scope":4817,"src":"1867:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4814,"mutability":"mutable","name":"expiredAt","nameLocation":"1938:9:18","nodeType":"VariableDeclaration","scope":4817,"src":"1930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4816,"mutability":"mutable","name":"acceptBid","nameLocation":"1996:9:18","nodeType":"VariableDeclaration","scope":4817,"src":"1991:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4815,"name":"bool","nodeType":"ElementaryTypeName","src":"1991:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AtomicSwapOrder","nameLocation":"1296:15:18","nodeType":"StructDefinition","scope":4946,"src":"1289:766:18","visibility":"public"},{"canonicalName":"IAtomicSwapBase.Release","documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"2061:132:18","text":"@notice Struct defining the release parameters for token vesting.\n @dev Used to set vesting schedules for token releases."},"id":4823,"members":[{"constant":false,"id":4820,"mutability":"mutable","name":"durationInHours","nameLocation":"2231:15:18","nodeType":"VariableDeclaration","scope":4823,"src":"2223:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"percentage","nameLocation":"2331:10:18","nodeType":"VariableDeclaration","scope":4823,"src":"2323:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Release","nameLocation":"2205:7:18","nodeType":"StructDefinition","scope":4946,"src":"2198:196:18","visibility":"public"},{"canonicalName":"IAtomicSwapBase.PermitSignature","documentation":{"id":4824,"nodeType":"StructuredDocumentation","src":"2400:158:18","text":"@notice Struct representing a signature for permits in the context of atomic swaps.\n @dev Used for securely authorizing operations in atomic swaps."},"id":4835,"members":[{"constant":false,"id":4826,"mutability":"mutable","name":"v","nameLocation":"2602:1:18","nodeType":"VariableDeclaration","scope":4835,"src":"2596:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4825,"name":"uint8","nodeType":"ElementaryTypeName","src":"2596:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"r","nameLocation":"2656:1:18","nodeType":"VariableDeclaration","scope":4835,"src":"2648:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2648:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"s","nameLocation":"2711:1:18","nodeType":"VariableDeclaration","scope":4835,"src":"2703:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"owner","nameLocation":"2767:5:18","nodeType":"VariableDeclaration","scope":4835,"src":"2759:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4831,"name":"address","nodeType":"ElementaryTypeName","src":"2759:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"deadline","nameLocation":"2821:8:18","nodeType":"VariableDeclaration","scope":4835,"src":"2813:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitSignature","nameLocation":"2570:15:18","nodeType":"StructDefinition","scope":4946,"src":"2563:321:18","visibility":"public"},{"canonicalName":"IAtomicSwapBase.FeeParams","documentation":{"id":4836,"nodeType":"StructuredDocumentation","src":"2890:148:18","text":"@notice Struct for defining fee parameters in a swap.\n @dev Includes fees for both seller and buyer, and the maximum scale for fee rates."},"id":4845,"members":[{"constant":false,"id":4838,"mutability":"mutable","name":"sellerFeeRate","nameLocation":"3078:13:18","nodeType":"VariableDeclaration","scope":4845,"src":"3070:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"buyerFeeRate","nameLocation":"3137:12:18","nodeType":"VariableDeclaration","scope":4845,"src":"3129:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"3129:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"maxFeeRateScale","nameLocation":"3194:15:18","nodeType":"VariableDeclaration","scope":4845,"src":"3186:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4844,"mutability":"mutable","name":"treasury","nameLocation":"3273:8:18","nodeType":"VariableDeclaration","scope":4845,"src":"3265:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4843,"name":"address","nodeType":"ElementaryTypeName","src":"3265:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FeeParams","nameLocation":"3050:9:18","nodeType":"StructDefinition","scope":4946,"src":"3043:298:18","visibility":"public"},{"canonicalName":"IAtomicSwapBase.SwapWithPermitMsg","documentation":{"id":4846,"nodeType":"StructuredDocumentation","src":"3347:170:18","text":"@notice Struct for a message used in swap operations that require permits.\n @dev Includes all necessary details for executing a swap with permit authorization."},"id":4877,"members":[{"constant":false,"id":4848,"mutability":"mutable","name":"uuid","nameLocation":"3565:4:18","nodeType":"VariableDeclaration","scope":4877,"src":"3557:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3557:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4851,"mutability":"mutable","name":"sellToken","nameLocation":"3640:9:18","nodeType":"VariableDeclaration","scope":4877,"src":"3635:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"},"typeName":{"id":4850,"nodeType":"UserDefinedTypeName","pathNode":{"id":4849,"name":"Coin","nameLocations":["3635:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":4782,"src":"3635:4:18"},"referencedDeclaration":4782,"src":"3635:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"}},"visibility":"internal"},{"constant":false,"id":4854,"mutability":"mutable","name":"buyToken","nameLocation":"3697:8:18","nodeType":"VariableDeclaration","scope":4877,"src":"3692:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"},"typeName":{"id":4853,"nodeType":"UserDefinedTypeName","pathNode":{"id":4852,"name":"Coin","nameLocations":["3692:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":4782,"src":"3692:4:18"},"referencedDeclaration":4782,"src":"3692:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$4782_storage_ptr","typeString":"struct IAtomicSwapBase.Coin"}},"visibility":"internal"},{"constant":false,"id":4856,"mutability":"mutable","name":"desiredTaker","nameLocation":"3755:12:18","nodeType":"VariableDeclaration","scope":4877,"src":"3747:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4855,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"minBidAmount","nameLocation":"3842:12:18","nodeType":"VariableDeclaration","scope":4877,"src":"3834:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"acceptBid","nameLocation":"3910:9:18","nodeType":"VariableDeclaration","scope":4877,"src":"3905:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4859,"name":"bool","nodeType":"ElementaryTypeName","src":"3905:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"completeByBid","nameLocation":"3975:13:18","nodeType":"VariableDeclaration","scope":4877,"src":"3970:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4861,"name":"bool","nodeType":"ElementaryTypeName","src":"3970:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"withdrawToSellerAccount","nameLocation":"4057:23:18","nodeType":"VariableDeclaration","scope":4877,"src":"4052:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4863,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"withdrawToBuyerAccount","nameLocation":"4146:22:18","nodeType":"VariableDeclaration","scope":4877,"src":"4141:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4865,"name":"bool","nodeType":"ElementaryTypeName","src":"4141:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"releases","nameLocation":"4238:8:18","nodeType":"VariableDeclaration","scope":4877,"src":"4228:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$4823_storage_$dyn_storage_ptr","typeString":"struct IAtomicSwapBase.Release[]"},"typeName":{"baseType":{"id":4868,"nodeType":"UserDefinedTypeName","pathNode":{"id":4867,"name":"Release","nameLocations":["4228:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4823,"src":"4228:7:18"},"referencedDeclaration":4823,"src":"4228:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Release_$4823_storage_ptr","typeString":"struct IAtomicSwapBase.Release"}},"id":4869,"nodeType":"ArrayTypeName","src":"4228:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$4823_storage_$dyn_storage_ptr","typeString":"struct IAtomicSwapBase.Release[]"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"sellerSignature","nameLocation":"4307:15:18","nodeType":"VariableDeclaration","scope":4877,"src":"4291:31:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"},"typeName":{"id":4872,"nodeType":"UserDefinedTypeName","pathNode":{"id":4871,"name":"PermitSignature","nameLocations":["4291:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":4835,"src":"4291:15:18"},"referencedDeclaration":4835,"src":"4291:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"}},"visibility":"internal"},{"constant":false,"id":4876,"mutability":"mutable","name":"buyerSignature","nameLocation":"4396:14:18","nodeType":"VariableDeclaration","scope":4877,"src":"4380:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"},"typeName":{"id":4875,"nodeType":"UserDefinedTypeName","pathNode":{"id":4874,"name":"PermitSignature","nameLocations":["4380:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":4835,"src":"4380:15:18"},"referencedDeclaration":4835,"src":"4380:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"}},"visibility":"internal"}],"name":"SwapWithPermitMsg","nameLocation":"3529:17:18","nodeType":"StructDefinition","scope":4946,"src":"3522:942:18","visibility":"public"},{"errorSelector":"966753c5","id":4879,"name":"OrderAlreadyExists","nameLocation":"4555:18:18","nodeType":"ErrorDefinition","parameters":{"id":4878,"nodeType":"ParameterList","parameters":[],"src":"4573:2:18"},"src":"4549:27:18"},{"errorSelector":"0fe77d7d","id":4885,"name":"OrderAlreadyExpired","nameLocation":"4587:19:18","nodeType":"ErrorDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"current","nameLocation":"4615:7:18","nodeType":"VariableDeclaration","scope":4885,"src":"4607:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4880,"name":"uint256","nodeType":"ElementaryTypeName","src":"4607:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4883,"mutability":"mutable","name":"expiredTime","nameLocation":"4632:11:18","nodeType":"VariableDeclaration","scope":4885,"src":"4624:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4606:38:18"},"src":"4581:64:18"},{"errorSelector":"45b3a4c7","id":4887,"name":"UnsupportedTokenPair","nameLocation":"4656:20:18","nodeType":"ErrorDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[],"src":"4676:2:18"},"src":"4650:29:18"},{"errorSelector":"5e231fff","id":4889,"name":"InvalidSigners","nameLocation":"4690:14:18","nodeType":"ErrorDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[],"src":"4704:2:18"},"src":"4684:23:18"},{"errorSelector":"08094908","id":4891,"name":"UnauthorizedSender","nameLocation":"4718:18:18","nodeType":"ErrorDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[],"src":"4736:2:18"},"src":"4712:27:18"},{"errorSelector":"46d9be14","id":4895,"name":"InvalidMinBidAmount","nameLocation":"4750:19:18","nodeType":"ErrorDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"amount","nameLocation":"4778:6:18","nodeType":"VariableDeclaration","scope":4895,"src":"4770:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4769:16:18"},"src":"4744:42:18"},{"errorSelector":"f00605cf","id":4901,"name":"InvalidExpirationTime","nameLocation":"4797:21:18","nodeType":"ErrorDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"provided","nameLocation":"4827:8:18","nodeType":"VariableDeclaration","scope":4901,"src":"4819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"4819:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"maximum","nameLocation":"4845:7:18","nodeType":"VariableDeclaration","scope":4901,"src":"4837:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"4837:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4818:35:18"},"src":"4791:63:18"},{"errorSelector":"04157bb4","id":4907,"name":"NotEnoughFund","nameLocation":"4865:13:18","nodeType":"ErrorDefinition","parameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"real","nameLocation":"4887:4:18","nodeType":"VariableDeclaration","scope":4907,"src":"4879:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"4879:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4905,"mutability":"mutable","name":"expected","nameLocation":"4901:8:18","nodeType":"VariableDeclaration","scope":4907,"src":"4893:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4878:32:18"},"src":"4859:52:18"},{"errorSelector":"628dbb96","id":4909,"name":"DuplicateReleaseSchedule","nameLocation":"4922:24:18","nodeType":"ErrorDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[],"src":"4946:2:18"},"src":"4916:33:18"},{"errorSelector":"fd68e07a","id":4911,"name":"ZeroReleaseSchedule","nameLocation":"4960:19:18","nodeType":"ErrorDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[],"src":"4979:2:18"},"src":"4954:28:18"},{"errorSelector":"2b82b70d","id":4913,"name":"InvalidReleasePercentage","nameLocation":"4993:24:18","nodeType":"ErrorDefinition","parameters":{"id":4912,"nodeType":"ParameterList","parameters":[],"src":"5017:2:18"},"src":"4987:33:18"},{"errorSelector":"0b8ad7f1","id":4915,"name":"InvalidTotalPercentage","nameLocation":"5031:22:18","nodeType":"ErrorDefinition","parameters":{"id":4914,"nodeType":"ParameterList","parameters":[],"src":"5053:2:18"},"src":"5025:31:18"},{"errorSelector":"1531e37f","id":4917,"name":"OverMaximumReleaseStep","nameLocation":"5067:22:18","nodeType":"ErrorDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[],"src":"5089:2:18"},"src":"5061:31:18"},{"errorSelector":"e6c4247b","id":4919,"name":"InvalidAddress","nameLocation":"5103:14:18","nodeType":"ErrorDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[],"src":"5117:2:18"},"src":"5097:23:18"},{"errorSelector":"ce431446","id":4921,"name":"InvalidSellerFee","nameLocation":"5131:16:18","nodeType":"ErrorDefinition","parameters":{"id":4920,"nodeType":"ParameterList","parameters":[],"src":"5147:2:18"},"src":"5125:25:18"},{"errorSelector":"b089e48e","id":4923,"name":"InvalidBuyerFee","nameLocation":"5161:15:18","nodeType":"ErrorDefinition","parameters":{"id":4922,"nodeType":"ParameterList","parameters":[],"src":"5176:2:18"},"src":"5155:24:18"},{"errorSelector":"cfe2ea63","id":4925,"name":"InvalidTreasuryAddress","nameLocation":"5190:22:18","nodeType":"ErrorDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[],"src":"5212:2:18"},"src":"5184:31:18"},{"anonymous":false,"eventSelector":"8b82d32987f9a4ae1bc7868a6f104edb711227ec3c9fccb0416a14fcc29bec5a","id":4929,"name":"AtomicSwapOrderCreated","nameLocation":"5308:22:18","nodeType":"EventDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"5347:2:18","nodeType":"VariableDeclaration","scope":4929,"src":"5331:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5331:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5330:20:18"},"src":"5302:49:18"},{"anonymous":false,"eventSelector":"b78df575db6a50ad16fe67f992a0b9073f8b2e498e6ffe0061db8e1f84593cf2","id":4937,"name":"AtomicSwapOrderTook","nameLocation":"5362:19:18","nodeType":"EventDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"5398:2:18","nodeType":"VariableDeclaration","scope":4937,"src":"5382:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5382:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4933,"indexed":true,"mutability":"mutable","name":"maker","nameLocation":"5417:5:18","nodeType":"VariableDeclaration","scope":4937,"src":"5401:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4932,"name":"address","nodeType":"ElementaryTypeName","src":"5401:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4935,"indexed":true,"mutability":"mutable","name":"taker","nameLocation":"5440:5:18","nodeType":"VariableDeclaration","scope":4937,"src":"5424:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4934,"name":"address","nodeType":"ElementaryTypeName","src":"5424:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5381:65:18"},"src":"5356:91:18"},{"anonymous":false,"eventSelector":"add1d5b6c827fee45fa32e72964c9d43d2191c9b8b083889fb2e3f468c718568","id":4945,"name":"AcceptedBid","nameLocation":"5458:11:18","nodeType":"EventDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"indexed":true,"mutability":"mutable","name":"orderID","nameLocation":"5486:7:18","nodeType":"VariableDeclaration","scope":4945,"src":"5470:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5470:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4941,"indexed":true,"mutability":"mutable","name":"bidder","nameLocation":"5511:6:18","nodeType":"VariableDeclaration","scope":4945,"src":"5495:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4940,"name":"address","nodeType":"ElementaryTypeName","src":"5495:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4943,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"5535:6:18","nodeType":"VariableDeclaration","scope":4945,"src":"5519:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5469:73:18"},"src":"5452:91:18"}],"scope":4947,"src":"320:5225:18","usedErrors":[4879,4885,4887,4889,4891,4895,4901,4907,4909,4911,4913,4915,4917,4919,4921,4923,4925],"usedEvents":[4929,4937,4945]}],"src":"39:5507:18"},"id":18},"contracts/abstracts/interfaces/IOwnablePausable.sol":{"ast":{"absolutePath":"contracts/abstracts/interfaces/IOwnablePausable.sol","exportedSymbols":{"IOwnablePausable":[4997]},"id":4998,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":4948,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnablePausable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4997,"linearizedBaseContracts":[4997],"name":"IOwnablePausable","nameLocation":"74:16:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4949,"nodeType":"StructuredDocumentation","src":"95:120:19","text":" @dev Function for checking whether an account has an admin role.\n @param _account - account to check."},"functionSelector":"24d7806c","id":4956,"implemented":false,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"227:7:19","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"_account","nameLocation":"243:8:19","nodeType":"VariableDeclaration","scope":4956,"src":"235:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4950,"name":"address","nodeType":"ElementaryTypeName","src":"235:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"234:18:19"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4956,"src":"276:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4953,"name":"bool","nodeType":"ElementaryTypeName","src":"276:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"275:6:19"},"scope":4997,"src":"218:64:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4957,"nodeType":"StructuredDocumentation","src":"286:189:19","text":" @dev Function for assigning an admin role to the account.\n Can only be called by an account with an admin role.\n @param _account - account to assign an admin role to."},"functionSelector":"70480275","id":4962,"implemented":false,"kind":"function","modifiers":[],"name":"addAdmin","nameLocation":"487:8:19","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"_account","nameLocation":"504:8:19","nodeType":"VariableDeclaration","scope":4962,"src":"496:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"496:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"495:18:19"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[],"src":"522:0:19"},"scope":4997,"src":"478:45:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4963,"nodeType":"StructuredDocumentation","src":"527:192:19","text":" @dev Function for removing an admin role from the account.\n Can only be called by an account with an admin role.\n @param _account - account to remove an admin role from."},"functionSelector":"1785f53c","id":4968,"implemented":false,"kind":"function","modifiers":[],"name":"removeAdmin","nameLocation":"731:11:19","nodeType":"FunctionDefinition","parameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"_account","nameLocation":"751:8:19","nodeType":"VariableDeclaration","scope":4968,"src":"743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4964,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"742:18:19"},"returnParameters":{"id":4967,"nodeType":"ParameterList","parameters":[],"src":"769:0:19"},"scope":4997,"src":"722:48:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"774:120:19","text":" @dev Function for checking whether an account has a pauser role.\n @param _account - account to check."},"functionSelector":"46fbf68e","id":4976,"implemented":false,"kind":"function","modifiers":[],"name":"isPauser","nameLocation":"906:8:19","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"_account","nameLocation":"923:8:19","nodeType":"VariableDeclaration","scope":4976,"src":"915:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"915:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"914:18:19"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"956:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4973,"name":"bool","nodeType":"ElementaryTypeName","src":"956:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"955:6:19"},"scope":4997,"src":"897:65:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"966:186:19","text":" @dev Function for adding a pauser role to the account.\n Can only be called by an account with an admin role.\n @param _account - account to assign a pauser role to."},"functionSelector":"82dc1ec4","id":4982,"implemented":false,"kind":"function","modifiers":[],"name":"addPauser","nameLocation":"1164:9:19","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"_account","nameLocation":"1182:8:19","nodeType":"VariableDeclaration","scope":4982,"src":"1174:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4978,"name":"address","nodeType":"ElementaryTypeName","src":"1174:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1173:18:19"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[],"src":"1200:0:19"},"scope":4997,"src":"1155:46:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"1205:192:19","text":" @dev Function for removing a pauser role from the account.\n Can only be called by an account with an admin role.\n @param _account - account to remove a pauser role from."},"functionSelector":"6b2c0f55","id":4988,"implemented":false,"kind":"function","modifiers":[],"name":"removePauser","nameLocation":"1409:12:19","nodeType":"FunctionDefinition","parameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"_account","nameLocation":"1430:8:19","nodeType":"VariableDeclaration","scope":4988,"src":"1422:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4984,"name":"address","nodeType":"ElementaryTypeName","src":"1422:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1421:18:19"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[],"src":"1448:0:19"},"scope":4997,"src":"1400:49:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"1453:54:19","text":" @dev Function for pausing the contract."},"functionSelector":"8456cb59","id":4992,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"1519:5:19","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[],"src":"1524:2:19"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[],"src":"1535:0:19"},"scope":4997,"src":"1510:26:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"1540:56:19","text":" @dev Function for unpausing the contract."},"functionSelector":"3f4ba83a","id":4996,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"1608:7:19","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[],"src":"1615:2:19"},"returnParameters":{"id":4995,"nodeType":"ParameterList","parameters":[],"src":"1626:0:19"},"scope":4997,"src":"1599:28:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4998,"src":"64:1565:19","usedErrors":[],"usedEvents":[]}],"src":"39:1591:19"},"id":19},"contracts/abstracts/interfaces/IVault.sol":{"ast":{"absolutePath":"contracts/abstracts/interfaces/IVault.sol","exportedSymbols":{"IVault":[5076]},"id":5077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4999,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5076,"linearizedBaseContracts":[5076],"name":"IVault","nameLocation":"67:6:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5000,"nodeType":"StructuredDocumentation","src":"81:71:20","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"f7888aec","id":5009,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"166:9:20","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"token","nameLocation":"184:5:20","nodeType":"VariableDeclaration","scope":5009,"src":"176:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5001,"name":"address","nodeType":"ElementaryTypeName","src":"176:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5004,"mutability":"mutable","name":"account","nameLocation":"198:7:20","nodeType":"VariableDeclaration","scope":5009,"src":"190:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"175:31:20"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5009,"src":"230:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"229:9:20"},"scope":5076,"src":"157:82:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"245:213:20","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"beabacc8","id":5021,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"472:8:20","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"token","nameLocation":"489:5:20","nodeType":"VariableDeclaration","scope":5021,"src":"481:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5011,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"to","nameLocation":"503:2:20","nodeType":"VariableDeclaration","scope":5021,"src":"495:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5013,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5016,"mutability":"mutable","name":"value","nameLocation":"515:5:20","nodeType":"VariableDeclaration","scope":5021,"src":"507:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"480:41:20"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5021,"src":"540:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5018,"name":"bool","nodeType":"ElementaryTypeName","src":"540:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"539:6:20"},"scope":5076,"src":"463:83:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5022,"nodeType":"StructuredDocumentation","src":"552:264:20","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"927da105","id":5033,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"830:9:20","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"token","nameLocation":"848:5:20","nodeType":"VariableDeclaration","scope":5033,"src":"840:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5023,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5026,"mutability":"mutable","name":"owner","nameLocation":"862:5:20","nodeType":"VariableDeclaration","scope":5033,"src":"854:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5025,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"spender","nameLocation":"877:7:20","nodeType":"VariableDeclaration","scope":5033,"src":"869:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5027,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"839:46:20"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"909:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"908:9:20"},"scope":5076,"src":"821:97:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"924:667:20","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"e1f21c67","id":5045,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1605:7:20","nodeType":"FunctionDefinition","parameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"token","nameLocation":"1621:5:20","nodeType":"VariableDeclaration","scope":5045,"src":"1613:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5035,"name":"address","nodeType":"ElementaryTypeName","src":"1613:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5038,"mutability":"mutable","name":"spender","nameLocation":"1636:7:20","nodeType":"VariableDeclaration","scope":5045,"src":"1628:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5037,"name":"address","nodeType":"ElementaryTypeName","src":"1628:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5040,"mutability":"mutable","name":"value","nameLocation":"1653:5:20","nodeType":"VariableDeclaration","scope":5045,"src":"1645:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1645:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1612:47:20"},"returnParameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5045,"src":"1678:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5042,"name":"bool","nodeType":"ElementaryTypeName","src":"1678:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1677:6:20"},"scope":5076,"src":"1596:88:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"1690:297:20","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"15dacbea","id":5059,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2001:12:20","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"token","nameLocation":"2022:5:20","nodeType":"VariableDeclaration","scope":5059,"src":"2014:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5047,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5050,"mutability":"mutable","name":"from","nameLocation":"2037:4:20","nodeType":"VariableDeclaration","scope":5059,"src":"2029:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5049,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"to","nameLocation":"2051:2:20","nodeType":"VariableDeclaration","scope":5059,"src":"2043:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5051,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"2063:5:20","nodeType":"VariableDeclaration","scope":5059,"src":"2055:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2013:56:20"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5059,"src":"2088:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5056,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2087:6:20"},"scope":5076,"src":"1992:102:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"47e7ef24","id":5066,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"2108:7:20","nodeType":"FunctionDefinition","parameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"token","nameLocation":"2124:5:20","nodeType":"VariableDeclaration","scope":5066,"src":"2116:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5060,"name":"address","nodeType":"ElementaryTypeName","src":"2116:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"amount","nameLocation":"2139:6:20","nodeType":"VariableDeclaration","scope":5066,"src":"2131:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2131:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2115:31:20"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[],"src":"2163:0:20"},"scope":5076,"src":"2099:65:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"d9caed12","id":5075,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2178:8:20","nodeType":"FunctionDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"token","nameLocation":"2195:5:20","nodeType":"VariableDeclaration","scope":5075,"src":"2187:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5067,"name":"address","nodeType":"ElementaryTypeName","src":"2187:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5070,"mutability":"mutable","name":"to","nameLocation":"2209:2:20","nodeType":"VariableDeclaration","scope":5075,"src":"2201:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5069,"name":"address","nodeType":"ElementaryTypeName","src":"2201:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"amount","nameLocation":"2221:6:20","nodeType":"VariableDeclaration","scope":5075,"src":"2213:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2213:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2186:42:20"},"returnParameters":{"id":5074,"nodeType":"ParameterList","parameters":[],"src":"2237:0:20"},"scope":5076,"src":"2169:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5077,"src":"57:2183:20","usedErrors":[],"usedEvents":[]}],"src":"32:2208:20"},"id":20},"contracts/vault/VaultPermit.sol":{"ast":{"absolutePath":"contracts/vault/VaultPermit.sol","exportedSymbols":{"ECDSA":[1925],"EIP712Upgradeable":[1174],"EnumerableSet":[3783],"IAtomicSwapBase":[4946],"IVaultPermit":[5286],"OwnablePausableUpgradeable":[4158],"Vault":[4773],"VaultPermit":[5260]},"id":5261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5078,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","id":5080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":1175,"src":"198:111:21","symbolAliases":[{"foreign":{"id":5079,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"206:17:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":5082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":1926,"src":"310:75:21","symbolAliases":[{"foreign":{"id":5081,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"318:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":5084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":3784,"src":"386:86:21","symbolAliases":[{"foreign":{"id":5083,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"394:13:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/abstracts/interfaces/IAtomicSwapBase.sol","file":"../abstracts/interfaces/IAtomicSwapBase.sol","id":5086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":4947,"src":"473:76:21","symbolAliases":[{"foreign":{"id":5085,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"481:15:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/vault/interfaces/IVaultPermit.sol","file":"./interfaces/IVaultPermit.sol","id":5088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":5287,"src":"550:59:21","symbolAliases":[{"foreign":{"id":5087,"name":"IVaultPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"558:12:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/abstracts/Vault.sol","file":"../abstracts/Vault.sol","id":5090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":4774,"src":"610:45:21","symbolAliases":[{"foreign":{"id":5089,"name":"Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"618:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/abstracts/OwnablePausableUpgradeable.sol","file":"../abstracts/OwnablePausableUpgradeable.sol","id":5092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":4159,"src":"656:87:21","symbolAliases":[{"foreign":{"id":5091,"name":"OwnablePausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"664:26:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5094,"name":"Vault","nameLocations":["1044:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":4773,"src":"1044:5:21"},"id":5095,"nodeType":"InheritanceSpecifier","src":"1044:5:21"},{"baseName":{"id":5096,"name":"EIP712Upgradeable","nameLocations":["1051:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":1174,"src":"1051:17:21"},"id":5097,"nodeType":"InheritanceSpecifier","src":"1051:17:21"},{"baseName":{"id":5098,"name":"IVaultPermit","nameLocations":["1070:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":5286,"src":"1070:12:21"},"id":5099,"nodeType":"InheritanceSpecifier","src":"1070:12:21"},{"baseName":{"id":5100,"name":"OwnablePausableUpgradeable","nameLocations":["1084:26:21"],"nodeType":"IdentifierPath","referencedDeclaration":4158,"src":"1084:26:21"},"id":5101,"nodeType":"InheritanceSpecifier","src":"1084:26:21"}],"canonicalName":"VaultPermit","contractDependencies":[],"contractKind":"contract","documentation":{"id":5093,"nodeType":"StructuredDocumentation","src":"745:275:21","text":"@title Vault Permit Contract\n @notice This contract handles permits for token transactions within a vault, using EIP-712 typed data signing.\n @dev Inherits from Vault, EIP712Upgradeable, IVaultPermit, and OwnablePausableUpgradeable for comprehensive functionality."},"fullyImplemented":true,"id":5260,"linearizedBaseContracts":[5260,4158,362,1214,2011,1297,830,5286,1174,1322,4773,5076,654,616,4997],"name":"VaultPermit","nameLocation":"1029:11:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5106,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1205:15:21","nodeType":"VariableDeclaration","scope":5260,"src":"1180:142:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1180:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c627974657333322061677265656d656e742c75696e7432353620646561646c696e6529","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1233:88:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1bcd16601e2086d958cf8198037b6718bdc081870f18734581ae91ee73069e95","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,bytes32 agreement,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,bytes32 agreement,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1bcd16601e2086d958cf8198037b6718bdc081870f18734581ae91ee73069e95","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,bytes32 agreement,uint256 deadline)\""}],"id":5103,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1223:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1223:99:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"global":false,"id":5110,"libraryName":{"id":5107,"name":"EnumerableSet","nameLocations":["1394:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":3783,"src":"1394:13:21"},"nodeType":"UsingForDirective","src":"1388:49:21","typeName":{"id":5109,"nodeType":"UserDefinedTypeName","pathNode":{"id":5108,"name":"EnumerableSet.Bytes32Set","nameLocations":["1412:13:21","1426:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"1412:24:21"},"referencedDeclaration":3375,"src":"1412:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":5113,"mutability":"mutable","name":"_agreements","nameLocation":"1475:11:21","nodeType":"VariableDeclaration","scope":5260,"src":"1442:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5112,"nodeType":"UserDefinedTypeName","pathNode":{"id":5111,"name":"EnumerableSet.Bytes32Set","nameLocations":["1442:13:21","1456:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"1442:24:21"},"referencedDeclaration":3375,"src":"1442:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"private"},{"errorSelector":"0891870a","id":5117,"name":"VaultExpiredSignature","nameLocation":"1551:21:21","nodeType":"ErrorDefinition","parameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"deadline","nameLocation":"1581:8:21","nodeType":"VariableDeclaration","scope":5117,"src":"1573:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:18:21"},"src":"1545:46:21"},{"errorSelector":"591145fb","id":5121,"name":"VaultDuplicatedAgreement","nameLocation":"1602:24:21","nodeType":"ErrorDefinition","parameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"agreement","nameLocation":"1635:9:21","nodeType":"VariableDeclaration","scope":5121,"src":"1627:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1627:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1626:19:21"},"src":"1596:50:21"},{"errorSelector":"6babb097","id":5127,"name":"VaultInvalidSigner","nameLocation":"1657:18:21","nodeType":"ErrorDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"signer","nameLocation":"1684:6:21","nodeType":"VariableDeclaration","scope":5127,"src":"1676:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5122,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"owner","nameLocation":"1700:5:21","nodeType":"VariableDeclaration","scope":5127,"src":"1692:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5124,"name":"address","nodeType":"ElementaryTypeName","src":"1692:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1675:31:21"},"src":"1651:56:21"},{"body":{"id":5146,"nodeType":"Block","src":"2031:91:21","statements":[{"expression":{"arguments":[{"id":5138,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"2075:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5137,"name":"__OwnablePausableUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"2041:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2041:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5140,"nodeType":"ExpressionStatement","src":"2041:40:21"},{"expression":{"arguments":[{"id":5142,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"2105:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2111:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":5141,"name":"__EIP712_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2091:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2091:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5145,"nodeType":"ExpressionStatement","src":"2091:24:21"}]},"documentation":{"id":5128,"nodeType":"StructuredDocumentation","src":"1713:237:21","text":"@notice Initializes the vault permit contract with an admin and a name for EIP712 domain.\n @param admin The admin address for the contract.\n @param name The name used for the EIP712 domain, important for permit signing."},"functionSelector":"f399e22e","id":5147,"implemented":true,"kind":"function","modifiers":[{"id":5135,"kind":"modifierInvocation","modifierName":{"id":5134,"name":"initializer","nameLocations":["2019:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"2019:11:21"},"nodeType":"ModifierInvocation","src":"2019:11:21"}],"name":"initialize","nameLocation":"1964:10:21","nodeType":"FunctionDefinition","parameters":{"id":5133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"admin","nameLocation":"1983:5:21","nodeType":"VariableDeclaration","scope":5147,"src":"1975:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5129,"name":"address","nodeType":"ElementaryTypeName","src":"1975:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5132,"mutability":"mutable","name":"name","nameLocation":"2004:4:21","nodeType":"VariableDeclaration","scope":5147,"src":"1990:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5131,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1974:35:21"},"returnParameters":{"id":5136,"nodeType":"ParameterList","parameters":[],"src":"2031:0:21"},"scope":5260,"src":"1955:167:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5279],"body":{"id":5248,"nodeType":"Block","src":"2911:732:21","statements":[{"condition":{"arguments":[{"id":5166,"name":"agreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"2946:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5164,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"2925:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":5165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2937:8:21","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3429,"src":"2925:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3375_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3375_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2925:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5173,"nodeType":"IfStatement","src":"2921:104:21","trueBody":{"id":5172,"nodeType":"Block","src":"2958:67:21","statements":[{"errorCall":{"arguments":[{"id":5169,"name":"agreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3004:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5168,"name":"VaultDuplicatedAgreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"2979:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2979:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5171,"nodeType":"RevertStatement","src":"2972:42:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5174,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3038:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3044:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"3038:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5176,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3056:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3066:8:21","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":4834,"src":"3056:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3038:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5185,"nodeType":"IfStatement","src":"3034:115:21","trueBody":{"id":5184,"nodeType":"Block","src":"3076:73:21","statements":[{"errorCall":{"arguments":[{"expression":{"id":5180,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3119:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3129:8:21","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":4834,"src":"3119:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5179,"name":"VaultExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"3097:21:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5183,"nodeType":"RevertStatement","src":"3090:48:21"}]}},{"assignments":[5187],"declarations":[{"constant":false,"id":5187,"mutability":"mutable","name":"structHash","nameLocation":"3167:10:21","nodeType":"VariableDeclaration","scope":5248,"src":"3159:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3159:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5201,"initialValue":{"arguments":[{"arguments":[{"id":5191,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"3201:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5192,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3218:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3228:5:21","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"3218:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5194,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"3235:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"3244:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5196,"name":"agreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3251:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5197,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3262:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3272:8:21","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":4834,"src":"3262:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5189,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3190:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3194:6:21","memberName":"encode","nodeType":"MemberAccess","src":"3190:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:91:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5188,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3180:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:102:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3159:123:21"},{"assignments":[5203],"declarations":[{"constant":false,"id":5203,"mutability":"mutable","name":"hash","nameLocation":"3300:4:21","nodeType":"VariableDeclaration","scope":5248,"src":"3292:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3292:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5207,"initialValue":{"arguments":[{"id":5205,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"3324:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5204,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"3307:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3292:43:21"},{"assignments":[5209],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"signer","nameLocation":"3353:6:21","nodeType":"VariableDeclaration","scope":5248,"src":"3345:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5208,"name":"address","nodeType":"ElementaryTypeName","src":"3345:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5220,"initialValue":{"arguments":[{"id":5212,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"3376:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5213,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3382:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3392:1:21","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"3382:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":5215,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3395:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3405:1:21","memberName":"r","nodeType":"MemberAccess","referencedDeclaration":4828,"src":"3395:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5217,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3408:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3418:1:21","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":4830,"src":"3408:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5210,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"3362:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1925_$","typeString":"type(library ECDSA)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:7:21","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1875,"src":"3362:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3362:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3345:75:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"3435:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5222,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3445:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3455:5:21","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"3445:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3435:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5232,"nodeType":"IfStatement","src":"3431:106:21","trueBody":{"id":5231,"nodeType":"Block","src":"3462:75:21","statements":[{"errorCall":{"arguments":[{"id":5226,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"3502:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5227,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3510:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3520:5:21","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"3510:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5225,"name":"VaultInvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"3483:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3483:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5230,"nodeType":"RevertStatement","src":"3476:50:21"}]}},{"expression":{"arguments":[{"id":5236,"name":"agreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"3562:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5233,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"3546:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3375_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":5235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3558:3:21","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3393,"src":"3546:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3375_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3375_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3546:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5238,"nodeType":"ExpressionStatement","src":"3546:26:21"},{"expression":{"arguments":[{"id":5240,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"3591:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5241,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"3598:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature calldata"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:5:21","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4832,"src":"3598:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5243,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"3615:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"3624:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3631:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5239,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3582:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bool)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5247,"nodeType":"ExpressionStatement","src":"3582:54:21"}]},"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"2128:572:21","text":"@notice Handles the creation of a permit for token transactions within the vault.\n @param token The address of the token for which the permit is created.\n @param spender The address authorized to spend the tokens.\n @param value The amount of tokens the spender is authorized to use.\n @param agreement A unique identifier for the permit agreement.\n @param signature The digital signature provided by the token owner, confirming the permit.\n @dev Validates the signature, checks for agreement uniqueness, and records the permit."},"functionSelector":"a1b996c1","id":5249,"implemented":true,"kind":"function","modifiers":[{"id":5162,"kind":"modifierInvocation","modifierName":{"id":5161,"name":"onlyAdmin","nameLocations":["2901:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":3976,"src":"2901:9:21"},"nodeType":"ModifierInvocation","src":"2901:9:21"}],"name":"permit","nameLocation":"2714:6:21","nodeType":"FunctionDefinition","parameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"token","nameLocation":"2738:5:21","nodeType":"VariableDeclaration","scope":5249,"src":"2730:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5149,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5152,"mutability":"mutable","name":"spender","nameLocation":"2762:7:21","nodeType":"VariableDeclaration","scope":5249,"src":"2754:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5151,"name":"address","nodeType":"ElementaryTypeName","src":"2754:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5154,"mutability":"mutable","name":"value","nameLocation":"2787:5:21","nodeType":"VariableDeclaration","scope":5249,"src":"2779:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5156,"mutability":"mutable","name":"agreement","nameLocation":"2810:9:21","nodeType":"VariableDeclaration","scope":5249,"src":"2802:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2802:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5159,"mutability":"mutable","name":"signature","nameLocation":"2870:9:21","nodeType":"VariableDeclaration","scope":5249,"src":"2829:50:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"},"typeName":{"id":5158,"nodeType":"UserDefinedTypeName","pathNode":{"id":5157,"name":"IAtomicSwapBase.PermitSignature","nameLocations":["2829:15:21","2845:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":4835,"src":"2829:31:21"},"referencedDeclaration":4835,"src":"2829:31:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"}},"visibility":"internal"}],"src":"2720:165:21"},"returnParameters":{"id":5163,"nodeType":"ParameterList","parameters":[],"src":"2911:0:21"},"scope":5260,"src":"2705:938:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[5285],"body":{"id":5258,"nodeType":"Block","src":"3940:44:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5255,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3957:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5254,"id":5257,"nodeType":"Return","src":"3950:27:21"}]},"documentation":{"id":5250,"nodeType":"StructuredDocumentation","src":"3649:218:21","text":"@notice Returns the domain separator used for EIP-712 typed data signing.\n @return The current domain separator.\n @dev Useful for off-chain services that need to construct and sign EIP-712 typed data."},"functionSelector":"3644e515","id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3881:16:21","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[],"src":"3897:2:21"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5259,"src":"3931:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3931:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3930:9:21"},"scope":5260,"src":"3872:112:21","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":5261,"src":"1020:2969:21","usedErrors":[379,382,693,696,1224,1227,1588,1593,1598,4222,4226,4230,4234,4242,4252,4256,4260,5117,5121,5127],"usedEvents":[387,685,690,1236,1245,1254,1302,4192,4202,4210,4218]}],"src":"32:3958:21"},"id":21},"contracts/vault/interfaces/IVaultPermit.sol":{"ast":{"absolutePath":"contracts/vault/interfaces/IVaultPermit.sol","exportedSymbols":{"IAtomicSwapBase":[4946],"IVaultPermit":[5286]},"id":5287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5262,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"contracts/abstracts/interfaces/IAtomicSwapBase.sol","file":"../../abstracts/interfaces/IAtomicSwapBase.sol","id":5264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5287,"sourceUnit":4947,"src":"57:79:22","symbolAliases":[{"foreign":{"id":5263,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"65:15:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultPermit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5286,"linearizedBaseContracts":[5286],"name":"IVaultPermit","nameLocation":"147:12:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5265,"nodeType":"StructuredDocumentation","src":"166:850:22","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"a1b996c1","id":5279,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1030:6:22","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"token","nameLocation":"1054:5:22","nodeType":"VariableDeclaration","scope":5279,"src":"1046:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5266,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5269,"mutability":"mutable","name":"spender","nameLocation":"1078:7:22","nodeType":"VariableDeclaration","scope":5279,"src":"1070:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5268,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5271,"mutability":"mutable","name":"value","nameLocation":"1103:5:22","nodeType":"VariableDeclaration","scope":5279,"src":"1095:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5273,"mutability":"mutable","name":"agreement","nameLocation":"1126:9:22","nodeType":"VariableDeclaration","scope":5279,"src":"1118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1118:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"signature","nameLocation":"1186:9:22","nodeType":"VariableDeclaration","scope":5279,"src":"1145:50:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"},"typeName":{"id":5275,"nodeType":"UserDefinedTypeName","pathNode":{"id":5274,"name":"IAtomicSwapBase.PermitSignature","nameLocations":["1145:15:22","1161:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":4835,"src":"1145:31:22"},"referencedDeclaration":4835,"src":"1145:31:22","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$4835_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"}},"visibility":"internal"}],"src":"1036:165:22"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[],"src":"1210:0:22"},"scope":5286,"src":"1021:190:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"1218:128:22","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":5285,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"1413:16:22","nodeType":"FunctionDefinition","parameters":{"id":5281,"nodeType":"ParameterList","parameters":[],"src":"1429:2:22"},"returnParameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5285,"src":"1455:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1455:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1454:9:22"},"scope":5286,"src":"1404:60:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5287,"src":"137:1329:22","usedErrors":[],"usedEvents":[]}],"src":"32:1434:22"},"id":22}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220014ed051a852ce22fb52c1a7ecc8e60c68f51230fd8ae5377d4d7ca69221033564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4E 0xD0 MLOAD 0xA8 MSTORE 0xCE 0x22 0xFB MSTORE 0xC1 0xA7 0xEC 0xC8 0xE6 0xC PUSH9 0xF51230FD8AE5377D4D PUSH29 0xA69221033564736F6C6343000814003300000000000000000000000000 ","sourceMap":"1330:11640:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220014ed051a852ce22fb52c1a7ecc8e60c68f51230fd8ae5377d4d7ca69221033564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x4E 0xD0 MLOAD 0xA8 MSTORE 0xCE 0x22 0xFB MSTORE 0xC1 0xA7 0xEC 0xC8 0xE6 0xC PUSH9 0xF51230FD8AE5377D4D PUSH29 0xA69221033564736F6C6343000814003300000000000000000000000000 ","sourceMap":"1330:11640:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@uniswap/lib/contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d663ae27c047d7e21fada53ff8f326f8c3d3dd7f58cdb584e1422956e9a717d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH7 0x3AE27C047D7E21 STATICCALL 0xDA MSTORE8 SELFDESTRUCT DUP16 ORIGIN PUSH16 0x8C3D3DD7F58CDB584E1422956E9A717D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"183:1621:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d663ae27c047d7e21fada53ff8f326f8c3d3dd7f58cdb584e1422956e9a717d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH7 0x3AE27C047D7E21 STATICCALL 0xDA MSTORE8 SELFDESTRUCT DUP16 ORIGIN PUSH16 0x8C3D3DD7F58CDB584E1422956E9A717D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"183:1621:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/OwnablePausableUpgradeable.sol":{"OwnablePausableUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paginationSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removePauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_paginationSize","type":"uint256"}],"name":"setPaginationSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","PAUSER_ROLE()":"e63ab1e9","addAdmin(address)":"70480275","addPauser(address)":"82dc1ec4","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isAdmin(address)":"24d7806c","isPauser(address)":"46fbf68e","paginationSize()":"3d538ecf","pause()":"8456cb59","paused()":"5c975abb","removeAdmin(address)":"1785f53c","removePauser(address)":"6b2c0f55","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setPaginationSize(uint256)":"f2407ca4","supportsInterface(bytes4)":"01ffc9a7","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paginationSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_paginationSize\",\"type\":\"uint256\"}],\"name\":\"setPaginationSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Bundles Access Control, Pausable and Upgradeable contracts in one.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"See {IOwnablePausable-addAdmin}.\"},\"addPauser(address)\":{\"details\":\"See {IOwnablePausable-addPauser}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"details\":\"See {IOwnablePausable-isAdmin}.\"},\"isPauser(address)\":{\"details\":\"See {IOwnablePausable-isPauser}.\"},\"pause()\":{\"details\":\"See {IOwnablePausable-pause}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeAdmin(address)\":{\"details\":\"See {IOwnablePausable-removeAdmin}.\"},\"removePauser(address)\":{\"details\":\"See {IOwnablePausable-removePauser}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"See {IOwnablePausable-unpause}.\"}},\"title\":\"OwnablePausableUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/OwnablePausableUpgradeable.sol\":\"OwnablePausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/abstracts/OwnablePausableUpgradeable.sol\":{\"keccak256\":\"0x7cf2d18e1415c56024f43d235b485e499694ec0f7c5f0d1543244e611bb02232\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3cce2a82c0366a2ec1e61fbc4e501e66d4e1be47e4be77dc65be87ae4bb24059\",\"dweb:/ipfs/QmYVF44GWfYSgun8XHbFE1kyhRCRE2zVrgSyn17cJ5vwRV\"]},\"contracts/abstracts/interfaces/IOwnablePausable.sol\":{\"keccak256\":\"0xf09d7eac82289cdc30ad1ba8110d6f31ad4e912eabd19f6c54d4794202166a7f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://38a7186c816ce1d70e21c1b9a1e9ba38e23ba85678d29555b151890e467e5b58\",\"dweb:/ipfs/QmcRihMBsnS9t3TV4fFQkbpxC4eqow3LCjHKdmi7Xy3AVj\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3962,"contract":"contracts/abstracts/OwnablePausableUpgradeable.sol:OwnablePausableUpgradeable","label":"paginationSize","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/abstracts/Vault.sol":{"Vault":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"VaultAdditionalEther","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultInsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"fromBalance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultInsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"VaultInvalidAmount","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"VaultInvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"VaultInvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"VaultInvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"VaultInvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultApproval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Withdrawal","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","balanceOf(address,address)":"f7888aec","deposit(address,uint256)":"47e7ef24","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,address,uint256)":"15dacbea","withdraw(address,address,uint256)":"d9caed12"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VaultAdditionalEther\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultInsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VaultInvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"VaultInvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"VaultInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"VaultInvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"VaultInvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"deposit(address,uint256)\":{\"details\":\"Allows a user to deposit ERC20 tokens or Ether into the vault.\",\"params\":{\"token\":\"The address of the ERC20 token contract, or the zero address for Ether.\"}},\"transfer(address,address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(address,address,uint256)\":{\"details\":\"Allows a user to withdraw ERC20 tokens or Ether from the vault.\",\"params\":{\"amount\":\"The amount of tokens or Ether to withdraw.\",\"token\":\"The address of the ERC20 token contract, or the zero address for Ether.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]},\"contracts/abstracts/Vault.sol\":{\"keccak256\":\"0x1335dba0b2258b5d1a81091ef09d49140ba42a6d58463b46150847fe5bd25099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://628d3aa40bf65bcf80e9a673bf6c598c6fd1e5480ce65ffdfca4f8e6aefcfdfb\",\"dweb:/ipfs/QmR1BqjmLA9dhoZXuv9BKJbriz8X4TGeJa23mYHeLy7nDd\"]},\"contracts/abstracts/interfaces/IVault.sol\":{\"keccak256\":\"0x17b79ca6e927bd41b516dc63e265a6ce57acdada9938148290534477ecb73943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef517dd157ebb870e74f685351f344fc0d47836ca0507f86c75ae95387f6be64\",\"dweb:/ipfs/QmXy3eukU9auACjPQRaPP2WbaYQEu1atdHQ8oC2nxduPEH\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4176,"contract":"contracts/abstracts/Vault.sol:Vault","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4184,"contract":"contracts/abstracts/Vault.sol:Vault","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => mapping(address => uint256)))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/abstracts/interfaces/IAtomicSwapBase.sol":{"IAtomicSwapBase":{"abi":[{"inputs":[],"name":"DuplicateReleaseSchedule","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidBuyerFee","type":"error"},{"inputs":[{"internalType":"uint256","name":"provided","type":"uint256"},{"internalType":"uint256","name":"maximum","type":"uint256"}],"name":"InvalidExpirationTime","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InvalidMinBidAmount","type":"error"},{"inputs":[],"name":"InvalidReleasePercentage","type":"error"},{"inputs":[],"name":"InvalidSellerFee","type":"error"},{"inputs":[],"name":"InvalidSigners","type":"error"},{"inputs":[],"name":"InvalidTotalPercentage","type":"error"},{"inputs":[],"name":"InvalidTreasuryAddress","type":"error"},{"inputs":[{"internalType":"uint256","name":"real","type":"uint256"},{"internalType":"uint256","name":"expected","type":"uint256"}],"name":"NotEnoughFund","type":"error"},{"inputs":[],"name":"OrderAlreadyExists","type":"error"},{"inputs":[{"internalType":"uint256","name":"current","type":"uint256"},{"internalType":"uint256","name":"expiredTime","type":"uint256"}],"name":"OrderAlreadyExpired","type":"error"},{"inputs":[],"name":"OverMaximumReleaseStep","type":"error"},{"inputs":[],"name":"UnauthorizedSender","type":"error"},{"inputs":[],"name":"UnsupportedTokenPair","type":"error"},{"inputs":[],"name":"ZeroReleaseSchedule","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"AcceptedBid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"AtomicSwapOrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"maker","type":"address"},{"indexed":true,"internalType":"address","name":"taker","type":"address"}],"name":"AtomicSwapOrderTook","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DuplicateReleaseSchedule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBuyerFee\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"InvalidExpirationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvalidMinBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReleasePercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSellerFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigners\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTotalPercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTreasuryAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"real\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"NotEnoughFund\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredTime\",\"type\":\"uint256\"}],\"name\":\"OrderAlreadyExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OverMaximumReleaseStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTokenPair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroReleaseSchedule\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AcceptedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AtomicSwapOrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"AtomicSwapOrderTook\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface includes enums, structs, events, and custom errors essential for implementing atomic swaps.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IAtomicSwapBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for defining the basic structures and functionalities required for atomic swap operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":\"IAtomicSwapBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":{\"keccak256\":\"0xd7239d747128d5b1cce36b79dcea51f1d65adad185f622198fb76b147cefdfbb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0d503748485a3085d61d608f04fe782d671c4d3d203ff5df533f1b701517a45a\",\"dweb:/ipfs/QmPrfi1Pp3YHMvuepL6eRkMyX5GgSnJhyFfZuFrYwTMaR8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/interfaces/IOwnablePausable.sol":{"IOwnablePausable":{"abi":[{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removePauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addAdmin(address)":"70480275","addPauser(address)":"82dc1ec4","isAdmin(address)":"24d7806c","isPauser(address)":"46fbf68e","pause()":"8456cb59","removeAdmin(address)":"1785f53c","removePauser(address)":"6b2c0f55","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Function for assigning an admin role to the account. Can only be called by an account with an admin role.\",\"params\":{\"_account\":\"- account to assign an admin role to.\"}},\"addPauser(address)\":{\"details\":\"Function for adding a pauser role to the account. Can only be called by an account with an admin role.\",\"params\":{\"_account\":\"- account to assign a pauser role to.\"}},\"isAdmin(address)\":{\"details\":\"Function for checking whether an account has an admin role.\",\"params\":{\"_account\":\"- account to check.\"}},\"isPauser(address)\":{\"details\":\"Function for checking whether an account has a pauser role.\",\"params\":{\"_account\":\"- account to check.\"}},\"pause()\":{\"details\":\"Function for pausing the contract.\"},\"removeAdmin(address)\":{\"details\":\"Function for removing an admin role from the account. Can only be called by an account with an admin role.\",\"params\":{\"_account\":\"- account to remove an admin role from.\"}},\"removePauser(address)\":{\"details\":\"Function for removing a pauser role from the account. Can only be called by an account with an admin role.\",\"params\":{\"_account\":\"- account to remove a pauser role from.\"}},\"unpause()\":{\"details\":\"Function for unpausing the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/interfaces/IOwnablePausable.sol\":\"IOwnablePausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/interfaces/IOwnablePausable.sol\":{\"keccak256\":\"0xf09d7eac82289cdc30ad1ba8110d6f31ad4e912eabd19f6c54d4794202166a7f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://38a7186c816ce1d70e21c1b9a1e9ba38e23ba85678d29555b151890e467e5b58\",\"dweb:/ipfs/QmcRihMBsnS9t3TV4fFQkbpxC4eqow3LCjHKdmi7Xy3AVj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/abstracts/interfaces/IVault.sol":{"IVault":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","balanceOf(address,address)":"f7888aec","deposit(address,uint256)":"47e7ef24","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,address,uint256)":"15dacbea","withdraw(address,address,uint256)":"d9caed12"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address,address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"transfer(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/interfaces/IVault.sol\":{\"keccak256\":\"0x17b79ca6e927bd41b516dc63e265a6ce57acdada9938148290534477ecb73943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef517dd157ebb870e74f685351f344fc0d47836ca0507f86c75ae95387f6be64\",\"dweb:/ipfs/QmXy3eukU9auACjPQRaPP2WbaYQEu1atdHQ8oC2nxduPEH\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/vault/VaultPermit.sol":{"VaultPermit":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"VaultAdditionalEther","type":"error"},{"inputs":[{"internalType":"bytes32","name":"agreement","type":"bytes32"}],"name":"VaultDuplicatedAgreement","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"VaultExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultInsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"fromBalance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultInsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"VaultInvalidAmount","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"VaultInvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"VaultInvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"VaultInvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"VaultInvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"VaultInvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultApproval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"VaultTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Withdrawal","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"},{"internalType":"string","name":"name","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paginationSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"agreement","type":"bytes32"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct IAtomicSwapBase.PermitSignature","name":"signature","type":"tuple"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"removePauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_paginationSize","type":"uint256"}],"name":"setPaginationSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50614335806100206000396000f3fe6080604052600436106101d15760003560e01c806382dc1ec4116100f7578063beabacc811610095578063e63ab1e911610064578063e63ab1e914610697578063f2407ca4146106c2578063f399e22e146106eb578063f7888aec14610714576101d8565b8063beabacc8146105cb578063d547741f14610608578063d9caed1214610631578063e1f21c671461065a576101d8565b806391d14854116100d157806391d14854146104fd578063927da1051461053a578063a1b996c114610577578063a217fddf146105a0576101d8565b806382dc1ec41461048c5780638456cb59146104b557806384b0196e146104cc576101d8565b806336568abe1161016f57806347e7ef241161013e57806347e7ef24146103f35780635c975abb1461040f5780636b2c0f551461043a5780637048027514610463576101d8565b806336568abe1461034b5780633d538ecf146103745780633f4ba83a1461039f57806346fbf68e146103b6576101d8565b8063248a9ca3116101ab578063248a9ca31461027d57806324d7806c146102ba5780632f2ff15d146102f75780633644e51514610320576101d8565b806301ffc9a7146101da57806315dacbea146102175780631785f53c14610254576101d8565b366101d857005b005b3480156101e657600080fd5b5061020160048036038101906101fc919061300d565b610751565b60405161020e9190613055565b60405180910390f35b34801561022357600080fd5b5061023e60048036038101906102399190613104565b6107cb565b60405161024b9190613055565b60405180910390f35b34801561026057600080fd5b5061027b6004803603810190610276919061316b565b6107fd565b005b34801561028957600080fd5b506102a4600480360381019061029f91906131ce565b61080d565b6040516102b1919061320a565b60405180910390f35b3480156102c657600080fd5b506102e160048036038101906102dc919061316b565b61083b565b6040516102ee9190613055565b60405180910390f35b34801561030357600080fd5b5061031e60048036038101906103199190613225565b610851565b005b34801561032c57600080fd5b50610335610873565b604051610342919061320a565b60405180910390f35b34801561035757600080fd5b50610372600480360381019061036d9190613225565b610882565b005b34801561038057600080fd5b506103896108fd565b6040516103969190613274565b60405180910390f35b3480156103ab57600080fd5b506103b4610903565b005b3480156103c257600080fd5b506103dd60048036038101906103d8919061316b565b610976565b6040516103ea9190613055565b60405180910390f35b61040d6004803603810190610408919061328f565b6109a9565b005b34801561041b57600080fd5b50610424610b88565b6040516104319190613055565b60405180910390f35b34801561044657600080fd5b50610461600480360381019061045c919061316b565b610bad565b005b34801561046f57600080fd5b5061048a6004803603810190610485919061316b565b610bda565b005b34801561049857600080fd5b506104b360048036038101906104ae919061316b565b610bea565b005b3480156104c157600080fd5b506104ca610c17565b005b3480156104d857600080fd5b506104e1610c8a565b6040516104f49796959493929190613467565b60405180910390f35b34801561050957600080fd5b50610524600480360381019061051f9190613225565b610d9c565b6040516105319190613055565b60405180910390f35b34801561054657600080fd5b50610561600480360381019061055c91906134eb565b610e15565b60405161056e9190613274565b60405180910390f35b34801561058357600080fd5b5061059e60048036038101906105999190613562565b610eda565b005b3480156105ac57600080fd5b506105b5611140565b6040516105c2919061320a565b60405180910390f35b3480156105d757600080fd5b506105f260048036038101906105ed91906135de565b611147565b6040516105ff9190613055565b60405180910390f35b34801561061457600080fd5b5061062f600480360381019061062a9190613225565b61116c565b005b34801561063d57600080fd5b50610658600480360381019061065391906135de565b61118e565b005b34801561066657600080fd5b50610681600480360381019061067c91906135de565b611496565b60405161068e9190613055565b60405180910390f35b3480156106a357600080fd5b506106ac6114bd565b6040516106b9919061320a565b60405180910390f35b3480156106ce57600080fd5b506106e960048036038101906106e49190613631565b6114e1565b005b3480156106f757600080fd5b50610712600480360381019061070d9190613793565b61157a565b005b34801561072057600080fd5b5061073b600480360381019061073691906137ef565b611749565b6040516107489190613274565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107c457506107c3826117cf565b5b9050919050565b6000806107d6611839565b90506107e486868386611841565b6107f0868686866118d8565b6001915050949350505050565b61080a6000801b8261116c565b50565b6000806108186119ce565b905080600001600084815260200190815260200160002060010154915050919050565b600061084a6000801b83610d9c565b9050919050565b61085a8261080d565b610863816119f6565b61086d8383611a0a565b50505050565b600061087d611b0b565b905090565b61088a611839565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108ee576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f88282611b1a565b505050565b60025481565b61092d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610d9c565b61096c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109639061387b565b60405180910390fd5b610974611c1c565b565b60006109a27f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a83610d9c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610a3a5760003414610a2257806040517f0f30c25e000000000000000000000000000000000000000000000000000000008152600401610a199190613274565b60405180910390fd5b610a3582610a2e611839565b3084611c8e565b610a7f565b803414610a7e57806040517fe279109d000000000000000000000000000000000000000000000000000000008152600401610a759190613274565b60405180910390fd5b5b80600080610a8b611839565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1191906138ca565b92505081905550610b20611839565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610b7c9190613274565b60405180910390a35050565b600080610b93611dc7565b90508060000160009054906101000a900460ff1691505090565b610bd77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8261116c565b50565b610be76000801b82610851565b50565b610c147f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a82610851565b50565b610c417f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610d9c565b610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c779061387b565b60405180910390fd5b610c88611def565b565b6000606080600080600060606000610ca0611e61565b90506000801b8160000154148015610cbe57506000801b8160010154145b610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf49061394a565b60405180910390fd5b610d05611e89565b610d0d611f2a565b46306000801b600067ffffffffffffffff811115610d2e57610d2d613668565b5b604051908082528060200260200182016040528015610d5c5781602001602082028036833780820191505090505b507f0f0000000000000000000000000000000000000000000000000000000000000095949392919097509750975097509750975097505090919293949596565b600080610da76119ce565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b610ee76000801b33610d9c565b610f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1d9061387b565b60405180910390fd5b610f3a826003611fcb90919063ffffffff16565b15610f7c57816040517f591145fb000000000000000000000000000000000000000000000000000000008152600401610f73919061320a565b60405180910390fd5b8060800135421115610fc95780608001356040517f0891870a000000000000000000000000000000000000000000000000000000008152600401610fc09190613274565b60405180910390fd5b60007f1bcd16601e2086d958cf8198037b6718bdc081870f18734581ae91ee73069e95826060016020810190610fff919061316b565b868686866080013560405160200161101c9695949392919061396a565b604051602081830303815290604052805190602001209050600061103f82611fe2565b905060006110698285600001602081019061105a9190613a04565b86602001358760400135611ffc565b905083606001602081019061107e919061316b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461110157808460600160208101906110c4919061316b565b6040517f6babb0970000000000000000000000000000000000000000000000000000000081526004016110f8929190613a31565b60405180910390fd5b61111585600361202c90919063ffffffff16565b506111368885606001602081019061112d919061316b565b89896001612043565b5050505050505050565b6000801b81565b600080611152611839565b9050611160858286866118d8565b60019150509392505050565b6111758261080d565b61117e816119f6565b6111888383611b1a565b50505050565b60008110156111d457806040517fe279109d0000000000000000000000000000000000000000000000000000000081526004016111cb9190613274565b60405180910390fd5b60008060006111e1611839565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112a057816040517fe279109d0000000000000000000000000000000000000000000000000000000081526004016112979190613274565b60405180910390fd5b816000806112ac611839565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113329190613a5a565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361141f5760008373ffffffffffffffffffffffffffffffffffffffff168360405161139390613abf565b60006040518083038185875af1925050503d80600081146113d0576040519150601f19603f3d011682016040523d82523d6000602084013e6113d5565b606091505b5050905080611419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141090613b20565b60405180910390fd5b5061142b565b61142a84848461224e565b5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398846040516114889190613274565b60405180910390a350505050565b6000806114a1611839565b90506114b1858286866001612043565b60019150509392505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6114ee6000801b33610d9c565b61152d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115249061387b565b60405180910390fd5b60008111611570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156790613b8c565b60405180910390fd5b8060028190555050565b6000611584612384565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156115d25750825b9050600060018367ffffffffffffffff16148015611607575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611615575080155b1561164c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561169c5760018560000160086101000a81548160ff0219169083151502179055505b6116a5876123ac565b6116e4866040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525061255b565b83156117405760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516117379190613c05565b60405180910390a15b50505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600061184e858585610e15565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146118d157818110156118c0578281836040517fcf7e36780000000000000000000000000000000000000000000000000000000081526004016118b793929190613c20565b60405180910390fd5b6118d08585858585036000612043565b5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194a5760006040517ff4d2be290000000000000000000000000000000000000000000000000000000081526004016119419190613c57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119bc5760006040517fe0823dd80000000000000000000000000000000000000000000000000000000081526004016119b39190613c57565b60405180910390fd5b6119c884848484612571565b50505050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b611a0781611a02611839565b61278b565b50565b600080611a156119ce565b9050611a218484610d9c565b611aff57600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611a9b611839565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050611b05565b60009150505b92915050565b6000611b156127dc565b905090565b600080611b256119ce565b9050611b318484610d9c565b15611c1057600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611bac611839565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050611c16565b60009150505b92915050565b611c24612840565b6000611c2e611dc7565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611c76611839565b604051611c839190613c57565b60405180910390a150565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611cc293929190613c72565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611d109190613ce5565b6000604051808303816000865af19150503d8060008114611d4d576040519150601f19603f3d011682016040523d82523d6000602084013e611d52565b606091505b5091509150818015611d805750600081511480611d7f575080806020019051810190611d7e9190613d28565b5b5b611dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db690613dc7565b60405180910390fd5b505050505050565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b611df7612880565b6000611e01611dc7565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e49611839565b604051611e569190613c57565b60405180910390a150565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100905090565b60606000611e95611e61565b9050806002018054611ea690613e16565b80601f0160208091040260200160405190810160405280929190818152602001828054611ed290613e16565b8015611f1f5780601f10611ef457610100808354040283529160200191611f1f565b820191906000526020600020905b815481529060010190602001808311611f0257829003601f168201915b505050505091505090565b60606000611f36611e61565b9050806003018054611f4790613e16565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7390613e16565b8015611fc05780601f10611f9557610100808354040283529160200191611fc0565b820191906000526020600020905b815481529060010190602001808311611fa357829003601f168201915b505050505091505090565b6000611fda83600001836128c1565b905092915050565b6000611ff5611fef611b0b565b836128e4565b9050919050565b60008060008061200e88888888612925565b92509250925061201e8282612a19565b829350505050949350505050565b600061203b8360000183612b7d565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036120b55760006040517fd5d258fa0000000000000000000000000000000000000000000000000000000081526004016120ac9190613c57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121275760006040517f0abbbe2e00000000000000000000000000000000000000000000000000000000815260040161211e9190613c57565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561224757818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f91ed140d4ef0d36cfe0e48d6e199657e7295b810bded34c1c95874b2b676e06d60405160405180910390a45b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401612280929190613e47565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516122ce9190613ce5565b6000604051808303816000865af19150503d806000811461230b576040519150601f19603f3d011682016040523d82523d6000602084013e612310565b606091505b509150915081801561233e575060008151148061233d57508080602001905181019061233c9190613d28565b5b5b61237d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237490613ee2565b60405180910390fd5b5050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b60006123b6612384565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156124045750825b9050600060018367ffffffffffffffff16148015612439575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612447575080155b1561247e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156124ce5760018560000160086101000a81548160ff0219169083151502179055505b6124d6612bed565b6124de612bf7565b6124e6612c01565b6124ef86612c35565b606460028190555083156125535760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161254a9190613c05565b60405180910390a15b505050505050565b612563612df4565b61256d8282612e34565b5050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561263c57848482846040517f680f1b420000000000000000000000000000000000000000000000000000000081526004016126339493929190613f02565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fc4298a5beffbb92832adef4bde23a2148eea5117fee88fd06e963ddcb4a523f48585858560405161277c9493929190613f47565b60405180910390a15050505050565b6127958282610d9c565b6127d85780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016127cf929190613f8c565b60405180910390fd5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612807612e89565b61280f612f05565b4630604051602001612825959493929190613fb5565b60405160208183030381529060405280519060200120905090565b612848610b88565b61287e576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612888610b88565b156128bf576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080836001016000848152602001908152602001600020541415905092915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115612965576000600385925092509250612a0f565b60006001888888886040516000815260200160405260405161298a9493929190614017565b6020604051602081039080840390855afa1580156129ac573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612a0057600060016000801b93509350935050612a0f565b8060008060001b935093509350505b9450945094915050565b60006003811115612a2d57612a2c61405c565b5b826003811115612a4057612a3f61405c565b5b0315612b795760016003811115612a5a57612a5961405c565b5b826003811115612a6d57612a6c61405c565b5b03612aa4576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612ab857612ab761405c565b5b826003811115612acb57612aca61405c565b5b03612b10578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612b079190613274565b60405180910390fd5b600380811115612b2357612b2261405c565b5b826003811115612b3657612b3561405c565b5b03612b7857806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401612b6f919061320a565b60405180910390fd5b5b5050565b6000612b8983836128c1565b612be2578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612be7565b600090505b92915050565b612bf5612df4565b565b612bff612df4565b565b612c09612df4565b6000612c13611dc7565b905060008160000160006101000a81548160ff02191690831515021790555050565b6000612c3f612384565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015612c8d5750825b9050600060018367ffffffffffffffff16148015612cc2575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612cd0575080155b15612d07576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315612d575760018560000160086101000a81548160ff0219169083151502179055505b612d646000801b87611a0a565b50612d8f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a87611a0a565b508315612dec5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051612de39190613c05565b60405180910390a15b505050505050565b612dfc612f81565b612e32576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612e3c612df4565b6000612e46611e61565b905082816002019081612e59919061422d565b5081816003019081612e6b919061422d565b506000801b81600001819055506000801b8160010181905550505050565b600080612e94611e61565b90506000612ea0611e89565b9050600081511115612ebd57808051906020012092505050612f02565b6000826000015490506000801b8114612edb57809350505050612f02565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b600080612f10611e61565b90506000612f1c611f2a565b9050600081511115612f3957808051906020012092505050612f7e565b6000826001015490506000801b8114612f5757809350505050612f7e565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b6000612f8b612384565b60000160089054906101000a900460ff16905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612fea81612fb5565b8114612ff557600080fd5b50565b60008135905061300781612fe1565b92915050565b60006020828403121561302357613022612fab565b5b600061303184828501612ff8565b91505092915050565b60008115159050919050565b61304f8161303a565b82525050565b600060208201905061306a6000830184613046565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061309b82613070565b9050919050565b6130ab81613090565b81146130b657600080fd5b50565b6000813590506130c8816130a2565b92915050565b6000819050919050565b6130e1816130ce565b81146130ec57600080fd5b50565b6000813590506130fe816130d8565b92915050565b6000806000806080858703121561311e5761311d612fab565b5b600061312c878288016130b9565b945050602061313d878288016130b9565b935050604061314e878288016130b9565b925050606061315f878288016130ef565b91505092959194509250565b60006020828403121561318157613180612fab565b5b600061318f848285016130b9565b91505092915050565b6000819050919050565b6131ab81613198565b81146131b657600080fd5b50565b6000813590506131c8816131a2565b92915050565b6000602082840312156131e4576131e3612fab565b5b60006131f2848285016131b9565b91505092915050565b61320481613198565b82525050565b600060208201905061321f60008301846131fb565b92915050565b6000806040838503121561323c5761323b612fab565b5b600061324a858286016131b9565b925050602061325b858286016130b9565b9150509250929050565b61326e816130ce565b82525050565b60006020820190506132896000830184613265565b92915050565b600080604083850312156132a6576132a5612fab565b5b60006132b4858286016130b9565b92505060206132c5858286016130ef565b9150509250929050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b613304816132cf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613344578082015181840152602081019050613329565b60008484015250505050565b6000601f19601f8301169050919050565b600061336c8261330a565b6133768185613315565b9350613386818560208601613326565b61338f81613350565b840191505092915050565b6133a381613090565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6133de816130ce565b82525050565b60006133f083836133d5565b60208301905092915050565b6000602082019050919050565b6000613414826133a9565b61341e81856133b4565b9350613429836133c5565b8060005b8381101561345a57815161344188826133e4565b975061344c836133fc565b92505060018101905061342d565b5085935050505092915050565b600060e08201905061347c600083018a6132fb565b818103602083015261348e8189613361565b905081810360408301526134a28188613361565b90506134b16060830187613265565b6134be608083018661339a565b6134cb60a08301856131fb565b81810360c08301526134dd8184613409565b905098975050505050505050565b60008060006060848603121561350457613503612fab565b5b6000613512868287016130b9565b9350506020613523868287016130b9565b9250506040613534868287016130b9565b9150509250925092565b600080fd5b600060a082840312156135595761355861353e565b5b81905092915050565b6000806000806000610120868803121561357f5761357e612fab565b5b600061358d888289016130b9565b955050602061359e888289016130b9565b94505060406135af888289016130ef565b93505060606135c0888289016131b9565b92505060806135d188828901613543565b9150509295509295909350565b6000806000606084860312156135f7576135f6612fab565b5b6000613605868287016130b9565b9350506020613616868287016130b9565b9250506040613627868287016130ef565b9150509250925092565b60006020828403121561364757613646612fab565b5b6000613655848285016130ef565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6136a082613350565b810181811067ffffffffffffffff821117156136bf576136be613668565b5b80604052505050565b60006136d2612fa1565b90506136de8282613697565b919050565b600067ffffffffffffffff8211156136fe576136fd613668565b5b61370782613350565b9050602081019050919050565b82818337600083830152505050565b6000613736613731846136e3565b6136c8565b90508281526020810184848401111561375257613751613663565b5b61375d848285613714565b509392505050565b600082601f83011261377a5761377961365e565b5b813561378a848260208601613723565b91505092915050565b600080604083850312156137aa576137a9612fab565b5b60006137b8858286016130b9565b925050602083013567ffffffffffffffff8111156137d9576137d8612fb0565b5b6137e585828601613765565b9150509250929050565b6000806040838503121561380657613805612fab565b5b6000613814858286016130b9565b9250506020613825858286016130b9565b9150509250929050565b7f4f776e61626c655061757361626c653a206163636573732064656e6965640000600082015250565b6000613865601e83613315565b91506138708261382f565b602082019050919050565b6000602082019050818103600083015261389481613858565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138d5826130ce565b91506138e0836130ce565b92508282019050808211156138f8576138f761389b565b5b92915050565b7f4549503731323a20556e696e697469616c697a65640000000000000000000000600082015250565b6000613934601583613315565b915061393f826138fe565b602082019050919050565b6000602082019050818103600083015261396381613927565b9050919050565b600060c08201905061397f60008301896131fb565b61398c602083018861339a565b613999604083018761339a565b6139a66060830186613265565b6139b360808301856131fb565b6139c060a0830184613265565b979650505050505050565b600060ff82169050919050565b6139e1816139cb565b81146139ec57600080fd5b50565b6000813590506139fe816139d8565b92915050565b600060208284031215613a1a57613a19612fab565b5b6000613a28848285016139ef565b91505092915050565b6000604082019050613a46600083018561339a565b613a53602083018461339a565b9392505050565b6000613a65826130ce565b9150613a70836130ce565b9250828203905081811115613a8857613a8761389b565b5b92915050565b600081905092915050565b50565b6000613aa9600083613a8e565b9150613ab482613a99565b600082019050919050565b6000613aca82613a9c565b9150819050919050565b7f5661756c743a204661696c656420746f2073656e642045746865720000000000600082015250565b6000613b0a601b83613315565b9150613b1582613ad4565b602082019050919050565b60006020820190508181036000830152613b3981613afd565b9050919050565b7f4d6f726967696e4170703a20696e76616c69642076616c756521000000000000600082015250565b6000613b76601a83613315565b9150613b8182613b40565b602082019050919050565b60006020820190508181036000830152613ba581613b69565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000613bef613bea613be584613bac565b613bca565b613bb6565b9050919050565b613bff81613bd4565b82525050565b6000602082019050613c1a6000830184613bf6565b92915050565b6000606082019050613c35600083018661339a565b613c426020830185613265565b613c4f6040830184613265565b949350505050565b6000602082019050613c6c600083018461339a565b92915050565b6000606082019050613c87600083018661339a565b613c94602083018561339a565b613ca16040830184613265565b949350505050565b600081519050919050565b6000613cbf82613ca9565b613cc98185613a8e565b9350613cd9818560208601613326565b80840191505092915050565b6000613cf18284613cb4565b915081905092915050565b613d058161303a565b8114613d1057600080fd5b50565b600081519050613d2281613cfc565b92915050565b600060208284031215613d3e57613d3d612fab565b5b6000613d4c84828501613d13565b91505092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000613db1603183613315565b9150613dbc82613d55565b604082019050919050565b60006020820190508181036000830152613de081613da4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613e2e57607f821691505b602082108103613e4157613e40613de7565b5b50919050565b6000604082019050613e5c600083018561339a565b613e696020830184613265565b9392505050565b7f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000613ecc602d83613315565b9150613ed782613e70565b604082019050919050565b60006020820190508181036000830152613efb81613ebf565b9050919050565b6000608082019050613f17600083018761339a565b613f24602083018661339a565b613f316040830185613265565b613f3e6060830184613265565b95945050505050565b6000608082019050613f5c600083018761339a565b613f69602083018661339a565b613f76604083018561339a565b613f836060830184613265565b95945050505050565b6000604082019050613fa1600083018561339a565b613fae60208301846131fb565b9392505050565b600060a082019050613fca60008301886131fb565b613fd760208301876131fb565b613fe460408301866131fb565b613ff16060830185613265565b613ffe608083018461339a565b9695505050505050565b614011816139cb565b82525050565b600060808201905061402c60008301876131fb565b6140396020830186614008565b61404660408301856131fb565b61405360608301846131fb565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026140ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826140b0565b6140f786836140b0565b95508019841693508086168417925050509392505050565b600061412a614125614120846130ce565b613bca565b6130ce565b9050919050565b6000819050919050565b6141448361410f565b61415861415082614131565b8484546140bd565b825550505050565b600090565b61416d614160565b61417881848461413b565b505050565b5b8181101561419c57614191600082614165565b60018101905061417e565b5050565b601f8211156141e1576141b28161408b565b6141bb846140a0565b810160208510156141ca578190505b6141de6141d6856140a0565b83018261417d565b50505b505050565b600082821c905092915050565b6000614204600019846008026141e6565b1980831691505092915050565b600061421d83836141f3565b9150826002028217905092915050565b6142368261330a565b67ffffffffffffffff81111561424f5761424e613668565b5b6142598254613e16565b6142648282856141a0565b600060209050601f8311600181146142975760008415614285578287015190505b61428f8582614211565b8655506142f7565b601f1984166142a58661408b565b60005b828110156142cd578489015182556001820191506020850194506020810190506142a8565b868310156142ea57848901516142e6601f8916826141f3565b8355505b6001600288020188555050505b50505050505056fea26469706673582212203afceafcdeadf1e9dbebf358c3d25952c4f86a694bfc6806320676566b6df42f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4335 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82DC1EC4 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBEABACC8 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xF2407CA4 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF399E22E EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x714 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x65A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xA1B996C1 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5A0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x82DC1EC4 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4CC JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x47E7EF24 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x6B2C0F55 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x463 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x3D538ECF EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x46FBF68E EQ PUSH2 0x3B6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x320 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x15DACBEA EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x254 JUMPI PUSH2 0x1D8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x300D JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH2 0x903 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x328F JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0xBAD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0xC17 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x524 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x3562 JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x681 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AC PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x14E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x157A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x37EF JUMP JUMPDEST PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7C4 JUMPI POP PUSH2 0x7C3 DUP3 PUSH2 0x17CF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D6 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E4 DUP7 DUP7 DUP4 DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x7F0 DUP7 DUP7 DUP7 DUP7 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x80A PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x116C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x818 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84A PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85A DUP3 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x863 DUP2 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x86D DUP4 DUP4 PUSH2 0x1A0A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F8 DUP3 DUP3 PUSH2 0x1B1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x92D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x963 SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x974 PUSH2 0x1C1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3A JUMPI PUSH1 0x0 CALLVALUE EQ PUSH2 0xA22 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xF30C25E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA35 DUP3 PUSH2 0xA2E PUSH2 0x1839 JUMP JUMPDEST ADDRESS DUP5 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xA7E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xE279109D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0xA8B PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x38CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB20 PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB93 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xBD7 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH2 0x116C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBE7 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x851 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC14 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH2 0x851 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC41 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC88 PUSH2 0x1DEF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0xCA0 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0xCBE JUMPI POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP1 PUSH2 0x394A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD05 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0xD0D PUSH2 0x1F2A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0x3668 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD5C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDA7 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1D SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF3A DUP3 PUSH1 0x3 PUSH2 0x1FCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xF7C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x591145FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xFC9 JUMPI DUP1 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH32 0x891870A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x1BCD16601E2086D958CF8198037B6718BDC081870F18734581AE91EE73069E95 DUP3 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x101C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x103F DUP3 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1069 DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP8 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1FFC JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x107E SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1101 JUMPI DUP1 DUP5 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6BABB09700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F8 SWAP3 SWAP2 SWAP1 PUSH2 0x3A31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1115 DUP6 PUSH1 0x3 PUSH2 0x202C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1136 DUP9 DUP6 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x112D SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST DUP10 DUP10 PUSH1 0x1 PUSH2 0x2043 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1152 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP PUSH2 0x1160 DUP6 DUP3 DUP7 DUP7 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1175 DUP3 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1188 DUP4 DUP4 PUSH2 0x1B1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 LT ISZERO PUSH2 0x11D4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xE279109D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11E1 PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12A0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xE279109D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x12AC PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x3A5A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141F JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1393 SWAP1 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1419 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP1 PUSH2 0x3B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x142B JUMP JUMPDEST PUSH2 0x142A DUP5 DUP5 DUP5 PUSH2 0x224E JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1488 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14A1 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP PUSH2 0x14B1 DUP6 DUP3 DUP7 DUP7 PUSH1 0x1 PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x14EE PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1524 SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1567 SWAP1 PUSH2 0x3B8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1584 PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15D2 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1607 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1615 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x169C JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x16A5 DUP8 PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x16E4 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x255B JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1740 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1737 SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184E DUP6 DUP6 DUP6 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x18D1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18C0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xCF7E367800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18D0 DUP6 DUP6 DUP6 DUP6 DUP6 SUB PUSH1 0x0 PUSH2 0x2043 JUMP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xF4D2BE2900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1941 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE0823DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B3 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2571 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A07 DUP2 PUSH2 0x1A02 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x278B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A15 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP PUSH2 0x1A21 DUP5 DUP5 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x1AFF JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A9B PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 PUSH2 0x27DC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B25 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP PUSH2 0x1B31 DUP5 DUP5 PUSH2 0xD9C JUMP JUMPDEST ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1BAC PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C16 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C24 PUSH2 0x2840 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2E PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1C76 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C83 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1CC2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x3CE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D4D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1D80 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1D7F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1DBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP1 PUSH2 0x3DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DF7 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E01 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E49 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1E95 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1EA6 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1ED2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F36 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1F47 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F73 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FC0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F95 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FC0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FA3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x28C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF5 PUSH2 0x1FEF PUSH2 0x1B0B JUMP JUMPDEST DUP4 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x200E DUP9 DUP9 DUP9 DUP9 PUSH2 0x2925 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x201E DUP3 DUP3 PUSH2 0x2A19 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203B DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xD5D258FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2127 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xABBBE2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211E SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2247 JUMPI DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91ED140D4EF0D36CFE0E48D6E199657E7295B810BDED34C1C95874B2B676E06D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2280 SWAP3 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x22CE SWAP2 SWAP1 PUSH2 0x3CE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x230B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x233E JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x233D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x233C SWAP2 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x237D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2374 SWAP1 PUSH2 0x3EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B6 PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2404 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2439 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2447 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x247E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x24CE JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x24D6 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x24DE PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x24E6 PUSH2 0x2C01 JUMP JUMPDEST PUSH2 0x24EF DUP7 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2553 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2563 PUSH2 0x2DF4 JUMP JUMPDEST PUSH2 0x256D DUP3 DUP3 PUSH2 0x2E34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x263C JUMPI DUP5 DUP5 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH32 0x680F1B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2633 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xC4298A5BEFFBB92832ADEF4BDE23A2148EEA5117FEE88FD06E963DDCB4A523F4 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x277C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2795 DUP3 DUP3 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x27D8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27CF SWAP3 SWAP2 SWAP1 PUSH2 0x3F8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x2807 PUSH2 0x2E89 JUMP JUMPDEST PUSH2 0x280F PUSH2 0x2F05 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2825 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2848 PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x287E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2888 PUSH2 0xB88 JUMP JUMPDEST ISZERO PUSH2 0x28BF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x298A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4017 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A00 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2B79 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A5A JUMPI PUSH2 0x2A59 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A6D JUMPI PUSH2 0x2A6C PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2AA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2AB8 JUMPI PUSH2 0x2AB7 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2ACB JUMPI PUSH2 0x2ACA PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2B10 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B07 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2B22 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2B36 JUMPI PUSH2 0x2B35 PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2B78 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6F SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B89 DUP4 DUP4 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0x2BE2 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BF5 PUSH2 0x2DF4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BFF PUSH2 0x2DF4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C09 PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C13 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3F PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2C8D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2CC2 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2CD0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2D07 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2D57 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x2D64 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x1A0A JUMP JUMPDEST POP PUSH2 0x2D8F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP8 PUSH2 0x1A0A JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x2DEC JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2DE3 SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2DFC PUSH2 0x2F81 JUMP JUMPDEST PUSH2 0x2E32 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2E3C PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E46 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2E59 SWAP2 SWAP1 PUSH2 0x422D JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2E6B SWAP2 SWAP1 PUSH2 0x422D JUMP JUMPDEST POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E94 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2EA0 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2EBD JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x2F02 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2EDB JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x2F02 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F10 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F1C PUSH2 0x1F2A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2F39 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x2F7E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2F57 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x2F7E JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8B PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FEA DUP2 PUSH2 0x2FB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3007 DUP2 PUSH2 0x2FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3023 JUMPI PUSH2 0x3022 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP5 DUP3 DUP6 ADD PUSH2 0x2FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x304F DUP2 PUSH2 0x303A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x306A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309B DUP3 PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30AB DUP2 PUSH2 0x3090 JUMP JUMPDEST DUP2 EQ PUSH2 0x30B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30C8 DUP2 PUSH2 0x30A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E1 DUP2 PUSH2 0x30CE JUMP JUMPDEST DUP2 EQ PUSH2 0x30EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30FE DUP2 PUSH2 0x30D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x311E JUMPI PUSH2 0x311D PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x312C DUP8 DUP3 DUP9 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x313D DUP8 DUP3 DUP9 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x314E DUP8 DUP3 DUP9 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x315F DUP8 DUP3 DUP9 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3181 JUMPI PUSH2 0x3180 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318F DUP5 DUP3 DUP6 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31AB DUP2 PUSH2 0x3198 JUMP JUMPDEST DUP2 EQ PUSH2 0x31B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31C8 DUP2 PUSH2 0x31A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E4 JUMPI PUSH2 0x31E3 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31F2 DUP5 DUP3 DUP6 ADD PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3204 DUP2 PUSH2 0x3198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x323C JUMPI PUSH2 0x323B PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x324A DUP6 DUP3 DUP7 ADD PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x325B DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x326E DUP2 PUSH2 0x30CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3289 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32A6 JUMPI PUSH2 0x32A5 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32B4 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x32C5 DUP6 DUP3 DUP7 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3304 DUP2 PUSH2 0x32CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3344 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3329 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336C DUP3 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x3376 DUP2 DUP6 PUSH2 0x3315 JUMP JUMPDEST SWAP4 POP PUSH2 0x3386 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3326 JUMP JUMPDEST PUSH2 0x338F DUP2 PUSH2 0x3350 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33A3 DUP2 PUSH2 0x3090 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33DE DUP2 PUSH2 0x30CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F0 DUP4 DUP4 PUSH2 0x33D5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3414 DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH2 0x341E DUP2 DUP6 PUSH2 0x33B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3429 DUP4 PUSH2 0x33C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x345A JUMPI DUP2 MLOAD PUSH2 0x3441 DUP9 DUP3 PUSH2 0x33E4 JUMP JUMPDEST SWAP8 POP PUSH2 0x344C DUP4 PUSH2 0x33FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x342D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x347C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x32FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x348E DUP2 DUP10 PUSH2 0x3361 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x34A2 DUP2 DUP9 PUSH2 0x3361 JUMP JUMPDEST SWAP1 POP PUSH2 0x34B1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x34BE PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x34CB PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x31FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x34DD DUP2 DUP5 PUSH2 0x3409 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3504 JUMPI PUSH2 0x3503 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3512 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3523 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3534 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3559 JUMPI PUSH2 0x3558 PUSH2 0x353E JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x357F JUMPI PUSH2 0x357E PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x358D DUP9 DUP3 DUP10 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x359E DUP9 DUP3 DUP10 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x35AF DUP9 DUP3 DUP10 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x35C0 DUP9 DUP3 DUP10 ADD PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x35D1 DUP9 DUP3 DUP10 ADD PUSH2 0x3543 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35F7 JUMPI PUSH2 0x35F6 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3605 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3616 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3627 DUP7 DUP3 DUP8 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3647 JUMPI PUSH2 0x3646 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3655 DUP5 DUP3 DUP6 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x36A0 DUP3 PUSH2 0x3350 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x36BF JUMPI PUSH2 0x36BE PUSH2 0x3668 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D2 PUSH2 0x2FA1 JUMP JUMPDEST SWAP1 POP PUSH2 0x36DE DUP3 DUP3 PUSH2 0x3697 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x36FE JUMPI PUSH2 0x36FD PUSH2 0x3668 JUMP JUMPDEST JUMPDEST PUSH2 0x3707 DUP3 PUSH2 0x3350 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3736 PUSH2 0x3731 DUP5 PUSH2 0x36E3 JUMP JUMPDEST PUSH2 0x36C8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3752 JUMPI PUSH2 0x3751 PUSH2 0x3663 JUMP JUMPDEST JUMPDEST PUSH2 0x375D DUP5 DUP3 DUP6 PUSH2 0x3714 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x377A JUMPI PUSH2 0x3779 PUSH2 0x365E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x378A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3723 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37AA JUMPI PUSH2 0x37A9 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B8 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37D9 JUMPI PUSH2 0x37D8 PUSH2 0x2FB0 JUMP JUMPDEST JUMPDEST PUSH2 0x37E5 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3806 JUMPI PUSH2 0x3805 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3814 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3825 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C655061757361626C653A206163636573732064656E6965640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3865 PUSH1 0x1E DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3870 DUP3 PUSH2 0x382F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3894 DUP2 PUSH2 0x3858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38D5 DUP3 PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP PUSH2 0x38E0 DUP4 PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x38F8 JUMPI PUSH2 0x38F7 PUSH2 0x389B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3934 PUSH1 0x15 DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x393F DUP3 PUSH2 0x38FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3963 DUP2 PUSH2 0x3927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x397F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x398C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3999 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x39A6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x39B3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x39C0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E1 DUP2 PUSH2 0x39CB JUMP JUMPDEST DUP2 EQ PUSH2 0x39EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39FE DUP2 PUSH2 0x39D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A1A JUMPI PUSH2 0x3A19 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A28 DUP5 DUP3 DUP6 ADD PUSH2 0x39EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3A53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x339A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A65 DUP3 PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP PUSH2 0x3A70 DUP4 PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A88 JUMPI PUSH2 0x3A87 PUSH2 0x389B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA9 PUSH1 0x0 DUP4 PUSH2 0x3A8E JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB4 DUP3 PUSH2 0x3A99 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ACA DUP3 PUSH2 0x3A9C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5661756C743A204661696C656420746F2073656E642045746865720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0A PUSH1 0x1B DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B15 DUP3 PUSH2 0x3AD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B39 DUP2 PUSH2 0x3AFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F726967696E4170703A20696E76616C69642076616C756521000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B76 PUSH1 0x1A DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B81 DUP3 PUSH2 0x3B40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BA5 DUP2 PUSH2 0x3B69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BEF PUSH2 0x3BEA PUSH2 0x3BE5 DUP5 PUSH2 0x3BAC JUMP JUMPDEST PUSH2 0x3BCA JUMP JUMPDEST PUSH2 0x3BB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BFF DUP2 PUSH2 0x3BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C35 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3C42 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3C4F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x339A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C87 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3C94 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3CA1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CBF DUP3 PUSH2 0x3CA9 JUMP JUMPDEST PUSH2 0x3CC9 DUP2 DUP6 PUSH2 0x3A8E JUMP JUMPDEST SWAP4 POP PUSH2 0x3CD9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3326 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF1 DUP3 DUP5 PUSH2 0x3CB4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D05 DUP2 PUSH2 0x303A JUMP JUMPDEST DUP2 EQ PUSH2 0x3D10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D22 DUP2 PUSH2 0x3CFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D3E JUMPI PUSH2 0x3D3D PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D4C DUP5 DUP3 DUP6 ADD PUSH2 0x3D13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB1 PUSH1 0x31 DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DBC DUP3 PUSH2 0x3D55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE0 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3E2E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E41 JUMPI PUSH2 0x3E40 PUSH2 0x3DE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E5C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3E69 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E73666572206661696C656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ECC PUSH1 0x2D DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ED7 DUP3 PUSH2 0x3E70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EFB DUP2 PUSH2 0x3EBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F17 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F24 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F31 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3F3E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F5C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F69 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F76 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F83 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3FAE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3FCA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x3FD7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x3FE4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x3FF1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3FFE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x339A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4011 DUP2 PUSH2 0x39CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x402C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x4039 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4008 JUMP JUMPDEST PUSH2 0x4046 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x4053 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31FB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x40ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x40B0 JUMP JUMPDEST PUSH2 0x40F7 DUP7 DUP4 PUSH2 0x40B0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412A PUSH2 0x4125 PUSH2 0x4120 DUP5 PUSH2 0x30CE JUMP JUMPDEST PUSH2 0x3BCA JUMP JUMPDEST PUSH2 0x30CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4144 DUP4 PUSH2 0x410F JUMP JUMPDEST PUSH2 0x4158 PUSH2 0x4150 DUP3 PUSH2 0x4131 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x40BD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x416D PUSH2 0x4160 JUMP JUMPDEST PUSH2 0x4178 DUP2 DUP5 DUP5 PUSH2 0x413B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x419C JUMPI PUSH2 0x4191 PUSH1 0x0 DUP3 PUSH2 0x4165 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x417E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41E1 JUMPI PUSH2 0x41B2 DUP2 PUSH2 0x408B JUMP JUMPDEST PUSH2 0x41BB DUP5 PUSH2 0x40A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x41CA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x41DE PUSH2 0x41D6 DUP6 PUSH2 0x40A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x417D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4204 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x41E6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421D DUP4 DUP4 PUSH2 0x41F3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4236 DUP3 PUSH2 0x330A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x424F JUMPI PUSH2 0x424E PUSH2 0x3668 JUMP JUMPDEST JUMPDEST PUSH2 0x4259 DUP3 SLOAD PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x4264 DUP3 DUP3 DUP6 PUSH2 0x41A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4297 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4285 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x428F DUP6 DUP3 PUSH2 0x4211 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x42F7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x42A5 DUP7 PUSH2 0x408B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x42CD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42A8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x42EA JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x42E6 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x41F3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xFC 0xEA 0xFC 0xDE 0xAD CALL 0xE9 0xDB 0xEB RETURN PC 0xC3 0xD2 MSIZE MSTORE 0xC4 0xF8 PUSH11 0x694BFC6806320676566B6D DELEGATECALL 0x2F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1020:2969:21:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":4416,"id":28,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_5259":{"entryPoint":2163,"id":5259,"parameterSlots":0,"returnSlots":1},"@PAUSER_ROLE_3960":{"entryPoint":5309,"id":3960,"parameterSlots":0,"returnSlots":0},"@_4768":{"entryPoint":null,"id":4768,"parameterSlots":0,"returnSlots":0},"@_4772":{"entryPoint":null,"id":4772,"parameterSlots":0,"returnSlots":0},"@_EIP712NameHash_1121":{"entryPoint":11913,"id":1121,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_1053":{"entryPoint":7817,"id":1053,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_1173":{"entryPoint":12037,"id":1173,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_1069":{"entryPoint":7978,"id":1069,"parameterSlots":0,"returnSlots":1},"@__AccessControl_init_unchained_69":{"entryPoint":11255,"id":69,"parameterSlots":0,"returnSlots":0},"@__Context_init_unchained_635":{"entryPoint":11245,"id":635,"parameterSlots":0,"returnSlots":0},"@__EIP712_init_887":{"entryPoint":9563,"id":887,"parameterSlots":2,"returnSlots":0},"@__EIP712_init_unchained_927":{"entryPoint":11828,"id":927,"parameterSlots":2,"returnSlots":0},"@__OwnablePausableUpgradeable_init_4015":{"entryPoint":9132,"id":4015,"parameterSlots":1,"returnSlots":0},"@__OwnablePausableUpgradeable_init_unchained_4034":{"entryPoint":11317,"id":4034,"parameterSlots":1,"returnSlots":0},"@__Pausable_init_unchained_724":{"entryPoint":11265,"id":724,"parameterSlots":0,"returnSlots":0},"@_add_3223":{"entryPoint":11133,"id":3223,"parameterSlots":2,"returnSlots":1},"@_approve_4351":{"entryPoint":8259,"id":4351,"parameterSlots":5,"returnSlots":0},"@_buildDomainSeparator_960":{"entryPoint":10204,"id":960,"parameterSlots":0,"returnSlots":1},"@_checkInitializing_538":{"entryPoint":11764,"id":538,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":6646,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":10123,"id":150,"parameterSlots":2,"returnSlots":0},"@_contains_3326":{"entryPoint":10433,"id":3326,"parameterSlots":2,"returnSlots":1},"@_domainSeparatorV4_937":{"entryPoint":6923,"id":937,"parameterSlots":0,"returnSlots":1},"@_getAccessControlStorage_46":{"entryPoint":6606,"id":46,"parameterSlots":0,"returnSlots":1},"@_getEIP712Storage_871":{"entryPoint":7777,"id":871,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_615":{"entryPoint":9092,"id":615,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_680":{"entryPoint":7623,"id":680,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":6666,"id":315,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_976":{"entryPoint":8162,"id":976,"parameterSlots":1,"returnSlots":1},"@_isInitializing_606":{"entryPoint":12161,"id":606,"parameterSlots":0,"returnSlots":1},"@_msgSender_644":{"entryPoint":6201,"id":644,"parameterSlots":0,"returnSlots":1},"@_pause_805":{"entryPoint":7663,"id":805,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_768":{"entryPoint":10368,"id":768,"parameterSlots":0,"returnSlots":0},"@_requirePaused_781":{"entryPoint":10304,"id":781,"parameterSlots":0,"returnSlots":0},"@_revokeRole_361":{"entryPoint":6938,"id":361,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_4613":{"entryPoint":6209,"id":4613,"parameterSlots":4,"returnSlots":0},"@_throwError_1924":{"entryPoint":10777,"id":1924,"parameterSlots":2,"returnSlots":0},"@_transfer_4501":{"entryPoint":6360,"id":4501,"parameterSlots":4,"returnSlots":0},"@_unpause_829":{"entryPoint":7196,"id":829,"parameterSlots":0,"returnSlots":0},"@_update_4561":{"entryPoint":9585,"id":4561,"parameterSlots":4,"returnSlots":0},"@addAdmin_4062":{"entryPoint":3034,"id":4062,"parameterSlots":1,"returnSlots":0},"@addPauser_4103":{"entryPoint":3050,"id":4103,"parameterSlots":1,"returnSlots":0},"@add_3393":{"entryPoint":8236,"id":3393,"parameterSlots":2,"returnSlots":1},"@allowance_4451":{"entryPoint":3605,"id":4451,"parameterSlots":3,"returnSlots":1},"@approve_4288":{"entryPoint":5270,"id":4288,"parameterSlots":3,"returnSlots":1},"@balanceOf_4367":{"entryPoint":5961,"id":4367,"parameterSlots":2,"returnSlots":1},"@contains_3429":{"entryPoint":8139,"id":3429,"parameterSlots":2,"returnSlots":1},"@deposit_4680":{"entryPoint":2473,"id":4680,"parameterSlots":2,"returnSlots":0},"@eip712Domain_1037":{"entryPoint":3210,"id":1037,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_171":{"entryPoint":2061,"id":171,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":2129,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":3484,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_5147":{"entryPoint":5498,"id":5147,"parameterSlots":2,"returnSlots":0},"@isAdmin_4049":{"entryPoint":2107,"id":4049,"parameterSlots":1,"returnSlots":1},"@isPauser_4090":{"entryPoint":2422,"id":4090,"parameterSlots":1,"returnSlots":1},"@paginationSize_3962":{"entryPoint":2301,"id":3962,"parameterSlots":0,"returnSlots":0},"@pause_4127":{"entryPoint":3095,"id":4127,"parameterSlots":0,"returnSlots":0},"@paused_756":{"entryPoint":2952,"id":756,"parameterSlots":0,"returnSlots":1},"@permit_5249":{"entryPoint":3802,"id":5249,"parameterSlots":5,"returnSlots":0},"@recover_1875":{"entryPoint":8188,"id":1875,"parameterSlots":4,"returnSlots":1},"@removeAdmin_4075":{"entryPoint":2045,"id":4075,"parameterSlots":1,"returnSlots":0},"@removePauser_4116":{"entryPoint":2989,"id":4116,"parameterSlots":1,"returnSlots":0},"@renounceRole_232":{"entryPoint":2178,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":4460,"id":209,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_3917":{"entryPoint":7310,"id":3917,"parameterSlots":4,"returnSlots":0},"@safeTransfer_3871":{"entryPoint":8782,"id":3871,"parameterSlots":3,"returnSlots":0},"@setPaginationSize_4157":{"entryPoint":5345,"id":4157,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1213":{"entryPoint":6095,"id":1213,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":1873,"id":91,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_1998":{"entryPoint":10468,"id":1998,"parameterSlots":2,"returnSlots":1},"@transferFrom_4430":{"entryPoint":1995,"id":4430,"parameterSlots":4,"returnSlots":1},"@transfer_4394":{"entryPoint":4423,"id":4394,"parameterSlots":3,"returnSlots":1},"@tryRecover_1839":{"entryPoint":10533,"id":1839,"parameterSlots":4,"returnSlots":3},"@unpause_4138":{"entryPoint":2307,"id":4138,"parameterSlots":0,"returnSlots":0},"@withdraw_4764":{"entryPoint":4494,"id":4764,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":14115,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":15635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":12729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":14181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_PermitSignature_$4835_calldata_ptr":{"entryPoint":13635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":14831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14319,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":13547,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_addresst_uint256":{"entryPoint":12548,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13790,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes32t_struct$_PermitSignature_$4835_calldata_ptr":{"entryPoint":13666,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":14227,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12943,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":15656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":12750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12837,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":12301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":13873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8":{"entryPoint":14852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13210,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12358,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":13051,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12795,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":15350,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01_to_t_string_memory_ptr_fromStack":{"entryPoint":15209,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack":{"entryPoint":14631,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d_to_t_string_memory_ptr_fromStack":{"entryPoint":14424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack":{"entryPoint":15780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303_to_t_string_memory_ptr_fromStack":{"entryPoint":15101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15004,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack":{"entryPoint":16063,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13269,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":16392,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15039,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":14897,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":16199,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":15474,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16130,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":16268,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15943,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15392,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13415,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12810,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":14698,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":16309,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":16407,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":15365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14666,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15815,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16098,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12916,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":14024,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12193,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":14051,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13253,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":16523,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13225,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15529,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":13066,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13308,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13236,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14990,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13077,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14538,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14938,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":16800,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":12432,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12346,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":13007,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12696,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":12213,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":15276,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12400,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12494,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":15286,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14795,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":16765,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":15316,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":16655,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16941,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14100,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":13094,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":16544,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":15894,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16913,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13975,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":15306,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16883,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":14491,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16476,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15847,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13928,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":16689,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13918,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":13630,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13923,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12208,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12203,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":13136,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":16560,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16870,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":16741,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01":{"entryPoint":15168,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade":{"entryPoint":14590,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d":{"entryPoint":14383,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c":{"entryPoint":15701,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303":{"entryPoint":15060,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":15001,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611":{"entryPoint":15984,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":16573,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":16699,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12450,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":15612,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12706,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12257,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12504,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":14808,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":16736,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:37235:23","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:23","statements":[{"nodeType":"YulAssignment","src":"57:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:23"},"nodeType":"YulFunctionCall","src":"67:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:23"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:23","type":""}],"src":"7:75:23"},{"body":{"nodeType":"YulBlock","src":"177:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:23"},"nodeType":"YulFunctionCall","src":"187:12:23"},"nodeType":"YulExpressionStatement","src":"187:12:23"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:23"},{"body":{"nodeType":"YulBlock","src":"300:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:23"},"nodeType":"YulFunctionCall","src":"310:12:23"},"nodeType":"YulExpressionStatement","src":"310:12:23"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:23"},{"body":{"nodeType":"YulBlock","src":"378:105:23","statements":[{"nodeType":"YulAssignment","src":"388:89:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:23","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:78:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:23"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:23","type":""}],"src":"334:149:23"},{"body":{"nodeType":"YulBlock","src":"531:78:23","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:23"},"nodeType":"YulFunctionCall","src":"589:12:23"},"nodeType":"YulExpressionStatement","src":"589:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:23"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:23"},"nodeType":"YulFunctionCall","src":"561:23:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:23"},"nodeType":"YulFunctionCall","src":"551:34:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:23"},"nodeType":"YulFunctionCall","src":"544:42:23"},"nodeType":"YulIf","src":"541:62:23"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:23","type":""}],"src":"489:120:23"},{"body":{"nodeType":"YulBlock","src":"666:86:23","statements":[{"nodeType":"YulAssignment","src":"676:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:23"},"nodeType":"YulFunctionCall","src":"685:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:23"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:23"},"nodeType":"YulFunctionCall","src":"714:32:23"},"nodeType":"YulExpressionStatement","src":"714:32:23"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:23","type":""}],"src":"615:137:23"},{"body":{"nodeType":"YulBlock","src":"823:262:23","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:23"},"nodeType":"YulFunctionCall","src":"871:79:23"},"nodeType":"YulExpressionStatement","src":"871:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:23"},"nodeType":"YulFunctionCall","src":"840:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:23"},"nodeType":"YulFunctionCall","src":"836:32:23"},"nodeType":"YulIf","src":"833:119:23"},{"nodeType":"YulBlock","src":"962:116:23","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:23","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:23"},"nodeType":"YulFunctionCall","src":"1036:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:23"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:23"},"nodeType":"YulFunctionCall","src":"1016:52:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:23"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:23","type":""}],"src":"758:327:23"},{"body":{"nodeType":"YulBlock","src":"1133:48:23","statements":[{"nodeType":"YulAssignment","src":"1143:32:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:23"},"nodeType":"YulFunctionCall","src":"1161:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:23"},"nodeType":"YulFunctionCall","src":"1154:21:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:23"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:23","type":""}],"src":"1091:90:23"},{"body":{"nodeType":"YulBlock","src":"1246:50:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:23"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:23"},"nodeType":"YulFunctionCall","src":"1268:21:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:23"},"nodeType":"YulFunctionCall","src":"1256:34:23"},"nodeType":"YulExpressionStatement","src":"1256:34:23"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:23","type":""}],"src":"1187:109:23"},{"body":{"nodeType":"YulBlock","src":"1394:118:23","statements":[{"nodeType":"YulAssignment","src":"1404:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:23"},"nodeType":"YulFunctionCall","src":"1412:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:23"},"nodeType":"YulFunctionCall","src":"1487:17:23"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:23"},"nodeType":"YulFunctionCall","src":"1440:65:23"},"nodeType":"YulExpressionStatement","src":"1440:65:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:23","type":""}],"src":"1302:210:23"},{"body":{"nodeType":"YulBlock","src":"1563:81:23","statements":[{"nodeType":"YulAssignment","src":"1573:65:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:23"},"nodeType":"YulFunctionCall","src":"1584:54:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:23"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:23","type":""}],"src":"1518:126:23"},{"body":{"nodeType":"YulBlock","src":"1695:51:23","statements":[{"nodeType":"YulAssignment","src":"1705:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:23"},"nodeType":"YulFunctionCall","src":"1716:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:23"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:23","type":""}],"src":"1650:96:23"},{"body":{"nodeType":"YulBlock","src":"1795:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"1852:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1864:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1854:6:23"},"nodeType":"YulFunctionCall","src":"1854:12:23"},"nodeType":"YulExpressionStatement","src":"1854:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1818:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1843:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1825:17:23"},"nodeType":"YulFunctionCall","src":"1825:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1815:2:23"},"nodeType":"YulFunctionCall","src":"1815:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1808:6:23"},"nodeType":"YulFunctionCall","src":"1808:43:23"},"nodeType":"YulIf","src":"1805:63:23"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1788:5:23","type":""}],"src":"1752:122:23"},{"body":{"nodeType":"YulBlock","src":"1932:87:23","statements":[{"nodeType":"YulAssignment","src":"1942:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1964:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1951:12:23"},"nodeType":"YulFunctionCall","src":"1951:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1942:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2007:5:23"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1980:26:23"},"nodeType":"YulFunctionCall","src":"1980:33:23"},"nodeType":"YulExpressionStatement","src":"1980:33:23"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"1918:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1926:5:23","type":""}],"src":"1880:139:23"},{"body":{"nodeType":"YulBlock","src":"2070:32:23","statements":[{"nodeType":"YulAssignment","src":"2080:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"2091:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2080:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2052:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2062:7:23","type":""}],"src":"2025:77:23"},{"body":{"nodeType":"YulBlock","src":"2151:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"2208:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2217:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2220:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2210:6:23"},"nodeType":"YulFunctionCall","src":"2210:12:23"},"nodeType":"YulExpressionStatement","src":"2210:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2174:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2199:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2181:17:23"},"nodeType":"YulFunctionCall","src":"2181:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2171:2:23"},"nodeType":"YulFunctionCall","src":"2171:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2164:6:23"},"nodeType":"YulFunctionCall","src":"2164:43:23"},"nodeType":"YulIf","src":"2161:63:23"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2144:5:23","type":""}],"src":"2108:122:23"},{"body":{"nodeType":"YulBlock","src":"2288:87:23","statements":[{"nodeType":"YulAssignment","src":"2298:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2320:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2307:12:23"},"nodeType":"YulFunctionCall","src":"2307:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2298:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2363:5:23"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2336:26:23"},"nodeType":"YulFunctionCall","src":"2336:33:23"},"nodeType":"YulExpressionStatement","src":"2336:33:23"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2266:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2274:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2282:5:23","type":""}],"src":"2236:139:23"},{"body":{"nodeType":"YulBlock","src":"2498:648:23","statements":[{"body":{"nodeType":"YulBlock","src":"2545:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2547:77:23"},"nodeType":"YulFunctionCall","src":"2547:79:23"},"nodeType":"YulExpressionStatement","src":"2547:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2519:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2528:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2515:3:23"},"nodeType":"YulFunctionCall","src":"2515:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2540:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2511:3:23"},"nodeType":"YulFunctionCall","src":"2511:33:23"},"nodeType":"YulIf","src":"2508:120:23"},{"nodeType":"YulBlock","src":"2638:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2653:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2667:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2657:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2682:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2717:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2728:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2713:3:23"},"nodeType":"YulFunctionCall","src":"2713:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2737:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2692:20:23"},"nodeType":"YulFunctionCall","src":"2692:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2682:6:23"}]}]},{"nodeType":"YulBlock","src":"2765:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2780:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2794:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2784:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2810:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2845:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2856:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2841:3:23"},"nodeType":"YulFunctionCall","src":"2841:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2865:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2820:20:23"},"nodeType":"YulFunctionCall","src":"2820:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2810:6:23"}]}]},{"nodeType":"YulBlock","src":"2893:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2908:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2922:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2912:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2938:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2973:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2984:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2969:3:23"},"nodeType":"YulFunctionCall","src":"2969:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2993:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2948:20:23"},"nodeType":"YulFunctionCall","src":"2948:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2938:6:23"}]}]},{"nodeType":"YulBlock","src":"3021:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3036:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3050:2:23","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3040:6:23","type":""}]},{"nodeType":"YulAssignment","src":"3066:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3101:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3112:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3097:3:23"},"nodeType":"YulFunctionCall","src":"3097:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3121:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3076:20:23"},"nodeType":"YulFunctionCall","src":"3076:53:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3066:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2444:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2455:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2467:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2475:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2483:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2491:6:23","type":""}],"src":"2381:765:23"},{"body":{"nodeType":"YulBlock","src":"3218:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"3264:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3266:77:23"},"nodeType":"YulFunctionCall","src":"3266:79:23"},"nodeType":"YulExpressionStatement","src":"3266:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3239:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3248:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3235:3:23"},"nodeType":"YulFunctionCall","src":"3235:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3260:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3231:3:23"},"nodeType":"YulFunctionCall","src":"3231:32:23"},"nodeType":"YulIf","src":"3228:119:23"},{"nodeType":"YulBlock","src":"3357:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3372:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3386:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3376:6:23","type":""}]},{"nodeType":"YulAssignment","src":"3401:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3436:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3447:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3432:3:23"},"nodeType":"YulFunctionCall","src":"3432:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3456:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3411:20:23"},"nodeType":"YulFunctionCall","src":"3411:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3401:6:23"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3188:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3199:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3211:6:23","type":""}],"src":"3152:329:23"},{"body":{"nodeType":"YulBlock","src":"3532:32:23","statements":[{"nodeType":"YulAssignment","src":"3542:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"3553:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3542:7:23"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3524:7:23","type":""}],"src":"3487:77:23"},{"body":{"nodeType":"YulBlock","src":"3613:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"3670:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3679:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3682:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3672:6:23"},"nodeType":"YulFunctionCall","src":"3672:12:23"},"nodeType":"YulExpressionStatement","src":"3672:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3636:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3661:5:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3643:17:23"},"nodeType":"YulFunctionCall","src":"3643:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3633:2:23"},"nodeType":"YulFunctionCall","src":"3633:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3626:6:23"},"nodeType":"YulFunctionCall","src":"3626:43:23"},"nodeType":"YulIf","src":"3623:63:23"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3606:5:23","type":""}],"src":"3570:122:23"},{"body":{"nodeType":"YulBlock","src":"3750:87:23","statements":[{"nodeType":"YulAssignment","src":"3760:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3782:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3769:12:23"},"nodeType":"YulFunctionCall","src":"3769:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3760:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3825:5:23"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3798:26:23"},"nodeType":"YulFunctionCall","src":"3798:33:23"},"nodeType":"YulExpressionStatement","src":"3798:33:23"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3728:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3736:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3744:5:23","type":""}],"src":"3698:139:23"},{"body":{"nodeType":"YulBlock","src":"3909:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"3955:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3957:77:23"},"nodeType":"YulFunctionCall","src":"3957:79:23"},"nodeType":"YulExpressionStatement","src":"3957:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3930:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3926:3:23"},"nodeType":"YulFunctionCall","src":"3926:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3922:3:23"},"nodeType":"YulFunctionCall","src":"3922:32:23"},"nodeType":"YulIf","src":"3919:119:23"},{"nodeType":"YulBlock","src":"4048:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4063:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4077:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4067:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4092:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4127:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4138:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4123:3:23"},"nodeType":"YulFunctionCall","src":"4123:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4147:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4102:20:23"},"nodeType":"YulFunctionCall","src":"4102:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4092:6:23"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3879:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3890:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3902:6:23","type":""}],"src":"3843:329:23"},{"body":{"nodeType":"YulBlock","src":"4243:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4260:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4283:5:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4265:17:23"},"nodeType":"YulFunctionCall","src":"4265:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4253:6:23"},"nodeType":"YulFunctionCall","src":"4253:37:23"},"nodeType":"YulExpressionStatement","src":"4253:37:23"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4231:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4238:3:23","type":""}],"src":"4178:118:23"},{"body":{"nodeType":"YulBlock","src":"4400:124:23","statements":[{"nodeType":"YulAssignment","src":"4410:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4422:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4433:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4418:3:23"},"nodeType":"YulFunctionCall","src":"4418:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4410:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4490:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4503:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4514:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4499:3:23"},"nodeType":"YulFunctionCall","src":"4499:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4446:43:23"},"nodeType":"YulFunctionCall","src":"4446:71:23"},"nodeType":"YulExpressionStatement","src":"4446:71:23"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4372:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4384:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4395:4:23","type":""}],"src":"4302:222:23"},{"body":{"nodeType":"YulBlock","src":"4613:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"4659:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4661:77:23"},"nodeType":"YulFunctionCall","src":"4661:79:23"},"nodeType":"YulExpressionStatement","src":"4661:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4634:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4643:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4630:3:23"},"nodeType":"YulFunctionCall","src":"4630:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4655:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4626:3:23"},"nodeType":"YulFunctionCall","src":"4626:32:23"},"nodeType":"YulIf","src":"4623:119:23"},{"nodeType":"YulBlock","src":"4752:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4767:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4781:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4771:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4796:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4831:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4842:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4827:3:23"},"nodeType":"YulFunctionCall","src":"4827:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4851:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4806:20:23"},"nodeType":"YulFunctionCall","src":"4806:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4796:6:23"}]}]},{"nodeType":"YulBlock","src":"4879:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4894:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4908:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4898:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4924:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4959:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4970:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4955:3:23"},"nodeType":"YulFunctionCall","src":"4955:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4979:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4934:20:23"},"nodeType":"YulFunctionCall","src":"4934:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4924:6:23"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4575:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4586:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4598:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4606:6:23","type":""}],"src":"4530:474:23"},{"body":{"nodeType":"YulBlock","src":"5075:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5092:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5115:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5097:17:23"},"nodeType":"YulFunctionCall","src":"5097:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5085:6:23"},"nodeType":"YulFunctionCall","src":"5085:37:23"},"nodeType":"YulExpressionStatement","src":"5085:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5063:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5070:3:23","type":""}],"src":"5010:118:23"},{"body":{"nodeType":"YulBlock","src":"5232:124:23","statements":[{"nodeType":"YulAssignment","src":"5242:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5254:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5265:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5250:3:23"},"nodeType":"YulFunctionCall","src":"5250:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5242:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5322:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5335:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5346:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5331:3:23"},"nodeType":"YulFunctionCall","src":"5331:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5278:43:23"},"nodeType":"YulFunctionCall","src":"5278:71:23"},"nodeType":"YulExpressionStatement","src":"5278:71:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5204:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5216:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5227:4:23","type":""}],"src":"5134:222:23"},{"body":{"nodeType":"YulBlock","src":"5445:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"5491:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5493:77:23"},"nodeType":"YulFunctionCall","src":"5493:79:23"},"nodeType":"YulExpressionStatement","src":"5493:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5466:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5475:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5462:3:23"},"nodeType":"YulFunctionCall","src":"5462:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5487:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5458:3:23"},"nodeType":"YulFunctionCall","src":"5458:32:23"},"nodeType":"YulIf","src":"5455:119:23"},{"nodeType":"YulBlock","src":"5584:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5599:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5613:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5603:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5628:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5663:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5674:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5659:3:23"},"nodeType":"YulFunctionCall","src":"5659:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5683:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5638:20:23"},"nodeType":"YulFunctionCall","src":"5638:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5628:6:23"}]}]},{"nodeType":"YulBlock","src":"5711:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5726:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5740:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5730:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5756:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5791:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5802:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5787:3:23"},"nodeType":"YulFunctionCall","src":"5787:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5811:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5766:20:23"},"nodeType":"YulFunctionCall","src":"5766:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5756:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5407:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5418:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5430:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5438:6:23","type":""}],"src":"5362:474:23"},{"body":{"nodeType":"YulBlock","src":"5886:105:23","statements":[{"nodeType":"YulAssignment","src":"5896:89:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5911:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"5918:66:23","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5907:3:23"},"nodeType":"YulFunctionCall","src":"5907:78:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5896:7:23"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5868:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5878:7:23","type":""}],"src":"5842:149:23"},{"body":{"nodeType":"YulBlock","src":"6060:52:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6077:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6099:5:23"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6082:16:23"},"nodeType":"YulFunctionCall","src":"6082:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6070:6:23"},"nodeType":"YulFunctionCall","src":"6070:36:23"},"nodeType":"YulExpressionStatement","src":"6070:36:23"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6048:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6055:3:23","type":""}],"src":"5997:115:23"},{"body":{"nodeType":"YulBlock","src":"6177:40:23","statements":[{"nodeType":"YulAssignment","src":"6188:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6204:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6198:5:23"},"nodeType":"YulFunctionCall","src":"6198:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6188:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6160:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6170:6:23","type":""}],"src":"6118:99:23"},{"body":{"nodeType":"YulBlock","src":"6319:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6336:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6341:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6329:6:23"},"nodeType":"YulFunctionCall","src":"6329:19:23"},"nodeType":"YulExpressionStatement","src":"6329:19:23"},{"nodeType":"YulAssignment","src":"6357:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6376:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"6381:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:23"},"nodeType":"YulFunctionCall","src":"6372:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6357:11:23"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6291:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"6296:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6307:11:23","type":""}],"src":"6223:169:23"},{"body":{"nodeType":"YulBlock","src":"6460:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6470:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6479:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6474:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6539:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6564:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"6569:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:23"},"nodeType":"YulFunctionCall","src":"6560:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6583:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"6588:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6579:3:23"},"nodeType":"YulFunctionCall","src":"6579:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6573:5:23"},"nodeType":"YulFunctionCall","src":"6573:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6553:6:23"},"nodeType":"YulFunctionCall","src":"6553:39:23"},"nodeType":"YulExpressionStatement","src":"6553:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6500:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"6503:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6497:2:23"},"nodeType":"YulFunctionCall","src":"6497:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6511:19:23","statements":[{"nodeType":"YulAssignment","src":"6513:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6522:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"6525:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:23"},"nodeType":"YulFunctionCall","src":"6518:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6513:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"6493:3:23","statements":[]},"src":"6489:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6622:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6627:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6618:3:23"},"nodeType":"YulFunctionCall","src":"6618:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"6636:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6611:6:23"},"nodeType":"YulFunctionCall","src":"6611:27:23"},"nodeType":"YulExpressionStatement","src":"6611:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6442:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6447:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"6452:6:23","type":""}],"src":"6398:246:23"},{"body":{"nodeType":"YulBlock","src":"6698:54:23","statements":[{"nodeType":"YulAssignment","src":"6708:38:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6726:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"6733:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6722:3:23"},"nodeType":"YulFunctionCall","src":"6722:14:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6742:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6738:3:23"},"nodeType":"YulFunctionCall","src":"6738:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6718:3:23"},"nodeType":"YulFunctionCall","src":"6718:28:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6708:6:23"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6681:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6691:6:23","type":""}],"src":"6650:102:23"},{"body":{"nodeType":"YulBlock","src":"6850:285:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6860:53:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6907:5:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6874:32:23"},"nodeType":"YulFunctionCall","src":"6874:39:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6864:6:23","type":""}]},{"nodeType":"YulAssignment","src":"6922:78:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6988:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6993:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6929:58:23"},"nodeType":"YulFunctionCall","src":"6929:71:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6922:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7048:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"7055:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7044:3:23"},"nodeType":"YulFunctionCall","src":"7044:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"7062:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"7067:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7009:34:23"},"nodeType":"YulFunctionCall","src":"7009:65:23"},"nodeType":"YulExpressionStatement","src":"7009:65:23"},{"nodeType":"YulAssignment","src":"7083:46:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7094:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7121:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7099:21:23"},"nodeType":"YulFunctionCall","src":"7099:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7090:3:23"},"nodeType":"YulFunctionCall","src":"7090:39:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7083:3:23"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6831:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6838:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6846:3:23","type":""}],"src":"6758:377:23"},{"body":{"nodeType":"YulBlock","src":"7206:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7223:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7246:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7228:17:23"},"nodeType":"YulFunctionCall","src":"7228:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7216:6:23"},"nodeType":"YulFunctionCall","src":"7216:37:23"},"nodeType":"YulExpressionStatement","src":"7216:37:23"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7194:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7201:3:23","type":""}],"src":"7141:118:23"},{"body":{"nodeType":"YulBlock","src":"7339:40:23","statements":[{"nodeType":"YulAssignment","src":"7350:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7366:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7360:5:23"},"nodeType":"YulFunctionCall","src":"7360:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7350:6:23"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7322:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7332:6:23","type":""}],"src":"7265:114:23"},{"body":{"nodeType":"YulBlock","src":"7496:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7513:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"7518:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7506:6:23"},"nodeType":"YulFunctionCall","src":"7506:19:23"},"nodeType":"YulExpressionStatement","src":"7506:19:23"},{"nodeType":"YulAssignment","src":"7534:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7553:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7558:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7549:3:23"},"nodeType":"YulFunctionCall","src":"7549:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7534:11:23"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7468:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"7473:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7484:11:23","type":""}],"src":"7385:184:23"},{"body":{"nodeType":"YulBlock","src":"7647:60:23","statements":[{"nodeType":"YulAssignment","src":"7657:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7665:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7657:4:23"}]},{"nodeType":"YulAssignment","src":"7678:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7690:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7695:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7686:3:23"},"nodeType":"YulFunctionCall","src":"7686:14:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7678:4:23"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7634:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7642:4:23","type":""}],"src":"7575:132:23"},{"body":{"nodeType":"YulBlock","src":"7768:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7785:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7808:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7790:17:23"},"nodeType":"YulFunctionCall","src":"7790:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7778:6:23"},"nodeType":"YulFunctionCall","src":"7778:37:23"},"nodeType":"YulExpressionStatement","src":"7778:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7756:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7763:3:23","type":""}],"src":"7713:108:23"},{"body":{"nodeType":"YulBlock","src":"7907:99:23","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7951:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"7959:3:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7917:33:23"},"nodeType":"YulFunctionCall","src":"7917:46:23"},"nodeType":"YulExpressionStatement","src":"7917:46:23"},{"nodeType":"YulAssignment","src":"7972:28:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7990:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7995:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7986:3:23"},"nodeType":"YulFunctionCall","src":"7986:14:23"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7972:10:23"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7880:6:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7888:3:23","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7896:10:23","type":""}],"src":"7827:179:23"},{"body":{"nodeType":"YulBlock","src":"8087:38:23","statements":[{"nodeType":"YulAssignment","src":"8097:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8109:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"8114:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8105:3:23"},"nodeType":"YulFunctionCall","src":"8105:14:23"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"8097:4:23"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8074:3:23","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"8082:4:23","type":""}],"src":"8012:113:23"},{"body":{"nodeType":"YulBlock","src":"8285:608:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8295:68:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8357:5:23"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8309:47:23"},"nodeType":"YulFunctionCall","src":"8309:54:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8299:6:23","type":""}]},{"nodeType":"YulAssignment","src":"8372:93:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8453:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"8458:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8379:73:23"},"nodeType":"YulFunctionCall","src":"8379:86:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8372:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"8474:71:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8539:5:23"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8489:49:23"},"nodeType":"YulFunctionCall","src":"8489:56:23"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8478:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8554:21:23","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"8568:7:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8558:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8644:224:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8658:34:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8685:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8679:5:23"},"nodeType":"YulFunctionCall","src":"8679:13:23"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8662:13:23","type":""}]},{"nodeType":"YulAssignment","src":"8705:70:23","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8756:13:23"},{"name":"pos","nodeType":"YulIdentifier","src":"8771:3:23"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8712:43:23"},"nodeType":"YulFunctionCall","src":"8712:63:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8705:3:23"}]},{"nodeType":"YulAssignment","src":"8788:70:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8851:6:23"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8798:52:23"},"nodeType":"YulFunctionCall","src":"8798:60:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8788:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8606:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"8609:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8603:2:23"},"nodeType":"YulFunctionCall","src":"8603:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8617:18:23","statements":[{"nodeType":"YulAssignment","src":"8619:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8628:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"8631:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8624:3:23"},"nodeType":"YulFunctionCall","src":"8624:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8619:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"8588:14:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8590:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"8599:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8594:1:23","type":""}]}]},"src":"8584:284:23"},{"nodeType":"YulAssignment","src":"8877:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"8884:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8877:3:23"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8264:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8271:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8280:3:23","type":""}],"src":"8161:732:23"},{"body":{"nodeType":"YulBlock","src":"9253:861:23","statements":[{"nodeType":"YulAssignment","src":"9263:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9275:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9286:3:23","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:23"},"nodeType":"YulFunctionCall","src":"9271:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9263:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9342:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9355:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9366:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9351:3:23"},"nodeType":"YulFunctionCall","src":"9351:17:23"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"9300:41:23"},"nodeType":"YulFunctionCall","src":"9300:69:23"},"nodeType":"YulExpressionStatement","src":"9300:69:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9390:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9401:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9386:3:23"},"nodeType":"YulFunctionCall","src":"9386:18:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9410:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9416:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9406:3:23"},"nodeType":"YulFunctionCall","src":"9406:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9379:6:23"},"nodeType":"YulFunctionCall","src":"9379:48:23"},"nodeType":"YulExpressionStatement","src":"9379:48:23"},{"nodeType":"YulAssignment","src":"9436:86:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9508:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"9517:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9444:63:23"},"nodeType":"YulFunctionCall","src":"9444:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9436:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9543:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9554:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9539:3:23"},"nodeType":"YulFunctionCall","src":"9539:18:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9563:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9569:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9559:3:23"},"nodeType":"YulFunctionCall","src":"9559:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9532:6:23"},"nodeType":"YulFunctionCall","src":"9532:48:23"},"nodeType":"YulExpressionStatement","src":"9532:48:23"},{"nodeType":"YulAssignment","src":"9589:86:23","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9661:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"9670:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9597:63:23"},"nodeType":"YulFunctionCall","src":"9597:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9589:4:23"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9729:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9742:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9753:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9738:3:23"},"nodeType":"YulFunctionCall","src":"9738:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9685:43:23"},"nodeType":"YulFunctionCall","src":"9685:72:23"},"nodeType":"YulExpressionStatement","src":"9685:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9811:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9824:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9835:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9820:3:23"},"nodeType":"YulFunctionCall","src":"9820:19:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9767:43:23"},"nodeType":"YulFunctionCall","src":"9767:73:23"},"nodeType":"YulExpressionStatement","src":"9767:73:23"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9894:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9907:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9918:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9903:3:23"},"nodeType":"YulFunctionCall","src":"9903:19:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9850:43:23"},"nodeType":"YulFunctionCall","src":"9850:73:23"},"nodeType":"YulExpressionStatement","src":"9850:73:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9944:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9955:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9940:3:23"},"nodeType":"YulFunctionCall","src":"9940:19:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9965:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9971:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9961:3:23"},"nodeType":"YulFunctionCall","src":"9961:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9933:6:23"},"nodeType":"YulFunctionCall","src":"9933:49:23"},"nodeType":"YulExpressionStatement","src":"9933:49:23"},{"nodeType":"YulAssignment","src":"9991:116:23","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"10093:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"10102:4:23"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9999:93:23"},"nodeType":"YulFunctionCall","src":"9999:108:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9991:4:23"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9177:9:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9189:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9197:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9205:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9213:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9221:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9229:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9237:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9248:4:23","type":""}],"src":"8899:1215:23"},{"body":{"nodeType":"YulBlock","src":"10220:519:23","statements":[{"body":{"nodeType":"YulBlock","src":"10266:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10268:77:23"},"nodeType":"YulFunctionCall","src":"10268:79:23"},"nodeType":"YulExpressionStatement","src":"10268:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10241:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10250:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10237:3:23"},"nodeType":"YulFunctionCall","src":"10237:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10262:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10233:3:23"},"nodeType":"YulFunctionCall","src":"10233:32:23"},"nodeType":"YulIf","src":"10230:119:23"},{"nodeType":"YulBlock","src":"10359:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"10374:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"10388:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10378:6:23","type":""}]},{"nodeType":"YulAssignment","src":"10403:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10438:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"10449:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10434:3:23"},"nodeType":"YulFunctionCall","src":"10434:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10458:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10413:20:23"},"nodeType":"YulFunctionCall","src":"10413:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10403:6:23"}]}]},{"nodeType":"YulBlock","src":"10486:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"10501:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"10515:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10505:6:23","type":""}]},{"nodeType":"YulAssignment","src":"10531:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10566:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"10577:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10562:3:23"},"nodeType":"YulFunctionCall","src":"10562:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10586:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10541:20:23"},"nodeType":"YulFunctionCall","src":"10541:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10531:6:23"}]}]},{"nodeType":"YulBlock","src":"10614:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"10629:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"10643:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10633:6:23","type":""}]},{"nodeType":"YulAssignment","src":"10659:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10694:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"10705:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10690:3:23"},"nodeType":"YulFunctionCall","src":"10690:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10714:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10669:20:23"},"nodeType":"YulFunctionCall","src":"10669:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10659:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10174:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10185:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10197:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10205:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10213:6:23","type":""}],"src":"10120:619:23"},{"body":{"nodeType":"YulBlock","src":"10834:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10851:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10854:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10844:6:23"},"nodeType":"YulFunctionCall","src":"10844:12:23"},"nodeType":"YulExpressionStatement","src":"10844:12:23"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"10745:117:23"},{"body":{"nodeType":"YulBlock","src":"11001:153:23","statements":[{"body":{"nodeType":"YulBlock","src":"11041:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"11043:77:23"},"nodeType":"YulFunctionCall","src":"11043:79:23"},"nodeType":"YulExpressionStatement","src":"11043:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"11022:3:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11027:6:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11018:3:23"},"nodeType":"YulFunctionCall","src":"11018:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"11036:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11014:3:23"},"nodeType":"YulFunctionCall","src":"11014:26:23"},"nodeType":"YulIf","src":"11011:113:23"},{"nodeType":"YulAssignment","src":"11133:15:23","value":{"name":"offset","nodeType":"YulIdentifier","src":"11142:6:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11133:5:23"}]}]},"name":"abi_decode_t_struct$_PermitSignature_$4835_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10979:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"10987:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10995:5:23","type":""}],"src":"10914:240:23"},{"body":{"nodeType":"YulBlock","src":"11329:812:23","statements":[{"body":{"nodeType":"YulBlock","src":"11376:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11378:77:23"},"nodeType":"YulFunctionCall","src":"11378:79:23"},"nodeType":"YulExpressionStatement","src":"11378:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11350:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11359:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11346:3:23"},"nodeType":"YulFunctionCall","src":"11346:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"11371:3:23","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11342:3:23"},"nodeType":"YulFunctionCall","src":"11342:33:23"},"nodeType":"YulIf","src":"11339:120:23"},{"nodeType":"YulBlock","src":"11469:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11484:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11498:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11488:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11513:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11548:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11559:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11544:3:23"},"nodeType":"YulFunctionCall","src":"11544:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11568:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11523:20:23"},"nodeType":"YulFunctionCall","src":"11523:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11513:6:23"}]}]},{"nodeType":"YulBlock","src":"11596:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11611:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11625:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11615:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11641:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11676:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11687:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11672:3:23"},"nodeType":"YulFunctionCall","src":"11672:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11696:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11651:20:23"},"nodeType":"YulFunctionCall","src":"11651:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11641:6:23"}]}]},{"nodeType":"YulBlock","src":"11724:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11739:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11753:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11743:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11769:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11804:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11815:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11800:3:23"},"nodeType":"YulFunctionCall","src":"11800:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11824:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11779:20:23"},"nodeType":"YulFunctionCall","src":"11779:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11769:6:23"}]}]},{"nodeType":"YulBlock","src":"11852:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11867:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11881:2:23","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11871:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11897:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11932:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11943:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11928:3:23"},"nodeType":"YulFunctionCall","src":"11928:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11952:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11907:20:23"},"nodeType":"YulFunctionCall","src":"11907:53:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11897:6:23"}]}]},{"nodeType":"YulBlock","src":"11980:154:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11995:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12009:3:23","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11999:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12026:98:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12096:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12107:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12092:3:23"},"nodeType":"YulFunctionCall","src":"12092:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12116:7:23"}],"functionName":{"name":"abi_decode_t_struct$_PermitSignature_$4835_calldata_ptr","nodeType":"YulIdentifier","src":"12036:55:23"},"nodeType":"YulFunctionCall","src":"12036:88:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12026:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes32t_struct$_PermitSignature_$4835_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11267:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11278:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11290:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11298:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11306:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11314:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11322:6:23","type":""}],"src":"11160:981:23"},{"body":{"nodeType":"YulBlock","src":"12247:519:23","statements":[{"body":{"nodeType":"YulBlock","src":"12293:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12295:77:23"},"nodeType":"YulFunctionCall","src":"12295:79:23"},"nodeType":"YulExpressionStatement","src":"12295:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12268:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"12277:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12264:3:23"},"nodeType":"YulFunctionCall","src":"12264:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"12289:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12260:3:23"},"nodeType":"YulFunctionCall","src":"12260:32:23"},"nodeType":"YulIf","src":"12257:119:23"},{"nodeType":"YulBlock","src":"12386:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12401:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12415:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12405:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12430:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12465:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12476:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12461:3:23"},"nodeType":"YulFunctionCall","src":"12461:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12485:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12440:20:23"},"nodeType":"YulFunctionCall","src":"12440:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12430:6:23"}]}]},{"nodeType":"YulBlock","src":"12513:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12528:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12542:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12532:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12558:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12593:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12604:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12589:3:23"},"nodeType":"YulFunctionCall","src":"12589:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12613:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12568:20:23"},"nodeType":"YulFunctionCall","src":"12568:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12558:6:23"}]}]},{"nodeType":"YulBlock","src":"12641:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12656:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12670:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12660:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12686:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12721:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12732:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12717:3:23"},"nodeType":"YulFunctionCall","src":"12717:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12741:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12696:20:23"},"nodeType":"YulFunctionCall","src":"12696:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12686:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12201:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12212:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12224:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12232:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12240:6:23","type":""}],"src":"12147:619:23"},{"body":{"nodeType":"YulBlock","src":"12838:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"12884:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12886:77:23"},"nodeType":"YulFunctionCall","src":"12886:79:23"},"nodeType":"YulExpressionStatement","src":"12886:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12859:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12855:3:23"},"nodeType":"YulFunctionCall","src":"12855:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"12880:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12851:3:23"},"nodeType":"YulFunctionCall","src":"12851:32:23"},"nodeType":"YulIf","src":"12848:119:23"},{"nodeType":"YulBlock","src":"12977:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12992:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13006:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12996:6:23","type":""}]},{"nodeType":"YulAssignment","src":"13021:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13056:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13067:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:23"},"nodeType":"YulFunctionCall","src":"13052:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13076:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13031:20:23"},"nodeType":"YulFunctionCall","src":"13031:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13021:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12808:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12819:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12831:6:23","type":""}],"src":"12772:329:23"},{"body":{"nodeType":"YulBlock","src":"13196:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13213:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13216:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13206:6:23"},"nodeType":"YulFunctionCall","src":"13206:12:23"},"nodeType":"YulExpressionStatement","src":"13206:12:23"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"13107:117:23"},{"body":{"nodeType":"YulBlock","src":"13319:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13336:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13339:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13329:6:23"},"nodeType":"YulFunctionCall","src":"13329:12:23"},"nodeType":"YulExpressionStatement","src":"13329:12:23"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"13230:117:23"},{"body":{"nodeType":"YulBlock","src":"13381:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13398:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13401:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13391:6:23"},"nodeType":"YulFunctionCall","src":"13391:88:23"},"nodeType":"YulExpressionStatement","src":"13391:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13495:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13498:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13488:6:23"},"nodeType":"YulFunctionCall","src":"13488:15:23"},"nodeType":"YulExpressionStatement","src":"13488:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13519:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13522:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13512:6:23"},"nodeType":"YulFunctionCall","src":"13512:15:23"},"nodeType":"YulExpressionStatement","src":"13512:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13353:180:23"},{"body":{"nodeType":"YulBlock","src":"13582:238:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13592:58:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13614:6:23"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13644:4:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13622:21:23"},"nodeType":"YulFunctionCall","src":"13622:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13610:3:23"},"nodeType":"YulFunctionCall","src":"13610:40:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"13596:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"13761:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13763:16:23"},"nodeType":"YulFunctionCall","src":"13763:18:23"},"nodeType":"YulExpressionStatement","src":"13763:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13704:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"13716:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13701:2:23"},"nodeType":"YulFunctionCall","src":"13701:34:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13740:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"13752:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13737:2:23"},"nodeType":"YulFunctionCall","src":"13737:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13698:2:23"},"nodeType":"YulFunctionCall","src":"13698:62:23"},"nodeType":"YulIf","src":"13695:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13799:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13803:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13792:6:23"},"nodeType":"YulFunctionCall","src":"13792:22:23"},"nodeType":"YulExpressionStatement","src":"13792:22:23"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13568:6:23","type":""},{"name":"size","nodeType":"YulTypedName","src":"13576:4:23","type":""}],"src":"13539:281:23"},{"body":{"nodeType":"YulBlock","src":"13867:88:23","statements":[{"nodeType":"YulAssignment","src":"13877:30:23","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"13887:18:23"},"nodeType":"YulFunctionCall","src":"13887:20:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13877:6:23"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13936:6:23"},{"name":"size","nodeType":"YulIdentifier","src":"13944:4:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"13916:19:23"},"nodeType":"YulFunctionCall","src":"13916:33:23"},"nodeType":"YulExpressionStatement","src":"13916:33:23"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"13851:4:23","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"13860:6:23","type":""}],"src":"13826:129:23"},{"body":{"nodeType":"YulBlock","src":"14028:241:23","statements":[{"body":{"nodeType":"YulBlock","src":"14133:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14135:16:23"},"nodeType":"YulFunctionCall","src":"14135:18:23"},"nodeType":"YulExpressionStatement","src":"14135:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14105:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14113:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14102:2:23"},"nodeType":"YulFunctionCall","src":"14102:30:23"},"nodeType":"YulIf","src":"14099:56:23"},{"nodeType":"YulAssignment","src":"14165:37:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14195:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14173:21:23"},"nodeType":"YulFunctionCall","src":"14173:29:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14165:4:23"}]},{"nodeType":"YulAssignment","src":"14239:23:23","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14251:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"14257:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14247:3:23"},"nodeType":"YulFunctionCall","src":"14247:15:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14239:4:23"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14012:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14023:4:23","type":""}],"src":"13961:308:23"},{"body":{"nodeType":"YulBlock","src":"14339:82:23","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14362:3:23"},{"name":"src","nodeType":"YulIdentifier","src":"14367:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14372:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14349:12:23"},"nodeType":"YulFunctionCall","src":"14349:30:23"},"nodeType":"YulExpressionStatement","src":"14349:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14399:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14404:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14395:3:23"},"nodeType":"YulFunctionCall","src":"14395:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"14413:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14388:6:23"},"nodeType":"YulFunctionCall","src":"14388:27:23"},"nodeType":"YulExpressionStatement","src":"14388:27:23"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14321:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14326:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"14331:6:23","type":""}],"src":"14275:146:23"},{"body":{"nodeType":"YulBlock","src":"14511:341:23","statements":[{"nodeType":"YulAssignment","src":"14521:75:23","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14588:6:23"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14546:41:23"},"nodeType":"YulFunctionCall","src":"14546:49:23"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14530:15:23"},"nodeType":"YulFunctionCall","src":"14530:66:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14521:5:23"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14612:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"14619:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14605:6:23"},"nodeType":"YulFunctionCall","src":"14605:21:23"},"nodeType":"YulExpressionStatement","src":"14605:21:23"},{"nodeType":"YulVariableDeclaration","src":"14635:27:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14650:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"14657:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14646:3:23"},"nodeType":"YulFunctionCall","src":"14646:16:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"14639:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14700:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"14702:77:23"},"nodeType":"YulFunctionCall","src":"14702:79:23"},"nodeType":"YulExpressionStatement","src":"14702:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14681:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14686:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14677:3:23"},"nodeType":"YulFunctionCall","src":"14677:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"14695:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14674:2:23"},"nodeType":"YulFunctionCall","src":"14674:25:23"},"nodeType":"YulIf","src":"14671:112:23"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14829:3:23"},{"name":"dst","nodeType":"YulIdentifier","src":"14834:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14839:6:23"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14792:36:23"},"nodeType":"YulFunctionCall","src":"14792:54:23"},"nodeType":"YulExpressionStatement","src":"14792:54:23"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14484:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"14489:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"14497:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14505:5:23","type":""}],"src":"14427:425:23"},{"body":{"nodeType":"YulBlock","src":"14934:278:23","statements":[{"body":{"nodeType":"YulBlock","src":"14983:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14985:77:23"},"nodeType":"YulFunctionCall","src":"14985:79:23"},"nodeType":"YulExpressionStatement","src":"14985:79:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14962:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14970:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14958:3:23"},"nodeType":"YulFunctionCall","src":"14958:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"14977:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14954:3:23"},"nodeType":"YulFunctionCall","src":"14954:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14947:6:23"},"nodeType":"YulFunctionCall","src":"14947:35:23"},"nodeType":"YulIf","src":"14944:122:23"},{"nodeType":"YulVariableDeclaration","src":"15075:34:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15102:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15089:12:23"},"nodeType":"YulFunctionCall","src":"15089:20:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15079:6:23","type":""}]},{"nodeType":"YulAssignment","src":"15118:88:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15179:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"15187:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15175:3:23"},"nodeType":"YulFunctionCall","src":"15175:17:23"},{"name":"length","nodeType":"YulIdentifier","src":"15194:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"15202:3:23"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15127:47:23"},"nodeType":"YulFunctionCall","src":"15127:79:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15118:5:23"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14912:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"14920:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14928:5:23","type":""}],"src":"14872:340:23"},{"body":{"nodeType":"YulBlock","src":"15311:561:23","statements":[{"body":{"nodeType":"YulBlock","src":"15357:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15359:77:23"},"nodeType":"YulFunctionCall","src":"15359:79:23"},"nodeType":"YulExpressionStatement","src":"15359:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15332:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"15341:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15328:3:23"},"nodeType":"YulFunctionCall","src":"15328:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"15353:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15324:3:23"},"nodeType":"YulFunctionCall","src":"15324:32:23"},"nodeType":"YulIf","src":"15321:119:23"},{"nodeType":"YulBlock","src":"15450:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15465:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15479:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15469:6:23","type":""}]},{"nodeType":"YulAssignment","src":"15494:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15529:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"15540:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15525:3:23"},"nodeType":"YulFunctionCall","src":"15525:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15549:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15504:20:23"},"nodeType":"YulFunctionCall","src":"15504:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15494:6:23"}]}]},{"nodeType":"YulBlock","src":"15577:288:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15592:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15623:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15634:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15619:3:23"},"nodeType":"YulFunctionCall","src":"15619:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15606:12:23"},"nodeType":"YulFunctionCall","src":"15606:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15596:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"15685:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15687:77:23"},"nodeType":"YulFunctionCall","src":"15687:79:23"},"nodeType":"YulExpressionStatement","src":"15687:79:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15657:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"15665:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15654:2:23"},"nodeType":"YulFunctionCall","src":"15654:30:23"},"nodeType":"YulIf","src":"15651:117:23"},{"nodeType":"YulAssignment","src":"15782:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15827:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"15838:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15823:3:23"},"nodeType":"YulFunctionCall","src":"15823:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15847:7:23"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15792:30:23"},"nodeType":"YulFunctionCall","src":"15792:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15782:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15273:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15284:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15296:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15304:6:23","type":""}],"src":"15218:654:23"},{"body":{"nodeType":"YulBlock","src":"15961:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"16007:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16009:77:23"},"nodeType":"YulFunctionCall","src":"16009:79:23"},"nodeType":"YulExpressionStatement","src":"16009:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15982:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"15991:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15978:3:23"},"nodeType":"YulFunctionCall","src":"15978:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"16003:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15974:3:23"},"nodeType":"YulFunctionCall","src":"15974:32:23"},"nodeType":"YulIf","src":"15971:119:23"},{"nodeType":"YulBlock","src":"16100:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"16115:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"16129:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16119:6:23","type":""}]},{"nodeType":"YulAssignment","src":"16144:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16179:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"16190:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16175:3:23"},"nodeType":"YulFunctionCall","src":"16175:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16199:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16154:20:23"},"nodeType":"YulFunctionCall","src":"16154:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16144:6:23"}]}]},{"nodeType":"YulBlock","src":"16227:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"16242:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"16256:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16246:6:23","type":""}]},{"nodeType":"YulAssignment","src":"16272:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16307:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"16318:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16303:3:23"},"nodeType":"YulFunctionCall","src":"16303:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16327:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16282:20:23"},"nodeType":"YulFunctionCall","src":"16282:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16272:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15923:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15934:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15946:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15954:6:23","type":""}],"src":"15878:474:23"},{"body":{"nodeType":"YulBlock","src":"16464:74:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16486:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16494:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16482:3:23"},"nodeType":"YulFunctionCall","src":"16482:14:23"},{"hexValue":"4f776e61626c655061757361626c653a206163636573732064656e696564","kind":"string","nodeType":"YulLiteral","src":"16498:32:23","type":"","value":"OwnablePausable: access denied"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16475:6:23"},"nodeType":"YulFunctionCall","src":"16475:56:23"},"nodeType":"YulExpressionStatement","src":"16475:56:23"}]},"name":"store_literal_in_memory_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16456:6:23","type":""}],"src":"16358:180:23"},{"body":{"nodeType":"YulBlock","src":"16690:220:23","statements":[{"nodeType":"YulAssignment","src":"16700:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16766:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"16771:2:23","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16707:58:23"},"nodeType":"YulFunctionCall","src":"16707:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16700:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16872:3:23"}],"functionName":{"name":"store_literal_in_memory_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d","nodeType":"YulIdentifier","src":"16783:88:23"},"nodeType":"YulFunctionCall","src":"16783:93:23"},"nodeType":"YulExpressionStatement","src":"16783:93:23"},{"nodeType":"YulAssignment","src":"16885:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16896:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"16901:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16892:3:23"},"nodeType":"YulFunctionCall","src":"16892:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16885:3:23"}]}]},"name":"abi_encode_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16678:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16686:3:23","type":""}],"src":"16544:366:23"},{"body":{"nodeType":"YulBlock","src":"17087:248:23","statements":[{"nodeType":"YulAssignment","src":"17097:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17109:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17120:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17105:3:23"},"nodeType":"YulFunctionCall","src":"17105:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17097:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17144:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17155:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17140:3:23"},"nodeType":"YulFunctionCall","src":"17140:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17163:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"17169:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17159:3:23"},"nodeType":"YulFunctionCall","src":"17159:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17133:6:23"},"nodeType":"YulFunctionCall","src":"17133:47:23"},"nodeType":"YulExpressionStatement","src":"17133:47:23"},{"nodeType":"YulAssignment","src":"17189:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17323:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17197:124:23"},"nodeType":"YulFunctionCall","src":"17197:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17189:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17067:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17082:4:23","type":""}],"src":"16916:419:23"},{"body":{"nodeType":"YulBlock","src":"17369:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17386:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17389:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17379:6:23"},"nodeType":"YulFunctionCall","src":"17379:88:23"},"nodeType":"YulExpressionStatement","src":"17379:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17483:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17486:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17476:6:23"},"nodeType":"YulFunctionCall","src":"17476:15:23"},"nodeType":"YulExpressionStatement","src":"17476:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17507:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17510:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17500:6:23"},"nodeType":"YulFunctionCall","src":"17500:15:23"},"nodeType":"YulExpressionStatement","src":"17500:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17341:180:23"},{"body":{"nodeType":"YulBlock","src":"17571:147:23","statements":[{"nodeType":"YulAssignment","src":"17581:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17604:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17586:17:23"},"nodeType":"YulFunctionCall","src":"17586:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17581:1:23"}]},{"nodeType":"YulAssignment","src":"17615:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17638:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17620:17:23"},"nodeType":"YulFunctionCall","src":"17620:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17615:1:23"}]},{"nodeType":"YulAssignment","src":"17649:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17660:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"17663:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17656:3:23"},"nodeType":"YulFunctionCall","src":"17656:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17649:3:23"}]},{"body":{"nodeType":"YulBlock","src":"17689:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17691:16:23"},"nodeType":"YulFunctionCall","src":"17691:18:23"},"nodeType":"YulExpressionStatement","src":"17691:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17681:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"17684:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17678:2:23"},"nodeType":"YulFunctionCall","src":"17678:10:23"},"nodeType":"YulIf","src":"17675:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17558:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"17561:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17567:3:23","type":""}],"src":"17527:191:23"},{"body":{"nodeType":"YulBlock","src":"17830:65:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17852:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17860:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17848:3:23"},"nodeType":"YulFunctionCall","src":"17848:14:23"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"17864:23:23","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17841:6:23"},"nodeType":"YulFunctionCall","src":"17841:47:23"},"nodeType":"YulExpressionStatement","src":"17841:47:23"}]},"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17822:6:23","type":""}],"src":"17724:171:23"},{"body":{"nodeType":"YulBlock","src":"18047:220:23","statements":[{"nodeType":"YulAssignment","src":"18057:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18123:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18128:2:23","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18064:58:23"},"nodeType":"YulFunctionCall","src":"18064:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18057:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18229:3:23"}],"functionName":{"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulIdentifier","src":"18140:88:23"},"nodeType":"YulFunctionCall","src":"18140:93:23"},"nodeType":"YulExpressionStatement","src":"18140:93:23"},{"nodeType":"YulAssignment","src":"18242:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18253:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18258:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18249:3:23"},"nodeType":"YulFunctionCall","src":"18249:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18242:3:23"}]}]},"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18035:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18043:3:23","type":""}],"src":"17901:366:23"},{"body":{"nodeType":"YulBlock","src":"18444:248:23","statements":[{"nodeType":"YulAssignment","src":"18454:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18466:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18477:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18462:3:23"},"nodeType":"YulFunctionCall","src":"18462:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18454:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18501:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18512:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18497:3:23"},"nodeType":"YulFunctionCall","src":"18497:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18520:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"18526:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18516:3:23"},"nodeType":"YulFunctionCall","src":"18516:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18490:6:23"},"nodeType":"YulFunctionCall","src":"18490:47:23"},"nodeType":"YulExpressionStatement","src":"18490:47:23"},{"nodeType":"YulAssignment","src":"18546:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18680:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18554:124:23"},"nodeType":"YulFunctionCall","src":"18554:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18546:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18424:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18439:4:23","type":""}],"src":"18273:419:23"},{"body":{"nodeType":"YulBlock","src":"18936:537:23","statements":[{"nodeType":"YulAssignment","src":"18946:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18958:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18969:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18954:3:23"},"nodeType":"YulFunctionCall","src":"18954:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18946:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19027:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19040:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19051:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19036:3:23"},"nodeType":"YulFunctionCall","src":"19036:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18983:43:23"},"nodeType":"YulFunctionCall","src":"18983:71:23"},"nodeType":"YulExpressionStatement","src":"18983:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19108:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19121:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19132:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19117:3:23"},"nodeType":"YulFunctionCall","src":"19117:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19064:43:23"},"nodeType":"YulFunctionCall","src":"19064:72:23"},"nodeType":"YulExpressionStatement","src":"19064:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19190:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19203:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19214:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19199:3:23"},"nodeType":"YulFunctionCall","src":"19199:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19146:43:23"},"nodeType":"YulFunctionCall","src":"19146:72:23"},"nodeType":"YulExpressionStatement","src":"19146:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19272:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19285:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19296:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19281:3:23"},"nodeType":"YulFunctionCall","src":"19281:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19228:43:23"},"nodeType":"YulFunctionCall","src":"19228:72:23"},"nodeType":"YulExpressionStatement","src":"19228:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19354:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19367:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19378:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19363:3:23"},"nodeType":"YulFunctionCall","src":"19363:19:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19310:43:23"},"nodeType":"YulFunctionCall","src":"19310:73:23"},"nodeType":"YulExpressionStatement","src":"19310:73:23"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19437:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19450:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19461:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19446:3:23"},"nodeType":"YulFunctionCall","src":"19446:19:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19393:43:23"},"nodeType":"YulFunctionCall","src":"19393:73:23"},"nodeType":"YulExpressionStatement","src":"19393:73:23"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18868:9:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18880:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18888:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18896:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18904:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18912:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18920:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18931:4:23","type":""}],"src":"18698:775:23"},{"body":{"nodeType":"YulBlock","src":"19522:43:23","statements":[{"nodeType":"YulAssignment","src":"19532:27:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19547:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"19554:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19543:3:23"},"nodeType":"YulFunctionCall","src":"19543:16:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19532:7:23"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19504:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19514:7:23","type":""}],"src":"19479:86:23"},{"body":{"nodeType":"YulBlock","src":"19612:77:23","statements":[{"body":{"nodeType":"YulBlock","src":"19667:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19676:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19679:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19669:6:23"},"nodeType":"YulFunctionCall","src":"19669:12:23"},"nodeType":"YulExpressionStatement","src":"19669:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19635:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19658:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"19642:15:23"},"nodeType":"YulFunctionCall","src":"19642:22:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19632:2:23"},"nodeType":"YulFunctionCall","src":"19632:33:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19625:6:23"},"nodeType":"YulFunctionCall","src":"19625:41:23"},"nodeType":"YulIf","src":"19622:61:23"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19605:5:23","type":""}],"src":"19571:118:23"},{"body":{"nodeType":"YulBlock","src":"19745:85:23","statements":[{"nodeType":"YulAssignment","src":"19755:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19777:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19764:12:23"},"nodeType":"YulFunctionCall","src":"19764:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19755:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19818:5:23"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"19793:24:23"},"nodeType":"YulFunctionCall","src":"19793:31:23"},"nodeType":"YulExpressionStatement","src":"19793:31:23"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19723:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"19731:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19739:5:23","type":""}],"src":"19695:135:23"},{"body":{"nodeType":"YulBlock","src":"19900:261:23","statements":[{"body":{"nodeType":"YulBlock","src":"19946:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19948:77:23"},"nodeType":"YulFunctionCall","src":"19948:79:23"},"nodeType":"YulExpressionStatement","src":"19948:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19921:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"19930:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19917:3:23"},"nodeType":"YulFunctionCall","src":"19917:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"19942:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19913:3:23"},"nodeType":"YulFunctionCall","src":"19913:32:23"},"nodeType":"YulIf","src":"19910:119:23"},{"nodeType":"YulBlock","src":"20039:115:23","statements":[{"nodeType":"YulVariableDeclaration","src":"20054:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20068:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20058:6:23","type":""}]},{"nodeType":"YulAssignment","src":"20083:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20116:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"20127:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20112:3:23"},"nodeType":"YulFunctionCall","src":"20112:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20136:7:23"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"20093:18:23"},"nodeType":"YulFunctionCall","src":"20093:51:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20083:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19870:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19881:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19893:6:23","type":""}],"src":"19836:325:23"},{"body":{"nodeType":"YulBlock","src":"20293:206:23","statements":[{"nodeType":"YulAssignment","src":"20303:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20315:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20326:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20311:3:23"},"nodeType":"YulFunctionCall","src":"20311:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20303:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20383:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20396:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20407:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20392:3:23"},"nodeType":"YulFunctionCall","src":"20392:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20339:43:23"},"nodeType":"YulFunctionCall","src":"20339:71:23"},"nodeType":"YulExpressionStatement","src":"20339:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20464:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20477:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20488:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20473:3:23"},"nodeType":"YulFunctionCall","src":"20473:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20420:43:23"},"nodeType":"YulFunctionCall","src":"20420:72:23"},"nodeType":"YulExpressionStatement","src":"20420:72:23"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20257:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20269:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20277:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20288:4:23","type":""}],"src":"20167:332:23"},{"body":{"nodeType":"YulBlock","src":"20550:149:23","statements":[{"nodeType":"YulAssignment","src":"20560:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20583:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20565:17:23"},"nodeType":"YulFunctionCall","src":"20565:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20560:1:23"}]},{"nodeType":"YulAssignment","src":"20594:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20617:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20599:17:23"},"nodeType":"YulFunctionCall","src":"20599:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20594:1:23"}]},{"nodeType":"YulAssignment","src":"20628:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20640:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"20643:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20636:3:23"},"nodeType":"YulFunctionCall","src":"20636:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20628:4:23"}]},{"body":{"nodeType":"YulBlock","src":"20670:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20672:16:23"},"nodeType":"YulFunctionCall","src":"20672:18:23"},"nodeType":"YulExpressionStatement","src":"20672:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"20661:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"20667:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20658:2:23"},"nodeType":"YulFunctionCall","src":"20658:11:23"},"nodeType":"YulIf","src":"20655:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20536:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"20539:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20545:4:23","type":""}],"src":"20505:194:23"},{"body":{"nodeType":"YulBlock","src":"20818:34:23","statements":[{"nodeType":"YulAssignment","src":"20828:18:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"20843:3:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20828:11:23"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20790:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"20795:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20806:11:23","type":""}],"src":"20705:147:23"},{"body":{"nodeType":"YulBlock","src":"20964:8:23","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20956:6:23","type":""}],"src":"20858:114:23"},{"body":{"nodeType":"YulBlock","src":"21141:235:23","statements":[{"nodeType":"YulAssignment","src":"21151:90:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21234:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"21239:1:23","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21158:75:23"},"nodeType":"YulFunctionCall","src":"21158:83:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21151:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21339:3:23"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"21250:88:23"},"nodeType":"YulFunctionCall","src":"21250:93:23"},"nodeType":"YulExpressionStatement","src":"21250:93:23"},{"nodeType":"YulAssignment","src":"21352:18:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21363:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"21368:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21359:3:23"},"nodeType":"YulFunctionCall","src":"21359:11:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21352:3:23"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21129:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21137:3:23","type":""}],"src":"20978:398:23"},{"body":{"nodeType":"YulBlock","src":"21570:191:23","statements":[{"nodeType":"YulAssignment","src":"21581:154:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21731:3:23"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21588:141:23"},"nodeType":"YulFunctionCall","src":"21588:147:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21581:3:23"}]},{"nodeType":"YulAssignment","src":"21745:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"21752:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21745:3:23"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21557:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21566:3:23","type":""}],"src":"21382:379:23"},{"body":{"nodeType":"YulBlock","src":"21873:71:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21895:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"21903:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21891:3:23"},"nodeType":"YulFunctionCall","src":"21891:14:23"},{"hexValue":"5661756c743a204661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"21907:29:23","type":"","value":"Vault: Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21884:6:23"},"nodeType":"YulFunctionCall","src":"21884:53:23"},"nodeType":"YulExpressionStatement","src":"21884:53:23"}]},"name":"store_literal_in_memory_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21865:6:23","type":""}],"src":"21767:177:23"},{"body":{"nodeType":"YulBlock","src":"22096:220:23","statements":[{"nodeType":"YulAssignment","src":"22106:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22172:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22177:2:23","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22113:58:23"},"nodeType":"YulFunctionCall","src":"22113:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22106:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22278:3:23"}],"functionName":{"name":"store_literal_in_memory_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303","nodeType":"YulIdentifier","src":"22189:88:23"},"nodeType":"YulFunctionCall","src":"22189:93:23"},"nodeType":"YulExpressionStatement","src":"22189:93:23"},{"nodeType":"YulAssignment","src":"22291:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22302:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22307:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22298:3:23"},"nodeType":"YulFunctionCall","src":"22298:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22291:3:23"}]}]},"name":"abi_encode_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22084:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22092:3:23","type":""}],"src":"21950:366:23"},{"body":{"nodeType":"YulBlock","src":"22493:248:23","statements":[{"nodeType":"YulAssignment","src":"22503:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22515:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22526:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22511:3:23"},"nodeType":"YulFunctionCall","src":"22511:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22503:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22550:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22561:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22546:3:23"},"nodeType":"YulFunctionCall","src":"22546:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22569:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"22575:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22565:3:23"},"nodeType":"YulFunctionCall","src":"22565:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22539:6:23"},"nodeType":"YulFunctionCall","src":"22539:47:23"},"nodeType":"YulExpressionStatement","src":"22539:47:23"},{"nodeType":"YulAssignment","src":"22595:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22729:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22603:124:23"},"nodeType":"YulFunctionCall","src":"22603:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22595:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22473:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22488:4:23","type":""}],"src":"22322:419:23"},{"body":{"nodeType":"YulBlock","src":"22853:70:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22875:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"22883:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22871:3:23"},"nodeType":"YulFunctionCall","src":"22871:14:23"},{"hexValue":"4d6f726967696e4170703a20696e76616c69642076616c756521","kind":"string","nodeType":"YulLiteral","src":"22887:28:23","type":"","value":"MoriginApp: invalid value!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22864:6:23"},"nodeType":"YulFunctionCall","src":"22864:52:23"},"nodeType":"YulExpressionStatement","src":"22864:52:23"}]},"name":"store_literal_in_memory_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22845:6:23","type":""}],"src":"22747:176:23"},{"body":{"nodeType":"YulBlock","src":"23075:220:23","statements":[{"nodeType":"YulAssignment","src":"23085:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23151:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"23156:2:23","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23092:58:23"},"nodeType":"YulFunctionCall","src":"23092:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23085:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23257:3:23"}],"functionName":{"name":"store_literal_in_memory_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01","nodeType":"YulIdentifier","src":"23168:88:23"},"nodeType":"YulFunctionCall","src":"23168:93:23"},"nodeType":"YulExpressionStatement","src":"23168:93:23"},{"nodeType":"YulAssignment","src":"23270:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23281:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"23286:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23277:3:23"},"nodeType":"YulFunctionCall","src":"23277:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23270:3:23"}]}]},"name":"abi_encode_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23063:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23071:3:23","type":""}],"src":"22929:366:23"},{"body":{"nodeType":"YulBlock","src":"23472:248:23","statements":[{"nodeType":"YulAssignment","src":"23482:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23494:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23505:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23490:3:23"},"nodeType":"YulFunctionCall","src":"23490:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23482:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23529:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23540:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23525:3:23"},"nodeType":"YulFunctionCall","src":"23525:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23548:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"23554:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23544:3:23"},"nodeType":"YulFunctionCall","src":"23544:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23518:6:23"},"nodeType":"YulFunctionCall","src":"23518:47:23"},"nodeType":"YulExpressionStatement","src":"23518:47:23"},{"nodeType":"YulAssignment","src":"23574:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23708:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23582:124:23"},"nodeType":"YulFunctionCall","src":"23582:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23574:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23452:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23467:4:23","type":""}],"src":"23301:419:23"},{"body":{"nodeType":"YulBlock","src":"23779:32:23","statements":[{"nodeType":"YulAssignment","src":"23789:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"23800:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23789:7:23"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23761:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23771:7:23","type":""}],"src":"23726:85:23"},{"body":{"nodeType":"YulBlock","src":"23861:57:23","statements":[{"nodeType":"YulAssignment","src":"23871:41:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23886:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"23893:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23882:3:23"},"nodeType":"YulFunctionCall","src":"23882:30:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23871:7:23"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23843:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23853:7:23","type":""}],"src":"23817:101:23"},{"body":{"nodeType":"YulBlock","src":"23956:28:23","statements":[{"nodeType":"YulAssignment","src":"23966:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"23973:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23966:3:23"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23942:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23952:3:23","type":""}],"src":"23924:60:23"},{"body":{"nodeType":"YulBlock","src":"24057:89:23","statements":[{"nodeType":"YulAssignment","src":"24067:73:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24132:5:23"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"24106:25:23"},"nodeType":"YulFunctionCall","src":"24106:32:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"24097:8:23"},"nodeType":"YulFunctionCall","src":"24097:42:23"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"24080:16:23"},"nodeType":"YulFunctionCall","src":"24080:60:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24067:9:23"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24037:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24047:9:23","type":""}],"src":"23990:156:23"},{"body":{"nodeType":"YulBlock","src":"24224:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24241:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24284:5:23"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"24246:37:23"},"nodeType":"YulFunctionCall","src":"24246:44:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24234:6:23"},"nodeType":"YulFunctionCall","src":"24234:57:23"},"nodeType":"YulExpressionStatement","src":"24234:57:23"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24212:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24219:3:23","type":""}],"src":"24152:145:23"},{"body":{"nodeType":"YulBlock","src":"24408:131:23","statements":[{"nodeType":"YulAssignment","src":"24418:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24430:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24441:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24426:3:23"},"nodeType":"YulFunctionCall","src":"24426:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24418:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24505:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24518:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24529:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24514:3:23"},"nodeType":"YulFunctionCall","src":"24514:17:23"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24454:50:23"},"nodeType":"YulFunctionCall","src":"24454:78:23"},"nodeType":"YulExpressionStatement","src":"24454:78:23"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24380:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24392:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24403:4:23","type":""}],"src":"24303:236:23"},{"body":{"nodeType":"YulBlock","src":"24699:288:23","statements":[{"nodeType":"YulAssignment","src":"24709:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24721:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24732:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24717:3:23"},"nodeType":"YulFunctionCall","src":"24717:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24709:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24789:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24802:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24813:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24798:3:23"},"nodeType":"YulFunctionCall","src":"24798:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24745:43:23"},"nodeType":"YulFunctionCall","src":"24745:71:23"},"nodeType":"YulExpressionStatement","src":"24745:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24870:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24883:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24894:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24879:3:23"},"nodeType":"YulFunctionCall","src":"24879:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24826:43:23"},"nodeType":"YulFunctionCall","src":"24826:72:23"},"nodeType":"YulExpressionStatement","src":"24826:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24952:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24965:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24976:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24961:3:23"},"nodeType":"YulFunctionCall","src":"24961:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24908:43:23"},"nodeType":"YulFunctionCall","src":"24908:72:23"},"nodeType":"YulExpressionStatement","src":"24908:72:23"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24655:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24667:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24675:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24683:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24694:4:23","type":""}],"src":"24545:442:23"},{"body":{"nodeType":"YulBlock","src":"25091:124:23","statements":[{"nodeType":"YulAssignment","src":"25101:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25113:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25124:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25109:3:23"},"nodeType":"YulFunctionCall","src":"25109:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25101:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25181:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25194:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25205:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25190:3:23"},"nodeType":"YulFunctionCall","src":"25190:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25137:43:23"},"nodeType":"YulFunctionCall","src":"25137:71:23"},"nodeType":"YulExpressionStatement","src":"25137:71:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25063:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25075:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25086:4:23","type":""}],"src":"24993:222:23"},{"body":{"nodeType":"YulBlock","src":"25375:288:23","statements":[{"nodeType":"YulAssignment","src":"25385:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25397:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25408:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25393:3:23"},"nodeType":"YulFunctionCall","src":"25393:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25385:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25465:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25478:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25489:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25474:3:23"},"nodeType":"YulFunctionCall","src":"25474:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25421:43:23"},"nodeType":"YulFunctionCall","src":"25421:71:23"},"nodeType":"YulExpressionStatement","src":"25421:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25546:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25559:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25570:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25555:3:23"},"nodeType":"YulFunctionCall","src":"25555:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25502:43:23"},"nodeType":"YulFunctionCall","src":"25502:72:23"},"nodeType":"YulExpressionStatement","src":"25502:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25628:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25641:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25652:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25637:3:23"},"nodeType":"YulFunctionCall","src":"25637:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25584:43:23"},"nodeType":"YulFunctionCall","src":"25584:72:23"},"nodeType":"YulExpressionStatement","src":"25584:72:23"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25331:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25343:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25351:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25359:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25370:4:23","type":""}],"src":"25221:442:23"},{"body":{"nodeType":"YulBlock","src":"25727:40:23","statements":[{"nodeType":"YulAssignment","src":"25738:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25754:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25748:5:23"},"nodeType":"YulFunctionCall","src":"25748:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25738:6:23"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25710:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25720:6:23","type":""}],"src":"25669:98:23"},{"body":{"nodeType":"YulBlock","src":"25881:278:23","statements":[{"nodeType":"YulVariableDeclaration","src":"25891:52:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25937:5:23"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"25905:31:23"},"nodeType":"YulFunctionCall","src":"25905:38:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25895:6:23","type":""}]},{"nodeType":"YulAssignment","src":"25952:95:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26035:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"26040:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25959:75:23"},"nodeType":"YulFunctionCall","src":"25959:88:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25952:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26095:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"26102:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26091:3:23"},"nodeType":"YulFunctionCall","src":"26091:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"26109:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"26114:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26056:34:23"},"nodeType":"YulFunctionCall","src":"26056:65:23"},"nodeType":"YulExpressionStatement","src":"26056:65:23"},{"nodeType":"YulAssignment","src":"26130:23:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26141:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"26146:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26137:3:23"},"nodeType":"YulFunctionCall","src":"26137:16:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26130:3:23"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25862:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25869:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25877:3:23","type":""}],"src":"25773:386:23"},{"body":{"nodeType":"YulBlock","src":"26299:137:23","statements":[{"nodeType":"YulAssignment","src":"26310:100:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26397:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"26406:3:23"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26317:79:23"},"nodeType":"YulFunctionCall","src":"26317:93:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26310:3:23"}]},{"nodeType":"YulAssignment","src":"26420:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"26427:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26420:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26278:3:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26284:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26295:3:23","type":""}],"src":"26165:271:23"},{"body":{"nodeType":"YulBlock","src":"26482:76:23","statements":[{"body":{"nodeType":"YulBlock","src":"26536:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26545:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26548:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26538:6:23"},"nodeType":"YulFunctionCall","src":"26538:12:23"},"nodeType":"YulExpressionStatement","src":"26538:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26505:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26527:5:23"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"26512:14:23"},"nodeType":"YulFunctionCall","src":"26512:21:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26502:2:23"},"nodeType":"YulFunctionCall","src":"26502:32:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26495:6:23"},"nodeType":"YulFunctionCall","src":"26495:40:23"},"nodeType":"YulIf","src":"26492:60:23"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26475:5:23","type":""}],"src":"26442:116:23"},{"body":{"nodeType":"YulBlock","src":"26624:77:23","statements":[{"nodeType":"YulAssignment","src":"26634:22:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26649:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26643:5:23"},"nodeType":"YulFunctionCall","src":"26643:13:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26634:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26689:5:23"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"26665:23:23"},"nodeType":"YulFunctionCall","src":"26665:30:23"},"nodeType":"YulExpressionStatement","src":"26665:30:23"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26602:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"26610:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"26618:5:23","type":""}],"src":"26564:137:23"},{"body":{"nodeType":"YulBlock","src":"26781:271:23","statements":[{"body":{"nodeType":"YulBlock","src":"26827:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26829:77:23"},"nodeType":"YulFunctionCall","src":"26829:79:23"},"nodeType":"YulExpressionStatement","src":"26829:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26802:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"26811:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26798:3:23"},"nodeType":"YulFunctionCall","src":"26798:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"26823:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26794:3:23"},"nodeType":"YulFunctionCall","src":"26794:32:23"},"nodeType":"YulIf","src":"26791:119:23"},{"nodeType":"YulBlock","src":"26920:125:23","statements":[{"nodeType":"YulVariableDeclaration","src":"26935:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"26949:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26939:6:23","type":""}]},{"nodeType":"YulAssignment","src":"26964:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27007:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"27018:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27003:3:23"},"nodeType":"YulFunctionCall","src":"27003:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27027:7:23"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"26974:28:23"},"nodeType":"YulFunctionCall","src":"26974:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26964:6:23"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26751:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26762:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26774:6:23","type":""}],"src":"26707:345:23"},{"body":{"nodeType":"YulBlock","src":"27164:130:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27186:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"27194:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27182:3:23"},"nodeType":"YulFunctionCall","src":"27182:14:23"},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472","kind":"string","nodeType":"YulLiteral","src":"27198:34:23","type":"","value":"TransferHelper::transferFrom: tr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27175:6:23"},"nodeType":"YulFunctionCall","src":"27175:58:23"},"nodeType":"YulExpressionStatement","src":"27175:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27254:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"27262:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27250:3:23"},"nodeType":"YulFunctionCall","src":"27250:15:23"},{"hexValue":"616e7366657246726f6d206661696c6564","kind":"string","nodeType":"YulLiteral","src":"27267:19:23","type":"","value":"ansferFrom failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27243:6:23"},"nodeType":"YulFunctionCall","src":"27243:44:23"},"nodeType":"YulExpressionStatement","src":"27243:44:23"}]},"name":"store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27156:6:23","type":""}],"src":"27058:236:23"},{"body":{"nodeType":"YulBlock","src":"27446:220:23","statements":[{"nodeType":"YulAssignment","src":"27456:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27522:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27527:2:23","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27463:58:23"},"nodeType":"YulFunctionCall","src":"27463:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27456:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27628:3:23"}],"functionName":{"name":"store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","nodeType":"YulIdentifier","src":"27539:88:23"},"nodeType":"YulFunctionCall","src":"27539:93:23"},"nodeType":"YulExpressionStatement","src":"27539:93:23"},{"nodeType":"YulAssignment","src":"27641:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27652:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27657:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27648:3:23"},"nodeType":"YulFunctionCall","src":"27648:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27641:3:23"}]}]},"name":"abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27434:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27442:3:23","type":""}],"src":"27300:366:23"},{"body":{"nodeType":"YulBlock","src":"27843:248:23","statements":[{"nodeType":"YulAssignment","src":"27853:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27865:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27876:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27861:3:23"},"nodeType":"YulFunctionCall","src":"27861:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27853:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27900:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27911:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27896:3:23"},"nodeType":"YulFunctionCall","src":"27896:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27919:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"27925:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27915:3:23"},"nodeType":"YulFunctionCall","src":"27915:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27889:6:23"},"nodeType":"YulFunctionCall","src":"27889:47:23"},"nodeType":"YulExpressionStatement","src":"27889:47:23"},{"nodeType":"YulAssignment","src":"27945:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28079:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27953:124:23"},"nodeType":"YulFunctionCall","src":"27953:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27945:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27823:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27838:4:23","type":""}],"src":"27672:419:23"},{"body":{"nodeType":"YulBlock","src":"28125:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28142:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28145:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28135:6:23"},"nodeType":"YulFunctionCall","src":"28135:88:23"},"nodeType":"YulExpressionStatement","src":"28135:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28239:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28242:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28232:6:23"},"nodeType":"YulFunctionCall","src":"28232:15:23"},"nodeType":"YulExpressionStatement","src":"28232:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28263:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28266:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28256:6:23"},"nodeType":"YulFunctionCall","src":"28256:15:23"},"nodeType":"YulExpressionStatement","src":"28256:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"28097:180:23"},{"body":{"nodeType":"YulBlock","src":"28334:269:23","statements":[{"nodeType":"YulAssignment","src":"28344:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28358:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"28364:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28354:3:23"},"nodeType":"YulFunctionCall","src":"28354:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28344:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"28375:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28405:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"28411:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28401:3:23"},"nodeType":"YulFunctionCall","src":"28401:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"28379:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"28452:51:23","statements":[{"nodeType":"YulAssignment","src":"28466:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28480:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"28488:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28476:3:23"},"nodeType":"YulFunctionCall","src":"28476:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28466:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28432:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28425:6:23"},"nodeType":"YulFunctionCall","src":"28425:26:23"},"nodeType":"YulIf","src":"28422:81:23"},{"body":{"nodeType":"YulBlock","src":"28555:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"28569:16:23"},"nodeType":"YulFunctionCall","src":"28569:18:23"},"nodeType":"YulExpressionStatement","src":"28569:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"28519:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28542:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"28550:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28539:2:23"},"nodeType":"YulFunctionCall","src":"28539:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28516:2:23"},"nodeType":"YulFunctionCall","src":"28516:38:23"},"nodeType":"YulIf","src":"28513:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"28318:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28327:6:23","type":""}],"src":"28283:320:23"},{"body":{"nodeType":"YulBlock","src":"28735:206:23","statements":[{"nodeType":"YulAssignment","src":"28745:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28757:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28768:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28753:3:23"},"nodeType":"YulFunctionCall","src":"28753:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28745:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28825:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28838:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28849:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28834:3:23"},"nodeType":"YulFunctionCall","src":"28834:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28781:43:23"},"nodeType":"YulFunctionCall","src":"28781:71:23"},"nodeType":"YulExpressionStatement","src":"28781:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28906:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28919:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28930:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28915:3:23"},"nodeType":"YulFunctionCall","src":"28915:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28862:43:23"},"nodeType":"YulFunctionCall","src":"28862:72:23"},"nodeType":"YulExpressionStatement","src":"28862:72:23"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28699:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28711:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28719:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28730:4:23","type":""}],"src":"28609:332:23"},{"body":{"nodeType":"YulBlock","src":"29053:126:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29075:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"29083:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29071:3:23"},"nodeType":"YulFunctionCall","src":"29071:14:23"},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472","kind":"string","nodeType":"YulLiteral","src":"29087:34:23","type":"","value":"TransferHelper::safeTransfer: tr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29064:6:23"},"nodeType":"YulFunctionCall","src":"29064:58:23"},"nodeType":"YulExpressionStatement","src":"29064:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29143:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"29151:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29139:3:23"},"nodeType":"YulFunctionCall","src":"29139:15:23"},{"hexValue":"616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"29156:15:23","type":"","value":"ansfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29132:6:23"},"nodeType":"YulFunctionCall","src":"29132:40:23"},"nodeType":"YulExpressionStatement","src":"29132:40:23"}]},"name":"store_literal_in_memory_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29045:6:23","type":""}],"src":"28947:232:23"},{"body":{"nodeType":"YulBlock","src":"29331:220:23","statements":[{"nodeType":"YulAssignment","src":"29341:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29407:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"29412:2:23","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29348:58:23"},"nodeType":"YulFunctionCall","src":"29348:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29341:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29513:3:23"}],"functionName":{"name":"store_literal_in_memory_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","nodeType":"YulIdentifier","src":"29424:88:23"},"nodeType":"YulFunctionCall","src":"29424:93:23"},"nodeType":"YulExpressionStatement","src":"29424:93:23"},{"nodeType":"YulAssignment","src":"29526:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29537:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"29542:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29533:3:23"},"nodeType":"YulFunctionCall","src":"29533:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29526:3:23"}]}]},"name":"abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29319:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29327:3:23","type":""}],"src":"29185:366:23"},{"body":{"nodeType":"YulBlock","src":"29728:248:23","statements":[{"nodeType":"YulAssignment","src":"29738:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29750:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29761:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29746:3:23"},"nodeType":"YulFunctionCall","src":"29746:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29738:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29785:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29796:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29781:3:23"},"nodeType":"YulFunctionCall","src":"29781:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29804:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"29810:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29800:3:23"},"nodeType":"YulFunctionCall","src":"29800:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29774:6:23"},"nodeType":"YulFunctionCall","src":"29774:47:23"},"nodeType":"YulExpressionStatement","src":"29774:47:23"},{"nodeType":"YulAssignment","src":"29830:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29964:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29838:124:23"},"nodeType":"YulFunctionCall","src":"29838:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29830:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29708:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29723:4:23","type":""}],"src":"29557:419:23"},{"body":{"nodeType":"YulBlock","src":"30164:371:23","statements":[{"nodeType":"YulAssignment","src":"30174:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30186:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30197:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30182:3:23"},"nodeType":"YulFunctionCall","src":"30182:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30174:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30255:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30268:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30279:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30264:3:23"},"nodeType":"YulFunctionCall","src":"30264:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30211:43:23"},"nodeType":"YulFunctionCall","src":"30211:71:23"},"nodeType":"YulExpressionStatement","src":"30211:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30336:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30349:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30360:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30345:3:23"},"nodeType":"YulFunctionCall","src":"30345:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30292:43:23"},"nodeType":"YulFunctionCall","src":"30292:72:23"},"nodeType":"YulExpressionStatement","src":"30292:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30418:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30431:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30442:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30427:3:23"},"nodeType":"YulFunctionCall","src":"30427:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30374:43:23"},"nodeType":"YulFunctionCall","src":"30374:72:23"},"nodeType":"YulExpressionStatement","src":"30374:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30500:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30513:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30524:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30509:3:23"},"nodeType":"YulFunctionCall","src":"30509:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30456:43:23"},"nodeType":"YulFunctionCall","src":"30456:72:23"},"nodeType":"YulExpressionStatement","src":"30456:72:23"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30112:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30124:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30132:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30140:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30148:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30159:4:23","type":""}],"src":"29982:553:23"},{"body":{"nodeType":"YulBlock","src":"30723:371:23","statements":[{"nodeType":"YulAssignment","src":"30733:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30745:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30756:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30741:3:23"},"nodeType":"YulFunctionCall","src":"30741:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30733:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30814:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30827:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30838:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30823:3:23"},"nodeType":"YulFunctionCall","src":"30823:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30770:43:23"},"nodeType":"YulFunctionCall","src":"30770:71:23"},"nodeType":"YulExpressionStatement","src":"30770:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30895:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30908:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30919:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30904:3:23"},"nodeType":"YulFunctionCall","src":"30904:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30851:43:23"},"nodeType":"YulFunctionCall","src":"30851:72:23"},"nodeType":"YulExpressionStatement","src":"30851:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30977:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30990:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31001:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30986:3:23"},"nodeType":"YulFunctionCall","src":"30986:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30933:43:23"},"nodeType":"YulFunctionCall","src":"30933:72:23"},"nodeType":"YulExpressionStatement","src":"30933:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31059:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31072:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31083:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31068:3:23"},"nodeType":"YulFunctionCall","src":"31068:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31015:43:23"},"nodeType":"YulFunctionCall","src":"31015:72:23"},"nodeType":"YulExpressionStatement","src":"31015:72:23"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30671:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30683:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30691:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30699:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30707:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30718:4:23","type":""}],"src":"30541:553:23"},{"body":{"nodeType":"YulBlock","src":"31226:206:23","statements":[{"nodeType":"YulAssignment","src":"31236:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31248:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31259:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31244:3:23"},"nodeType":"YulFunctionCall","src":"31244:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31236:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31316:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31329:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31340:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31325:3:23"},"nodeType":"YulFunctionCall","src":"31325:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31272:43:23"},"nodeType":"YulFunctionCall","src":"31272:71:23"},"nodeType":"YulExpressionStatement","src":"31272:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31397:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31410:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31421:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31406:3:23"},"nodeType":"YulFunctionCall","src":"31406:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31353:43:23"},"nodeType":"YulFunctionCall","src":"31353:72:23"},"nodeType":"YulExpressionStatement","src":"31353:72:23"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31190:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31202:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31210:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31221:4:23","type":""}],"src":"31100:332:23"},{"body":{"nodeType":"YulBlock","src":"31648:454:23","statements":[{"nodeType":"YulAssignment","src":"31658:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31670:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31681:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31666:3:23"},"nodeType":"YulFunctionCall","src":"31666:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31658:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31739:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31752:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31763:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31748:3:23"},"nodeType":"YulFunctionCall","src":"31748:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31695:43:23"},"nodeType":"YulFunctionCall","src":"31695:71:23"},"nodeType":"YulExpressionStatement","src":"31695:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31820:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31833:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31844:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31829:3:23"},"nodeType":"YulFunctionCall","src":"31829:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31776:43:23"},"nodeType":"YulFunctionCall","src":"31776:72:23"},"nodeType":"YulExpressionStatement","src":"31776:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31902:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31915:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31926:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31911:3:23"},"nodeType":"YulFunctionCall","src":"31911:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"31858:43:23"},"nodeType":"YulFunctionCall","src":"31858:72:23"},"nodeType":"YulExpressionStatement","src":"31858:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31984:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31997:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32008:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31993:3:23"},"nodeType":"YulFunctionCall","src":"31993:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31940:43:23"},"nodeType":"YulFunctionCall","src":"31940:72:23"},"nodeType":"YulExpressionStatement","src":"31940:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"32066:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32079:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32090:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32075:3:23"},"nodeType":"YulFunctionCall","src":"32075:19:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32022:43:23"},"nodeType":"YulFunctionCall","src":"32022:73:23"},"nodeType":"YulExpressionStatement","src":"32022:73:23"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31588:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31600:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31608:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31616:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31624:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31632:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31643:4:23","type":""}],"src":"31438:664:23"},{"body":{"nodeType":"YulBlock","src":"32169:51:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32186:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32207:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"32191:15:23"},"nodeType":"YulFunctionCall","src":"32191:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32179:6:23"},"nodeType":"YulFunctionCall","src":"32179:35:23"},"nodeType":"YulExpressionStatement","src":"32179:35:23"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32157:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32164:3:23","type":""}],"src":"32108:112:23"},{"body":{"nodeType":"YulBlock","src":"32404:367:23","statements":[{"nodeType":"YulAssignment","src":"32414:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32426:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32437:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32422:3:23"},"nodeType":"YulFunctionCall","src":"32422:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32414:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32495:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32508:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32519:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32504:3:23"},"nodeType":"YulFunctionCall","src":"32504:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32451:43:23"},"nodeType":"YulFunctionCall","src":"32451:71:23"},"nodeType":"YulExpressionStatement","src":"32451:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32572:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32585:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32596:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32581:3:23"},"nodeType":"YulFunctionCall","src":"32581:18:23"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"32532:39:23"},"nodeType":"YulFunctionCall","src":"32532:68:23"},"nodeType":"YulExpressionStatement","src":"32532:68:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32654:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32667:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32678:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32663:3:23"},"nodeType":"YulFunctionCall","src":"32663:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32610:43:23"},"nodeType":"YulFunctionCall","src":"32610:72:23"},"nodeType":"YulExpressionStatement","src":"32610:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32736:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32749:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32760:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32745:3:23"},"nodeType":"YulFunctionCall","src":"32745:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32692:43:23"},"nodeType":"YulFunctionCall","src":"32692:72:23"},"nodeType":"YulExpressionStatement","src":"32692:72:23"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32352:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32364:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32372:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32380:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32388:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32399:4:23","type":""}],"src":"32226:545:23"},{"body":{"nodeType":"YulBlock","src":"32805:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32822:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32825:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32815:6:23"},"nodeType":"YulFunctionCall","src":"32815:88:23"},"nodeType":"YulExpressionStatement","src":"32815:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32919:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32922:4:23","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32912:6:23"},"nodeType":"YulFunctionCall","src":"32912:15:23"},"nodeType":"YulExpressionStatement","src":"32912:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32943:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32946:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32936:6:23"},"nodeType":"YulFunctionCall","src":"32936:15:23"},"nodeType":"YulExpressionStatement","src":"32936:15:23"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"32777:180:23"},{"body":{"nodeType":"YulBlock","src":"33017:87:23","statements":[{"nodeType":"YulAssignment","src":"33027:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"33035:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33027:4:23"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33055:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"33058:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33048:6:23"},"nodeType":"YulFunctionCall","src":"33048:14:23"},"nodeType":"YulExpressionStatement","src":"33048:14:23"},{"nodeType":"YulAssignment","src":"33071:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33089:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33092:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"33079:9:23"},"nodeType":"YulFunctionCall","src":"33079:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33071:4:23"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"33004:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"33012:4:23","type":""}],"src":"32963:141:23"},{"body":{"nodeType":"YulBlock","src":"33154:49:23","statements":[{"nodeType":"YulAssignment","src":"33164:33:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33182:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"33189:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33178:3:23"},"nodeType":"YulFunctionCall","src":"33178:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"33194:2:23","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"33174:3:23"},"nodeType":"YulFunctionCall","src":"33174:23:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33164:6:23"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33137:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33147:6:23","type":""}],"src":"33110:93:23"},{"body":{"nodeType":"YulBlock","src":"33262:54:23","statements":[{"nodeType":"YulAssignment","src":"33272:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"33297:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"33303:5:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33293:3:23"},"nodeType":"YulFunctionCall","src":"33293:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33272:8:23"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"33237:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"33243:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33253:8:23","type":""}],"src":"33209:107:23"},{"body":{"nodeType":"YulBlock","src":"33398:317:23","statements":[{"nodeType":"YulVariableDeclaration","src":"33408:35:23","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"33429:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"33441:1:23","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33425:3:23"},"nodeType":"YulFunctionCall","src":"33425:18:23"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"33412:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33452:109:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"33483:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"33494:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"33464:18:23"},"nodeType":"YulFunctionCall","src":"33464:97:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33456:4:23","type":""}]},{"nodeType":"YulAssignment","src":"33570:51:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"33601:9:23"},{"name":"toInsert","nodeType":"YulIdentifier","src":"33612:8:23"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"33582:18:23"},"nodeType":"YulFunctionCall","src":"33582:39:23"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33570:8:23"}]},{"nodeType":"YulAssignment","src":"33630:30:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33643:5:23"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"33654:4:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33650:3:23"},"nodeType":"YulFunctionCall","src":"33650:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33639:3:23"},"nodeType":"YulFunctionCall","src":"33639:21:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33630:5:23"}]},{"nodeType":"YulAssignment","src":"33669:40:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33682:5:23"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33693:8:23"},{"name":"mask","nodeType":"YulIdentifier","src":"33703:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33689:3:23"},"nodeType":"YulFunctionCall","src":"33689:19:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33679:2:23"},"nodeType":"YulFunctionCall","src":"33679:30:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33669:6:23"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33359:5:23","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"33366:10:23","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"33378:8:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33391:6:23","type":""}],"src":"33322:393:23"},{"body":{"nodeType":"YulBlock","src":"33781:82:23","statements":[{"nodeType":"YulAssignment","src":"33791:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33849:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33831:17:23"},"nodeType":"YulFunctionCall","src":"33831:24:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"33822:8:23"},"nodeType":"YulFunctionCall","src":"33822:34:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33804:17:23"},"nodeType":"YulFunctionCall","src":"33804:53:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"33791:9:23"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33761:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"33771:9:23","type":""}],"src":"33721:142:23"},{"body":{"nodeType":"YulBlock","src":"33916:28:23","statements":[{"nodeType":"YulAssignment","src":"33926:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"33933:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33926:3:23"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33902:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33912:3:23","type":""}],"src":"33869:75:23"},{"body":{"nodeType":"YulBlock","src":"34026:193:23","statements":[{"nodeType":"YulVariableDeclaration","src":"34036:63:23","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"34091:7:23"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"34060:30:23"},"nodeType":"YulFunctionCall","src":"34060:39:23"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"34040:16:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34115:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34155:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34149:5:23"},"nodeType":"YulFunctionCall","src":"34149:11:23"},{"name":"offset","nodeType":"YulIdentifier","src":"34162:6:23"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"34194:16:23"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"34170:23:23"},"nodeType":"YulFunctionCall","src":"34170:41:23"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"34121:27:23"},"nodeType":"YulFunctionCall","src":"34121:91:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34108:6:23"},"nodeType":"YulFunctionCall","src":"34108:105:23"},"nodeType":"YulExpressionStatement","src":"34108:105:23"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34003:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"34009:6:23","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"34017:7:23","type":""}],"src":"33950:269:23"},{"body":{"nodeType":"YulBlock","src":"34274:24:23","statements":[{"nodeType":"YulAssignment","src":"34284:8:23","value":{"kind":"number","nodeType":"YulLiteral","src":"34291:1:23","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34284:3:23"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34270:3:23","type":""}],"src":"34225:73:23"},{"body":{"nodeType":"YulBlock","src":"34357:136:23","statements":[{"nodeType":"YulVariableDeclaration","src":"34367:46:23","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"34381:30:23"},"nodeType":"YulFunctionCall","src":"34381:32:23"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"34371:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34466:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"34472:6:23"},{"name":"zero_0","nodeType":"YulIdentifier","src":"34480:6:23"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"34422:43:23"},"nodeType":"YulFunctionCall","src":"34422:65:23"},"nodeType":"YulExpressionStatement","src":"34422:65:23"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34343:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"34349:6:23","type":""}],"src":"34304:189:23"},{"body":{"nodeType":"YulBlock","src":"34549:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"34616:63:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34660:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"34667:1:23","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"34630:29:23"},"nodeType":"YulFunctionCall","src":"34630:39:23"},"nodeType":"YulExpressionStatement","src":"34630:39:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34569:5:23"},{"name":"end","nodeType":"YulIdentifier","src":"34576:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34566:2:23"},"nodeType":"YulFunctionCall","src":"34566:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34581:26:23","statements":[{"nodeType":"YulAssignment","src":"34583:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34596:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"34603:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34592:3:23"},"nodeType":"YulFunctionCall","src":"34592:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"34583:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"34563:2:23","statements":[]},"src":"34559:120:23"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"34537:5:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"34544:3:23","type":""}],"src":"34499:186:23"},{"body":{"nodeType":"YulBlock","src":"34770:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"34796:431:23","statements":[{"nodeType":"YulVariableDeclaration","src":"34810:54:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"34858:5:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"34826:31:23"},"nodeType":"YulFunctionCall","src":"34826:38:23"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"34814:8:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34877:63:23","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34900:8:23"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34928:10:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34910:17:23"},"nodeType":"YulFunctionCall","src":"34910:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34896:3:23"},"nodeType":"YulFunctionCall","src":"34896:44:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"34881:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"35097:27:23","statements":[{"nodeType":"YulAssignment","src":"35099:23:23","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"35114:8:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"35099:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"35081:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"35093:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35078:2:23"},"nodeType":"YulFunctionCall","src":"35078:18:23"},"nodeType":"YulIf","src":"35075:49:23"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"35166:11:23"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"35183:8:23"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"35211:3:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"35193:17:23"},"nodeType":"YulFunctionCall","src":"35193:22:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35179:3:23"},"nodeType":"YulFunctionCall","src":"35179:37:23"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"35137:28:23"},"nodeType":"YulFunctionCall","src":"35137:80:23"},"nodeType":"YulExpressionStatement","src":"35137:80:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34787:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"34792:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34784:2:23"},"nodeType":"YulFunctionCall","src":"34784:11:23"},"nodeType":"YulIf","src":"34781:446:23"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"34746:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"34753:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"34758:10:23","type":""}],"src":"34691:543:23"},{"body":{"nodeType":"YulBlock","src":"35303:54:23","statements":[{"nodeType":"YulAssignment","src":"35313:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"35338:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"35344:5:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"35334:3:23"},"nodeType":"YulFunctionCall","src":"35334:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"35313:8:23"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"35278:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"35284:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"35294:8:23","type":""}],"src":"35240:117:23"},{"body":{"nodeType":"YulBlock","src":"35414:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"35424:68:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35473:1:23","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"35476:5:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35469:3:23"},"nodeType":"YulFunctionCall","src":"35469:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35488:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35484:3:23"},"nodeType":"YulFunctionCall","src":"35484:6:23"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"35440:28:23"},"nodeType":"YulFunctionCall","src":"35440:51:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35436:3:23"},"nodeType":"YulFunctionCall","src":"35436:56:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"35428:4:23","type":""}]},{"nodeType":"YulAssignment","src":"35501:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35515:4:23"},{"name":"mask","nodeType":"YulIdentifier","src":"35521:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35511:3:23"},"nodeType":"YulFunctionCall","src":"35511:15:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"35501:6:23"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35391:4:23","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"35397:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"35407:6:23","type":""}],"src":"35363:169:23"},{"body":{"nodeType":"YulBlock","src":"35618:214:23","statements":[{"nodeType":"YulAssignment","src":"35751:37:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35778:4:23"},{"name":"len","nodeType":"YulIdentifier","src":"35784:3:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"35759:18:23"},"nodeType":"YulFunctionCall","src":"35759:29:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35751:4:23"}]},{"nodeType":"YulAssignment","src":"35797:29:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35808:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35818:1:23","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"35821:3:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35814:3:23"},"nodeType":"YulFunctionCall","src":"35814:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"35805:2:23"},"nodeType":"YulFunctionCall","src":"35805:21:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"35797:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35599:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"35605:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"35613:4:23","type":""}],"src":"35537:295:23"},{"body":{"nodeType":"YulBlock","src":"35929:1303:23","statements":[{"nodeType":"YulVariableDeclaration","src":"35940:51:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35987:3:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"35954:32:23"},"nodeType":"YulFunctionCall","src":"35954:37:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"35944:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"36076:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"36078:16:23"},"nodeType":"YulFunctionCall","src":"36078:18:23"},"nodeType":"YulExpressionStatement","src":"36078:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36048:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"36056:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36045:2:23"},"nodeType":"YulFunctionCall","src":"36045:30:23"},"nodeType":"YulIf","src":"36042:56:23"},{"nodeType":"YulVariableDeclaration","src":"36108:52:23","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36154:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"36148:5:23"},"nodeType":"YulFunctionCall","src":"36148:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"36122:25:23"},"nodeType":"YulFunctionCall","src":"36122:38:23"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"36112:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36253:4:23"},{"name":"oldLen","nodeType":"YulIdentifier","src":"36259:6:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"36267:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"36207:45:23"},"nodeType":"YulFunctionCall","src":"36207:67:23"},"nodeType":"YulExpressionStatement","src":"36207:67:23"},{"nodeType":"YulVariableDeclaration","src":"36284:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"36301:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"36288:9:23","type":""}]},{"nodeType":"YulAssignment","src":"36312:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"36325:4:23","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36312:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"36376:611:23","statements":[{"nodeType":"YulVariableDeclaration","src":"36390:37:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36409:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36421:4:23","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36417:3:23"},"nodeType":"YulFunctionCall","src":"36417:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36405:3:23"},"nodeType":"YulFunctionCall","src":"36405:22:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"36394:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36441:51:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36487:4:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36455:31:23"},"nodeType":"YulFunctionCall","src":"36455:37:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"36445:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36505:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"36514:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"36509:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"36573:163:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36598:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36616:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36621:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36612:3:23"},"nodeType":"YulFunctionCall","src":"36612:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36606:5:23"},"nodeType":"YulFunctionCall","src":"36606:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36591:6:23"},"nodeType":"YulFunctionCall","src":"36591:42:23"},"nodeType":"YulExpressionStatement","src":"36591:42:23"},{"nodeType":"YulAssignment","src":"36650:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36664:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"36672:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36660:3:23"},"nodeType":"YulFunctionCall","src":"36660:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36650:6:23"}]},{"nodeType":"YulAssignment","src":"36691:31:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36708:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36719:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36704:3:23"},"nodeType":"YulFunctionCall","src":"36704:18:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36691:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36539:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"36542:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36536:2:23"},"nodeType":"YulFunctionCall","src":"36536:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36551:21:23","statements":[{"nodeType":"YulAssignment","src":"36553:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36562:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"36565:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36558:3:23"},"nodeType":"YulFunctionCall","src":"36558:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"36553:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"36532:3:23","statements":[]},"src":"36528:208:23"},{"body":{"nodeType":"YulBlock","src":"36772:156:23","statements":[{"nodeType":"YulVariableDeclaration","src":"36790:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36817:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36822:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36813:3:23"},"nodeType":"YulFunctionCall","src":"36813:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36807:5:23"},"nodeType":"YulFunctionCall","src":"36807:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"36794:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36857:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"36884:9:23"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36899:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"36907:4:23","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36895:3:23"},"nodeType":"YulFunctionCall","src":"36895:17:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"36865:18:23"},"nodeType":"YulFunctionCall","src":"36865:48:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36850:6:23"},"nodeType":"YulFunctionCall","src":"36850:64:23"},"nodeType":"YulExpressionStatement","src":"36850:64:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"36755:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"36764:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36752:2:23"},"nodeType":"YulFunctionCall","src":"36752:19:23"},"nodeType":"YulIf","src":"36749:179:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36948:4:23"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36962:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"36970:1:23","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36958:3:23"},"nodeType":"YulFunctionCall","src":"36958:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"36974:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36954:3:23"},"nodeType":"YulFunctionCall","src":"36954:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36941:6:23"},"nodeType":"YulFunctionCall","src":"36941:36:23"},"nodeType":"YulExpressionStatement","src":"36941:36:23"}]},"nodeType":"YulCase","src":"36369:618:23","value":{"kind":"number","nodeType":"YulLiteral","src":"36374:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"37004:222:23","statements":[{"nodeType":"YulVariableDeclaration","src":"37018:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"37031:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"37022:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"37055:67:23","statements":[{"nodeType":"YulAssignment","src":"37073:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37092:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37097:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37088:3:23"},"nodeType":"YulFunctionCall","src":"37088:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37082:5:23"},"nodeType":"YulFunctionCall","src":"37082:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37073:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"37048:6:23"},"nodeType":"YulIf","src":"37045:77:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37142:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37201:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"37208:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"37148:52:23"},"nodeType":"YulFunctionCall","src":"37148:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37135:6:23"},"nodeType":"YulFunctionCall","src":"37135:81:23"},"nodeType":"YulExpressionStatement","src":"37135:81:23"}]},"nodeType":"YulCase","src":"36996:230:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36349:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"36357:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36346:2:23"},"nodeType":"YulFunctionCall","src":"36346:14:23"},"nodeType":"YulSwitch","src":"36339:887:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35918:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"35924:3:23","type":""}],"src":"35837:1395:23"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct IAtomicSwapBase.PermitSignature\n    function abi_decode_t_struct$_PermitSignature_$4835_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 160) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes32t_struct$_PermitSignature_$4835_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_struct$_PermitSignature_$4835_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d(memPtr) {\n\n        mstore(add(memPtr, 0), \"OwnablePausable: access denied\")\n\n    }\n\n    function abi_encode_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_334a0acc9dd08a705cc8c5e0697f042165442e35cdd808c6daf6446d7a1f376d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(memPtr) {\n\n        mstore(add(memPtr, 0), \"EIP712: Uninitialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_bytes32_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vault: Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a56adef5e9cb913f0c80a3f1fececb5f312126510b7b4c2c1434a322d48ab303_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01(memPtr) {\n\n        mstore(add(memPtr, 0), \"MoriginApp: invalid value!\")\n\n    }\n\n    function abi_encode_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0eead70baa3ba3c7ec26bca5f7efe20e2de730943e59136e14666ba239c8ec01_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::transferFrom: tr\")\n\n        mstore(add(memPtr, 32), \"ansferFrom failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::safeTransfer: tr\")\n\n        mstore(add(memPtr, 32), \"ansfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101d15760003560e01c806382dc1ec4116100f7578063beabacc811610095578063e63ab1e911610064578063e63ab1e914610697578063f2407ca4146106c2578063f399e22e146106eb578063f7888aec14610714576101d8565b8063beabacc8146105cb578063d547741f14610608578063d9caed1214610631578063e1f21c671461065a576101d8565b806391d14854116100d157806391d14854146104fd578063927da1051461053a578063a1b996c114610577578063a217fddf146105a0576101d8565b806382dc1ec41461048c5780638456cb59146104b557806384b0196e146104cc576101d8565b806336568abe1161016f57806347e7ef241161013e57806347e7ef24146103f35780635c975abb1461040f5780636b2c0f551461043a5780637048027514610463576101d8565b806336568abe1461034b5780633d538ecf146103745780633f4ba83a1461039f57806346fbf68e146103b6576101d8565b8063248a9ca3116101ab578063248a9ca31461027d57806324d7806c146102ba5780632f2ff15d146102f75780633644e51514610320576101d8565b806301ffc9a7146101da57806315dacbea146102175780631785f53c14610254576101d8565b366101d857005b005b3480156101e657600080fd5b5061020160048036038101906101fc919061300d565b610751565b60405161020e9190613055565b60405180910390f35b34801561022357600080fd5b5061023e60048036038101906102399190613104565b6107cb565b60405161024b9190613055565b60405180910390f35b34801561026057600080fd5b5061027b6004803603810190610276919061316b565b6107fd565b005b34801561028957600080fd5b506102a4600480360381019061029f91906131ce565b61080d565b6040516102b1919061320a565b60405180910390f35b3480156102c657600080fd5b506102e160048036038101906102dc919061316b565b61083b565b6040516102ee9190613055565b60405180910390f35b34801561030357600080fd5b5061031e60048036038101906103199190613225565b610851565b005b34801561032c57600080fd5b50610335610873565b604051610342919061320a565b60405180910390f35b34801561035757600080fd5b50610372600480360381019061036d9190613225565b610882565b005b34801561038057600080fd5b506103896108fd565b6040516103969190613274565b60405180910390f35b3480156103ab57600080fd5b506103b4610903565b005b3480156103c257600080fd5b506103dd60048036038101906103d8919061316b565b610976565b6040516103ea9190613055565b60405180910390f35b61040d6004803603810190610408919061328f565b6109a9565b005b34801561041b57600080fd5b50610424610b88565b6040516104319190613055565b60405180910390f35b34801561044657600080fd5b50610461600480360381019061045c919061316b565b610bad565b005b34801561046f57600080fd5b5061048a6004803603810190610485919061316b565b610bda565b005b34801561049857600080fd5b506104b360048036038101906104ae919061316b565b610bea565b005b3480156104c157600080fd5b506104ca610c17565b005b3480156104d857600080fd5b506104e1610c8a565b6040516104f49796959493929190613467565b60405180910390f35b34801561050957600080fd5b50610524600480360381019061051f9190613225565b610d9c565b6040516105319190613055565b60405180910390f35b34801561054657600080fd5b50610561600480360381019061055c91906134eb565b610e15565b60405161056e9190613274565b60405180910390f35b34801561058357600080fd5b5061059e60048036038101906105999190613562565b610eda565b005b3480156105ac57600080fd5b506105b5611140565b6040516105c2919061320a565b60405180910390f35b3480156105d757600080fd5b506105f260048036038101906105ed91906135de565b611147565b6040516105ff9190613055565b60405180910390f35b34801561061457600080fd5b5061062f600480360381019061062a9190613225565b61116c565b005b34801561063d57600080fd5b50610658600480360381019061065391906135de565b61118e565b005b34801561066657600080fd5b50610681600480360381019061067c91906135de565b611496565b60405161068e9190613055565b60405180910390f35b3480156106a357600080fd5b506106ac6114bd565b6040516106b9919061320a565b60405180910390f35b3480156106ce57600080fd5b506106e960048036038101906106e49190613631565b6114e1565b005b3480156106f757600080fd5b50610712600480360381019061070d9190613793565b61157a565b005b34801561072057600080fd5b5061073b600480360381019061073691906137ef565b611749565b6040516107489190613274565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107c457506107c3826117cf565b5b9050919050565b6000806107d6611839565b90506107e486868386611841565b6107f0868686866118d8565b6001915050949350505050565b61080a6000801b8261116c565b50565b6000806108186119ce565b905080600001600084815260200190815260200160002060010154915050919050565b600061084a6000801b83610d9c565b9050919050565b61085a8261080d565b610863816119f6565b61086d8383611a0a565b50505050565b600061087d611b0b565b905090565b61088a611839565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108ee576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f88282611b1a565b505050565b60025481565b61092d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610d9c565b61096c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109639061387b565b60405180910390fd5b610974611c1c565b565b60006109a27f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a83610d9c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610a3a5760003414610a2257806040517f0f30c25e000000000000000000000000000000000000000000000000000000008152600401610a199190613274565b60405180910390fd5b610a3582610a2e611839565b3084611c8e565b610a7f565b803414610a7e57806040517fe279109d000000000000000000000000000000000000000000000000000000008152600401610a759190613274565b60405180910390fd5b5b80600080610a8b611839565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1191906138ca565b92505081905550610b20611839565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610b7c9190613274565b60405180910390a35050565b600080610b93611dc7565b90508060000160009054906101000a900460ff1691505090565b610bd77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8261116c565b50565b610be76000801b82610851565b50565b610c147f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a82610851565b50565b610c417f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610d9c565b610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c779061387b565b60405180910390fd5b610c88611def565b565b6000606080600080600060606000610ca0611e61565b90506000801b8160000154148015610cbe57506000801b8160010154145b610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf49061394a565b60405180910390fd5b610d05611e89565b610d0d611f2a565b46306000801b600067ffffffffffffffff811115610d2e57610d2d613668565b5b604051908082528060200260200182016040528015610d5c5781602001602082028036833780820191505090505b507f0f0000000000000000000000000000000000000000000000000000000000000095949392919097509750975097509750975097505090919293949596565b600080610da76119ce565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b610ee76000801b33610d9c565b610f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1d9061387b565b60405180910390fd5b610f3a826003611fcb90919063ffffffff16565b15610f7c57816040517f591145fb000000000000000000000000000000000000000000000000000000008152600401610f73919061320a565b60405180910390fd5b8060800135421115610fc95780608001356040517f0891870a000000000000000000000000000000000000000000000000000000008152600401610fc09190613274565b60405180910390fd5b60007f1bcd16601e2086d958cf8198037b6718bdc081870f18734581ae91ee73069e95826060016020810190610fff919061316b565b868686866080013560405160200161101c9695949392919061396a565b604051602081830303815290604052805190602001209050600061103f82611fe2565b905060006110698285600001602081019061105a9190613a04565b86602001358760400135611ffc565b905083606001602081019061107e919061316b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461110157808460600160208101906110c4919061316b565b6040517f6babb0970000000000000000000000000000000000000000000000000000000081526004016110f8929190613a31565b60405180910390fd5b61111585600361202c90919063ffffffff16565b506111368885606001602081019061112d919061316b565b89896001612043565b5050505050505050565b6000801b81565b600080611152611839565b9050611160858286866118d8565b60019150509392505050565b6111758261080d565b61117e816119f6565b6111888383611b1a565b50505050565b60008110156111d457806040517fe279109d0000000000000000000000000000000000000000000000000000000081526004016111cb9190613274565b60405180910390fd5b60008060006111e1611839565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112a057816040517fe279109d0000000000000000000000000000000000000000000000000000000081526004016112979190613274565b60405180910390fd5b816000806112ac611839565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113329190613a5a565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361141f5760008373ffffffffffffffffffffffffffffffffffffffff168360405161139390613abf565b60006040518083038185875af1925050503d80600081146113d0576040519150601f19603f3d011682016040523d82523d6000602084013e6113d5565b606091505b5050905080611419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141090613b20565b60405180910390fd5b5061142b565b61142a84848461224e565b5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398846040516114889190613274565b60405180910390a350505050565b6000806114a1611839565b90506114b1858286866001612043565b60019150509392505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6114ee6000801b33610d9c565b61152d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115249061387b565b60405180910390fd5b60008111611570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156790613b8c565b60405180910390fd5b8060028190555050565b6000611584612384565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156115d25750825b9050600060018367ffffffffffffffff16148015611607575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611615575080155b1561164c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561169c5760018560000160086101000a81548160ff0219169083151502179055505b6116a5876123ac565b6116e4866040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525061255b565b83156117405760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516117379190613c05565b60405180910390a15b50505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600061184e858585610e15565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146118d157818110156118c0578281836040517fcf7e36780000000000000000000000000000000000000000000000000000000081526004016118b793929190613c20565b60405180910390fd5b6118d08585858585036000612043565b5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194a5760006040517ff4d2be290000000000000000000000000000000000000000000000000000000081526004016119419190613c57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119bc5760006040517fe0823dd80000000000000000000000000000000000000000000000000000000081526004016119b39190613c57565b60405180910390fd5b6119c884848484612571565b50505050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b611a0781611a02611839565b61278b565b50565b600080611a156119ce565b9050611a218484610d9c565b611aff57600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611a9b611839565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050611b05565b60009150505b92915050565b6000611b156127dc565b905090565b600080611b256119ce565b9050611b318484610d9c565b15611c1057600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611bac611839565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050611c16565b60009150505b92915050565b611c24612840565b6000611c2e611dc7565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611c76611839565b604051611c839190613c57565b60405180910390a150565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611cc293929190613c72565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611d109190613ce5565b6000604051808303816000865af19150503d8060008114611d4d576040519150601f19603f3d011682016040523d82523d6000602084013e611d52565b606091505b5091509150818015611d805750600081511480611d7f575080806020019051810190611d7e9190613d28565b5b5b611dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db690613dc7565b60405180910390fd5b505050505050565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b611df7612880565b6000611e01611dc7565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e49611839565b604051611e569190613c57565b60405180910390a150565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100905090565b60606000611e95611e61565b9050806002018054611ea690613e16565b80601f0160208091040260200160405190810160405280929190818152602001828054611ed290613e16565b8015611f1f5780601f10611ef457610100808354040283529160200191611f1f565b820191906000526020600020905b815481529060010190602001808311611f0257829003601f168201915b505050505091505090565b60606000611f36611e61565b9050806003018054611f4790613e16565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7390613e16565b8015611fc05780601f10611f9557610100808354040283529160200191611fc0565b820191906000526020600020905b815481529060010190602001808311611fa357829003601f168201915b505050505091505090565b6000611fda83600001836128c1565b905092915050565b6000611ff5611fef611b0b565b836128e4565b9050919050565b60008060008061200e88888888612925565b92509250925061201e8282612a19565b829350505050949350505050565b600061203b8360000183612b7d565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036120b55760006040517fd5d258fa0000000000000000000000000000000000000000000000000000000081526004016120ac9190613c57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121275760006040517f0abbbe2e00000000000000000000000000000000000000000000000000000000815260040161211e9190613c57565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561224757818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f91ed140d4ef0d36cfe0e48d6e199657e7295b810bded34c1c95874b2b676e06d60405160405180910390a45b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401612280929190613e47565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516122ce9190613ce5565b6000604051808303816000865af19150503d806000811461230b576040519150601f19603f3d011682016040523d82523d6000602084013e612310565b606091505b509150915081801561233e575060008151148061233d57508080602001905181019061233c9190613d28565b5b5b61237d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237490613ee2565b60405180910390fd5b5050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b60006123b6612384565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156124045750825b9050600060018367ffffffffffffffff16148015612439575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612447575080155b1561247e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156124ce5760018560000160086101000a81548160ff0219169083151502179055505b6124d6612bed565b6124de612bf7565b6124e6612c01565b6124ef86612c35565b606460028190555083156125535760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161254a9190613c05565b60405180910390a15b505050505050565b612563612df4565b61256d8282612e34565b5050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561263c57848482846040517f680f1b420000000000000000000000000000000000000000000000000000000081526004016126339493929190613f02565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fc4298a5beffbb92832adef4bde23a2148eea5117fee88fd06e963ddcb4a523f48585858560405161277c9493929190613f47565b60405180910390a15050505050565b6127958282610d9c565b6127d85780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016127cf929190613f8c565b60405180910390fd5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612807612e89565b61280f612f05565b4630604051602001612825959493929190613fb5565b60405160208183030381529060405280519060200120905090565b612848610b88565b61287e576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612888610b88565b156128bf576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080836001016000848152602001908152602001600020541415905092915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115612965576000600385925092509250612a0f565b60006001888888886040516000815260200160405260405161298a9493929190614017565b6020604051602081039080840390855afa1580156129ac573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612a0057600060016000801b93509350935050612a0f565b8060008060001b935093509350505b9450945094915050565b60006003811115612a2d57612a2c61405c565b5b826003811115612a4057612a3f61405c565b5b0315612b795760016003811115612a5a57612a5961405c565b5b826003811115612a6d57612a6c61405c565b5b03612aa4576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612ab857612ab761405c565b5b826003811115612acb57612aca61405c565b5b03612b10578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612b079190613274565b60405180910390fd5b600380811115612b2357612b2261405c565b5b826003811115612b3657612b3561405c565b5b03612b7857806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401612b6f919061320a565b60405180910390fd5b5b5050565b6000612b8983836128c1565b612be2578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612be7565b600090505b92915050565b612bf5612df4565b565b612bff612df4565b565b612c09612df4565b6000612c13611dc7565b905060008160000160006101000a81548160ff02191690831515021790555050565b6000612c3f612384565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015612c8d5750825b9050600060018367ffffffffffffffff16148015612cc2575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612cd0575080155b15612d07576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315612d575760018560000160086101000a81548160ff0219169083151502179055505b612d646000801b87611a0a565b50612d8f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a87611a0a565b508315612dec5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051612de39190613c05565b60405180910390a15b505050505050565b612dfc612f81565b612e32576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612e3c612df4565b6000612e46611e61565b905082816002019081612e59919061422d565b5081816003019081612e6b919061422d565b506000801b81600001819055506000801b8160010181905550505050565b600080612e94611e61565b90506000612ea0611e89565b9050600081511115612ebd57808051906020012092505050612f02565b6000826000015490506000801b8114612edb57809350505050612f02565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b600080612f10611e61565b90506000612f1c611f2a565b9050600081511115612f3957808051906020012092505050612f7e565b6000826001015490506000801b8114612f5757809350505050612f7e565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b6000612f8b612384565b60000160089054906101000a900460ff16905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612fea81612fb5565b8114612ff557600080fd5b50565b60008135905061300781612fe1565b92915050565b60006020828403121561302357613022612fab565b5b600061303184828501612ff8565b91505092915050565b60008115159050919050565b61304f8161303a565b82525050565b600060208201905061306a6000830184613046565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061309b82613070565b9050919050565b6130ab81613090565b81146130b657600080fd5b50565b6000813590506130c8816130a2565b92915050565b6000819050919050565b6130e1816130ce565b81146130ec57600080fd5b50565b6000813590506130fe816130d8565b92915050565b6000806000806080858703121561311e5761311d612fab565b5b600061312c878288016130b9565b945050602061313d878288016130b9565b935050604061314e878288016130b9565b925050606061315f878288016130ef565b91505092959194509250565b60006020828403121561318157613180612fab565b5b600061318f848285016130b9565b91505092915050565b6000819050919050565b6131ab81613198565b81146131b657600080fd5b50565b6000813590506131c8816131a2565b92915050565b6000602082840312156131e4576131e3612fab565b5b60006131f2848285016131b9565b91505092915050565b61320481613198565b82525050565b600060208201905061321f60008301846131fb565b92915050565b6000806040838503121561323c5761323b612fab565b5b600061324a858286016131b9565b925050602061325b858286016130b9565b9150509250929050565b61326e816130ce565b82525050565b60006020820190506132896000830184613265565b92915050565b600080604083850312156132a6576132a5612fab565b5b60006132b4858286016130b9565b92505060206132c5858286016130ef565b9150509250929050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b613304816132cf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613344578082015181840152602081019050613329565b60008484015250505050565b6000601f19601f8301169050919050565b600061336c8261330a565b6133768185613315565b9350613386818560208601613326565b61338f81613350565b840191505092915050565b6133a381613090565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6133de816130ce565b82525050565b60006133f083836133d5565b60208301905092915050565b6000602082019050919050565b6000613414826133a9565b61341e81856133b4565b9350613429836133c5565b8060005b8381101561345a57815161344188826133e4565b975061344c836133fc565b92505060018101905061342d565b5085935050505092915050565b600060e08201905061347c600083018a6132fb565b818103602083015261348e8189613361565b905081810360408301526134a28188613361565b90506134b16060830187613265565b6134be608083018661339a565b6134cb60a08301856131fb565b81810360c08301526134dd8184613409565b905098975050505050505050565b60008060006060848603121561350457613503612fab565b5b6000613512868287016130b9565b9350506020613523868287016130b9565b9250506040613534868287016130b9565b9150509250925092565b600080fd5b600060a082840312156135595761355861353e565b5b81905092915050565b6000806000806000610120868803121561357f5761357e612fab565b5b600061358d888289016130b9565b955050602061359e888289016130b9565b94505060406135af888289016130ef565b93505060606135c0888289016131b9565b92505060806135d188828901613543565b9150509295509295909350565b6000806000606084860312156135f7576135f6612fab565b5b6000613605868287016130b9565b9350506020613616868287016130b9565b9250506040613627868287016130ef565b9150509250925092565b60006020828403121561364757613646612fab565b5b6000613655848285016130ef565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6136a082613350565b810181811067ffffffffffffffff821117156136bf576136be613668565b5b80604052505050565b60006136d2612fa1565b90506136de8282613697565b919050565b600067ffffffffffffffff8211156136fe576136fd613668565b5b61370782613350565b9050602081019050919050565b82818337600083830152505050565b6000613736613731846136e3565b6136c8565b90508281526020810184848401111561375257613751613663565b5b61375d848285613714565b509392505050565b600082601f83011261377a5761377961365e565b5b813561378a848260208601613723565b91505092915050565b600080604083850312156137aa576137a9612fab565b5b60006137b8858286016130b9565b925050602083013567ffffffffffffffff8111156137d9576137d8612fb0565b5b6137e585828601613765565b9150509250929050565b6000806040838503121561380657613805612fab565b5b6000613814858286016130b9565b9250506020613825858286016130b9565b9150509250929050565b7f4f776e61626c655061757361626c653a206163636573732064656e6965640000600082015250565b6000613865601e83613315565b91506138708261382f565b602082019050919050565b6000602082019050818103600083015261389481613858565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138d5826130ce565b91506138e0836130ce565b92508282019050808211156138f8576138f761389b565b5b92915050565b7f4549503731323a20556e696e697469616c697a65640000000000000000000000600082015250565b6000613934601583613315565b915061393f826138fe565b602082019050919050565b6000602082019050818103600083015261396381613927565b9050919050565b600060c08201905061397f60008301896131fb565b61398c602083018861339a565b613999604083018761339a565b6139a66060830186613265565b6139b360808301856131fb565b6139c060a0830184613265565b979650505050505050565b600060ff82169050919050565b6139e1816139cb565b81146139ec57600080fd5b50565b6000813590506139fe816139d8565b92915050565b600060208284031215613a1a57613a19612fab565b5b6000613a28848285016139ef565b91505092915050565b6000604082019050613a46600083018561339a565b613a53602083018461339a565b9392505050565b6000613a65826130ce565b9150613a70836130ce565b9250828203905081811115613a8857613a8761389b565b5b92915050565b600081905092915050565b50565b6000613aa9600083613a8e565b9150613ab482613a99565b600082019050919050565b6000613aca82613a9c565b9150819050919050565b7f5661756c743a204661696c656420746f2073656e642045746865720000000000600082015250565b6000613b0a601b83613315565b9150613b1582613ad4565b602082019050919050565b60006020820190508181036000830152613b3981613afd565b9050919050565b7f4d6f726967696e4170703a20696e76616c69642076616c756521000000000000600082015250565b6000613b76601a83613315565b9150613b8182613b40565b602082019050919050565b60006020820190508181036000830152613ba581613b69565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000613bef613bea613be584613bac565b613bca565b613bb6565b9050919050565b613bff81613bd4565b82525050565b6000602082019050613c1a6000830184613bf6565b92915050565b6000606082019050613c35600083018661339a565b613c426020830185613265565b613c4f6040830184613265565b949350505050565b6000602082019050613c6c600083018461339a565b92915050565b6000606082019050613c87600083018661339a565b613c94602083018561339a565b613ca16040830184613265565b949350505050565b600081519050919050565b6000613cbf82613ca9565b613cc98185613a8e565b9350613cd9818560208601613326565b80840191505092915050565b6000613cf18284613cb4565b915081905092915050565b613d058161303a565b8114613d1057600080fd5b50565b600081519050613d2281613cfc565b92915050565b600060208284031215613d3e57613d3d612fab565b5b6000613d4c84828501613d13565b91505092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000613db1603183613315565b9150613dbc82613d55565b604082019050919050565b60006020820190508181036000830152613de081613da4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613e2e57607f821691505b602082108103613e4157613e40613de7565b5b50919050565b6000604082019050613e5c600083018561339a565b613e696020830184613265565b9392505050565b7f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000613ecc602d83613315565b9150613ed782613e70565b604082019050919050565b60006020820190508181036000830152613efb81613ebf565b9050919050565b6000608082019050613f17600083018761339a565b613f24602083018661339a565b613f316040830185613265565b613f3e6060830184613265565b95945050505050565b6000608082019050613f5c600083018761339a565b613f69602083018661339a565b613f76604083018561339a565b613f836060830184613265565b95945050505050565b6000604082019050613fa1600083018561339a565b613fae60208301846131fb565b9392505050565b600060a082019050613fca60008301886131fb565b613fd760208301876131fb565b613fe460408301866131fb565b613ff16060830185613265565b613ffe608083018461339a565b9695505050505050565b614011816139cb565b82525050565b600060808201905061402c60008301876131fb565b6140396020830186614008565b61404660408301856131fb565b61405360608301846131fb565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026140ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826140b0565b6140f786836140b0565b95508019841693508086168417925050509392505050565b600061412a614125614120846130ce565b613bca565b6130ce565b9050919050565b6000819050919050565b6141448361410f565b61415861415082614131565b8484546140bd565b825550505050565b600090565b61416d614160565b61417881848461413b565b505050565b5b8181101561419c57614191600082614165565b60018101905061417e565b5050565b601f8211156141e1576141b28161408b565b6141bb846140a0565b810160208510156141ca578190505b6141de6141d6856140a0565b83018261417d565b50505b505050565b600082821c905092915050565b6000614204600019846008026141e6565b1980831691505092915050565b600061421d83836141f3565b9150826002028217905092915050565b6142368261330a565b67ffffffffffffffff81111561424f5761424e613668565b5b6142598254613e16565b6142648282856141a0565b600060209050601f8311600181146142975760008415614285578287015190505b61428f8582614211565b8655506142f7565b601f1984166142a58661408b565b60005b828110156142cd578489015182556001820191506020850194506020810190506142a8565b868310156142ea57848901516142e6601f8916826141f3565b8355505b6001600288020188555050505b50505050505056fea26469706673582212203afceafcdeadf1e9dbebf358c3d25952c4f86a694bfc6806320676566b6df42f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82DC1EC4 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBEABACC8 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xF2407CA4 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF399E22E EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x714 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xBEABACC8 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xE1F21C67 EQ PUSH2 0x65A JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xA1B996C1 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5A0 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x82DC1EC4 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4CC JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x47E7EF24 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x6B2C0F55 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x463 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x3D538ECF EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x46FBF68E EQ PUSH2 0x3B6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x320 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x15DACBEA EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x254 JUMPI PUSH2 0x1D8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x300D JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH2 0x903 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x328F JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0xBAD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0xC17 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x524 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x34EB JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x3562 JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x681 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AC PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x3631 JUMP JUMPDEST PUSH2 0x14E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x157A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x37EF JUMP JUMPDEST PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7C4 JUMPI POP PUSH2 0x7C3 DUP3 PUSH2 0x17CF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D6 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E4 DUP7 DUP7 DUP4 DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x7F0 DUP7 DUP7 DUP7 DUP7 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x80A PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x116C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x818 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84A PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85A DUP3 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x863 DUP2 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x86D DUP4 DUP4 PUSH2 0x1A0A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F8 DUP3 DUP3 PUSH2 0x1B1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x92D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x963 SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x974 PUSH2 0x1C1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A2 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH2 0xD9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3A JUMPI PUSH1 0x0 CALLVALUE EQ PUSH2 0xA22 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xF30C25E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA35 DUP3 PUSH2 0xA2E PUSH2 0x1839 JUMP JUMPDEST ADDRESS DUP5 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xA7E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xE279109D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0xA8B PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x38CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB20 PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB93 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xBD7 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH2 0x116C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBE7 PUSH1 0x0 DUP1 SHL DUP3 PUSH2 0x851 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC14 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH2 0x851 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC41 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC88 PUSH2 0x1DEF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0xCA0 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0xCBE JUMPI POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0xCFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP1 PUSH2 0x394A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD05 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0xD0D PUSH2 0x1F2A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0x3668 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD5C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDA7 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1D SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF3A DUP3 PUSH1 0x3 PUSH2 0x1FCB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0xF7C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x591145FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xFC9 JUMPI DUP1 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH32 0x891870A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x1BCD16601E2086D958CF8198037B6718BDC081870F18734581AE91EE73069E95 DUP3 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x101C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x396A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x103F DUP3 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1069 DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST DUP7 PUSH1 0x20 ADD CALLDATALOAD DUP8 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1FFC JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x107E SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1101 JUMPI DUP1 DUP5 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6BABB09700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F8 SWAP3 SWAP2 SWAP1 PUSH2 0x3A31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1115 DUP6 PUSH1 0x3 PUSH2 0x202C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1136 DUP9 DUP6 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x112D SWAP2 SWAP1 PUSH2 0x316B JUMP JUMPDEST DUP10 DUP10 PUSH1 0x1 PUSH2 0x2043 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1152 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP PUSH2 0x1160 DUP6 DUP3 DUP7 DUP7 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1175 DUP3 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1188 DUP4 DUP4 PUSH2 0x1B1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 LT ISZERO PUSH2 0x11D4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xE279109D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11E1 PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12A0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xE279109D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x12AC PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x3A5A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141F JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1393 SWAP1 PUSH2 0x3ABF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1419 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP1 PUSH2 0x3B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x142B JUMP JUMPDEST PUSH2 0x142A DUP5 DUP5 DUP5 PUSH2 0x224E JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1488 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14A1 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP PUSH2 0x14B1 DUP6 DUP3 DUP7 DUP7 PUSH1 0x1 PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x14EE PUSH1 0x0 DUP1 SHL CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1524 SWAP1 PUSH2 0x387B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1567 SWAP1 PUSH2 0x3B8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1584 PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x15D2 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1607 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1615 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x169C JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x16A5 DUP8 PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x16E4 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x255B JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1740 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1737 SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184E DUP6 DUP6 DUP6 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x18D1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x18C0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xCF7E367800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18D0 DUP6 DUP6 DUP6 DUP6 DUP6 SUB PUSH1 0x0 PUSH2 0x2043 JUMP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xF4D2BE2900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1941 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE0823DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B3 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2571 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A07 DUP2 PUSH2 0x1A02 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x278B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A15 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP PUSH2 0x1A21 DUP5 DUP5 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x1AFF JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A9B PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 PUSH2 0x27DC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B25 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP PUSH2 0x1B31 DUP5 DUP5 PUSH2 0xD9C JUMP JUMPDEST ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1BAC PUSH2 0x1839 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C16 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C24 PUSH2 0x2840 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2E PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1C76 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C83 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1CC2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x3CE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D4D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1D80 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1D7F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1DBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP1 PUSH2 0x3DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DF7 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E01 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E49 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1E95 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1EA6 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1ED2 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F36 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1F47 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F73 SWAP1 PUSH2 0x3E16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FC0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F95 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FC0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FA3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x28C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF5 PUSH2 0x1FEF PUSH2 0x1B0B JUMP JUMPDEST DUP4 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x200E DUP9 DUP9 DUP9 DUP9 PUSH2 0x2925 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x201E DUP3 DUP3 PUSH2 0x2A19 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203B DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xD5D258FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2127 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xABBBE2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211E SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2247 JUMPI DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91ED140D4EF0D36CFE0E48D6E199657E7295B810BDED34C1C95874B2B676E06D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2280 SWAP3 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x22CE SWAP2 SWAP1 PUSH2 0x3CE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x230B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x233E JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x233D JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x233C SWAP2 SWAP1 PUSH2 0x3D28 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x237D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2374 SWAP1 PUSH2 0x3EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B6 PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2404 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2439 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2447 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x247E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x24CE JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x24D6 PUSH2 0x2BED JUMP JUMPDEST PUSH2 0x24DE PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x24E6 PUSH2 0x2C01 JUMP JUMPDEST PUSH2 0x24EF DUP7 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2553 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2563 PUSH2 0x2DF4 JUMP JUMPDEST PUSH2 0x256D DUP3 DUP3 PUSH2 0x2E34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x263C JUMPI DUP5 DUP5 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH32 0x680F1B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2633 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xC4298A5BEFFBB92832ADEF4BDE23A2148EEA5117FEE88FD06E963DDCB4A523F4 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x277C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2795 DUP3 DUP3 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x27D8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27CF SWAP3 SWAP2 SWAP1 PUSH2 0x3F8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x2807 PUSH2 0x2E89 JUMP JUMPDEST PUSH2 0x280F PUSH2 0x2F05 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2825 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2848 PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x287E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2888 PUSH2 0xB88 JUMP JUMPDEST ISZERO PUSH2 0x28BF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x298A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4017 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A00 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2B79 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A5A JUMPI PUSH2 0x2A59 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A6D JUMPI PUSH2 0x2A6C PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2AA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2AB8 JUMPI PUSH2 0x2AB7 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2ACB JUMPI PUSH2 0x2ACA PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2B10 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B07 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2B22 PUSH2 0x405C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2B36 JUMPI PUSH2 0x2B35 PUSH2 0x405C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2B78 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6F SWAP2 SWAP1 PUSH2 0x320A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B89 DUP4 DUP4 PUSH2 0x28C1 JUMP JUMPDEST PUSH2 0x2BE2 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BF5 PUSH2 0x2DF4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BFF PUSH2 0x2DF4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C09 PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C13 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3F PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2C8D JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2CC2 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2CD0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2D07 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2D57 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x2D64 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x1A0A JUMP JUMPDEST POP PUSH2 0x2D8F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP8 PUSH2 0x1A0A JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x2DEC JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2DE3 SWAP2 SWAP1 PUSH2 0x3C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2DFC PUSH2 0x2F81 JUMP JUMPDEST PUSH2 0x2E32 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2E3C PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E46 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2E59 SWAP2 SWAP1 PUSH2 0x422D JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2E6B SWAP2 SWAP1 PUSH2 0x422D JUMP JUMPDEST POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E94 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2EA0 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2EBD JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x2F02 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2EDB JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x2F02 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F10 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F1C PUSH2 0x1F2A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2F39 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x2F7E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2F57 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x2F7E JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8B PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FEA DUP2 PUSH2 0x2FB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3007 DUP2 PUSH2 0x2FE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3023 JUMPI PUSH2 0x3022 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP5 DUP3 DUP6 ADD PUSH2 0x2FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x304F DUP2 PUSH2 0x303A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x306A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3046 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309B DUP3 PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30AB DUP2 PUSH2 0x3090 JUMP JUMPDEST DUP2 EQ PUSH2 0x30B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30C8 DUP2 PUSH2 0x30A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E1 DUP2 PUSH2 0x30CE JUMP JUMPDEST DUP2 EQ PUSH2 0x30EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30FE DUP2 PUSH2 0x30D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x311E JUMPI PUSH2 0x311D PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x312C DUP8 DUP3 DUP9 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x313D DUP8 DUP3 DUP9 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x314E DUP8 DUP3 DUP9 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x315F DUP8 DUP3 DUP9 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3181 JUMPI PUSH2 0x3180 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318F DUP5 DUP3 DUP6 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31AB DUP2 PUSH2 0x3198 JUMP JUMPDEST DUP2 EQ PUSH2 0x31B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x31C8 DUP2 PUSH2 0x31A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E4 JUMPI PUSH2 0x31E3 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31F2 DUP5 DUP3 DUP6 ADD PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3204 DUP2 PUSH2 0x3198 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x321F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x323C JUMPI PUSH2 0x323B PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x324A DUP6 DUP3 DUP7 ADD PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x325B DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x326E DUP2 PUSH2 0x30CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3289 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32A6 JUMPI PUSH2 0x32A5 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32B4 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x32C5 DUP6 DUP3 DUP7 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3304 DUP2 PUSH2 0x32CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3344 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3329 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336C DUP3 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x3376 DUP2 DUP6 PUSH2 0x3315 JUMP JUMPDEST SWAP4 POP PUSH2 0x3386 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3326 JUMP JUMPDEST PUSH2 0x338F DUP2 PUSH2 0x3350 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x33A3 DUP2 PUSH2 0x3090 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33DE DUP2 PUSH2 0x30CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F0 DUP4 DUP4 PUSH2 0x33D5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3414 DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH2 0x341E DUP2 DUP6 PUSH2 0x33B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3429 DUP4 PUSH2 0x33C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x345A JUMPI DUP2 MLOAD PUSH2 0x3441 DUP9 DUP3 PUSH2 0x33E4 JUMP JUMPDEST SWAP8 POP PUSH2 0x344C DUP4 PUSH2 0x33FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x342D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x347C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x32FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x348E DUP2 DUP10 PUSH2 0x3361 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x34A2 DUP2 DUP9 PUSH2 0x3361 JUMP JUMPDEST SWAP1 POP PUSH2 0x34B1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x34BE PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x34CB PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x31FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x34DD DUP2 DUP5 PUSH2 0x3409 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3504 JUMPI PUSH2 0x3503 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3512 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3523 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3534 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3559 JUMPI PUSH2 0x3558 PUSH2 0x353E JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x357F JUMPI PUSH2 0x357E PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x358D DUP9 DUP3 DUP10 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x359E DUP9 DUP3 DUP10 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x35AF DUP9 DUP3 DUP10 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x35C0 DUP9 DUP3 DUP10 ADD PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x35D1 DUP9 DUP3 DUP10 ADD PUSH2 0x3543 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35F7 JUMPI PUSH2 0x35F6 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3605 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3616 DUP7 DUP3 DUP8 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3627 DUP7 DUP3 DUP8 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3647 JUMPI PUSH2 0x3646 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3655 DUP5 DUP3 DUP6 ADD PUSH2 0x30EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x36A0 DUP3 PUSH2 0x3350 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x36BF JUMPI PUSH2 0x36BE PUSH2 0x3668 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D2 PUSH2 0x2FA1 JUMP JUMPDEST SWAP1 POP PUSH2 0x36DE DUP3 DUP3 PUSH2 0x3697 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x36FE JUMPI PUSH2 0x36FD PUSH2 0x3668 JUMP JUMPDEST JUMPDEST PUSH2 0x3707 DUP3 PUSH2 0x3350 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3736 PUSH2 0x3731 DUP5 PUSH2 0x36E3 JUMP JUMPDEST PUSH2 0x36C8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3752 JUMPI PUSH2 0x3751 PUSH2 0x3663 JUMP JUMPDEST JUMPDEST PUSH2 0x375D DUP5 DUP3 DUP6 PUSH2 0x3714 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x377A JUMPI PUSH2 0x3779 PUSH2 0x365E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x378A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3723 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37AA JUMPI PUSH2 0x37A9 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B8 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37D9 JUMPI PUSH2 0x37D8 PUSH2 0x2FB0 JUMP JUMPDEST JUMPDEST PUSH2 0x37E5 DUP6 DUP3 DUP7 ADD PUSH2 0x3765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3806 JUMPI PUSH2 0x3805 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3814 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3825 DUP6 DUP3 DUP7 ADD PUSH2 0x30B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C655061757361626C653A206163636573732064656E6965640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3865 PUSH1 0x1E DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3870 DUP3 PUSH2 0x382F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3894 DUP2 PUSH2 0x3858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38D5 DUP3 PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP PUSH2 0x38E0 DUP4 PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x38F8 JUMPI PUSH2 0x38F7 PUSH2 0x389B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3934 PUSH1 0x15 DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x393F DUP3 PUSH2 0x38FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3963 DUP2 PUSH2 0x3927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x397F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x398C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3999 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x39A6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x39B3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x39C0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E1 DUP2 PUSH2 0x39CB JUMP JUMPDEST DUP2 EQ PUSH2 0x39EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39FE DUP2 PUSH2 0x39D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A1A JUMPI PUSH2 0x3A19 PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A28 DUP5 DUP3 DUP6 ADD PUSH2 0x39EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3A53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x339A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A65 DUP3 PUSH2 0x30CE JUMP JUMPDEST SWAP2 POP PUSH2 0x3A70 DUP4 PUSH2 0x30CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A88 JUMPI PUSH2 0x3A87 PUSH2 0x389B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA9 PUSH1 0x0 DUP4 PUSH2 0x3A8E JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB4 DUP3 PUSH2 0x3A99 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ACA DUP3 PUSH2 0x3A9C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5661756C743A204661696C656420746F2073656E642045746865720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0A PUSH1 0x1B DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B15 DUP3 PUSH2 0x3AD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B39 DUP2 PUSH2 0x3AFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F726967696E4170703A20696E76616C69642076616C756521000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B76 PUSH1 0x1A DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B81 DUP3 PUSH2 0x3B40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BA5 DUP2 PUSH2 0x3B69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BEF PUSH2 0x3BEA PUSH2 0x3BE5 DUP5 PUSH2 0x3BAC JUMP JUMPDEST PUSH2 0x3BCA JUMP JUMPDEST PUSH2 0x3BB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BFF DUP2 PUSH2 0x3BD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C35 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3C42 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3C4F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x339A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C87 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3C94 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3CA1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CBF DUP3 PUSH2 0x3CA9 JUMP JUMPDEST PUSH2 0x3CC9 DUP2 DUP6 PUSH2 0x3A8E JUMP JUMPDEST SWAP4 POP PUSH2 0x3CD9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3326 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF1 DUP3 DUP5 PUSH2 0x3CB4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D05 DUP2 PUSH2 0x303A JUMP JUMPDEST DUP2 EQ PUSH2 0x3D10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D22 DUP2 PUSH2 0x3CFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D3E JUMPI PUSH2 0x3D3D PUSH2 0x2FAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D4C DUP5 DUP3 DUP6 ADD PUSH2 0x3D13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB1 PUSH1 0x31 DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DBC DUP3 PUSH2 0x3D55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE0 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3E2E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3E41 JUMPI PUSH2 0x3E40 PUSH2 0x3DE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E5C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3E69 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E73666572206661696C656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ECC PUSH1 0x2D DUP4 PUSH2 0x3315 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ED7 DUP3 PUSH2 0x3E70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EFB DUP2 PUSH2 0x3EBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F17 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F24 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F31 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3F3E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F5C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F69 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F76 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3F83 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3265 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x339A JUMP JUMPDEST PUSH2 0x3FAE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3FCA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x3FD7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x3FE4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x3FF1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3FFE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x339A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4011 DUP2 PUSH2 0x39CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x402C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x4039 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4008 JUMP JUMPDEST PUSH2 0x4046 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x4053 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31FB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x40ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x40B0 JUMP JUMPDEST PUSH2 0x40F7 DUP7 DUP4 PUSH2 0x40B0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412A PUSH2 0x4125 PUSH2 0x4120 DUP5 PUSH2 0x30CE JUMP JUMPDEST PUSH2 0x3BCA JUMP JUMPDEST PUSH2 0x30CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4144 DUP4 PUSH2 0x410F JUMP JUMPDEST PUSH2 0x4158 PUSH2 0x4150 DUP3 PUSH2 0x4131 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x40BD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x416D PUSH2 0x4160 JUMP JUMPDEST PUSH2 0x4178 DUP2 DUP5 DUP5 PUSH2 0x413B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x419C JUMPI PUSH2 0x4191 PUSH1 0x0 DUP3 PUSH2 0x4165 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x417E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41E1 JUMPI PUSH2 0x41B2 DUP2 PUSH2 0x408B JUMP JUMPDEST PUSH2 0x41BB DUP5 PUSH2 0x40A0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x41CA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x41DE PUSH2 0x41D6 DUP6 PUSH2 0x40A0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x417D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4204 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x41E6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421D DUP4 DUP4 PUSH2 0x41F3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4236 DUP3 PUSH2 0x330A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x424F JUMPI PUSH2 0x424E PUSH2 0x3668 JUMP JUMPDEST JUMPDEST PUSH2 0x4259 DUP3 SLOAD PUSH2 0x3E16 JUMP JUMPDEST PUSH2 0x4264 DUP3 DUP3 DUP6 PUSH2 0x41A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4297 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4285 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x428F DUP6 DUP3 PUSH2 0x4211 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x42F7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x42A5 DUP7 PUSH2 0x408B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x42CD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x42A8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x42EA JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x42E6 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x41F3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xFC 0xEA 0xFC 0xDE 0xAD CALL 0xE9 0xDB 0xEB RETURN PC 0xC3 0xD2 MSIZE MSTORE 0xC4 0xF8 PUSH11 0x694BFC6806320676566B6D DELEGATECALL 0x2F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1020:2969:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3550:271:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2060:108:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1707:128:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3872:112:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6348:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;579:29:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2851:69;;;;;;;;;;;;;:::i;:::-;;2227:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6702:614:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2692:145:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2570:102:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1894:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2409:98;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2728:65;;;;;;;;;;;;;:::i;:::-;;5173:903:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3879:161:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2705:938:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2792:198:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7570:757:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1766:213;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:62:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2924:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1955:167:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2459:137:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3443:202:0;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;3550:271:17:-;3652:4;3668:15;3686:12;:10;:12::i;:::-;3668:30;;3708:43;3724:5;3730:4;3736:7;3745:5;3708:15;:43::i;:::-;3761:32;3771:5;3777:4;3783:2;3787:5;3761:9;:32::i;:::-;3810:4;3803:11;;;3550:271;;;;;;:::o;2060:108:16:-;2123:40;2362:4:0;2134:18:16;;2154:8;2123:10;:40::i;:::-;2060:108;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;1707:128:16:-;1774:4;1793:37;2362:4:0;1801:18:16;;1821:8;1793:7;:37::i;:::-;1786:44;;1707:128;;;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;3872:112:21:-;3931:7;3957:20;:18;:20::i;:::-;3950:27;;3872:112;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;579:29:16:-;;;;:::o;2851:69::-;926:32;551:24;947:10;926:7;:32::i;:::-;918:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2905:10:::1;:8;:10::i;:::-;2851:69::o:0;2227:122::-;2295:4;2314:30;551:24;2335:8;2314:7;:30::i;:::-;2307:37;;2227:122;;;:::o;6702:614:17:-;6796:1;6779:19;;:5;:19;;;6775:388;;6873:1;6860:9;:14;6857:87;;6922:6;6901:28;;;;;;;;;;;:::i;:::-;;;;;;;;6857:87;6957:75;6989:5;6996:12;:10;:12::i;:::-;7018:4;7025:6;6957:31;:75::i;:::-;6775:388;;;7079:6;7066:9;:19;7063:90;;7131:6;7112:26;;;;;;;;;;;:::i;:::-;;;;;;;;7063:90;6775:388;7252:6;7218:9;:23;7228:12;:10;:12::i;:::-;7218:23;;;;;;;;;;;;;;;:30;7242:5;7218:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;7288:12;:10;:12::i;:::-;7273:36;;7281:5;7273:36;;;7302:6;7273:36;;;;;;:::i;:::-;;;;;;;;6702:614;;:::o;2692:145:3:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;2570:102:16:-;2634:33;551:24;2658:8;2634:10;:33::i;:::-;2570:102;:::o;1894:104::-;1954:39;2362:4:0;1964:18:16;;1984:8;1954:9;:39::i;:::-;1894:104;:::o;2409:98::-;2470:32;551:24;2493:8;2470:9;:32::i;:::-;2409:98;:::o;2728:65::-;926:32;551:24;947:10;926:7;:32::i;:::-;918:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2780:8:::1;:6;:8::i;:::-;2728:65::o:0;5173:903:4:-;5271:13;5298:18;5330:21;5365:15;5394:25;5433:12;5459:27;5511:23;5537:19;:17;:19::i;:::-;5511:45;;5794:1;5777:18;;:1;:13;;;:18;:43;;;;;5819:1;5799:21;;:1;:16;;;:21;5777:43;5769:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;5908:13;:11;:13::i;:::-;5935:16;:14;:16::i;:::-;5965:13;6000:4;6027:1;6019:10;;6057:1;6043:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5857:212;;;;;;;;;;;;;;;;;;;;;;5173:903;;;;;;;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;3879:161:17:-;3973:7;3999:11;:18;4011:5;3999:18;;;;;;;;;;;;;;;:25;4018:5;3999:25;;;;;;;;;;;;;;;:34;4025:7;3999:34;;;;;;;;;;;;;;;;3992:41;;3879:161;;;;;:::o;2705:938:21:-;724:39:16;2362:4:0;732:18:16;;752:10;724:7;:39::i;:::-;716:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2925:31:21::1;2946:9;2925:11;:20;;:31;;;;:::i;:::-;2921:104;;;3004:9;2979:35;;;;;;;;;;;:::i;:::-;;;;;;;;2921:104;3056:9;:18;;;3038:15;:36;3034:115;;;3119:9;:18;;;3097:41;;;;;;;;;;;:::i;:::-;;;;;;;;3034:115;3159:18;1223:99;3218:9;:15;;;;;;;;;;:::i;:::-;3235:7;3244:5;3251:9;3262;:18;;;3190:91;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3180:102;;;;;;3159:123;;3292:12;3307:28;3324:10;3307:16;:28::i;:::-;3292:43;;3345:14;3362:58;3376:4;3382:9;:11;;;;;;;;;;:::i;:::-;3395:9;:11;;;3408:9;:11;;;3362:13;:58::i;:::-;3345:75;;3445:9;:15;;;;;;;;;;:::i;:::-;3435:25;;:6;:25;;;3431:106;;3502:6;3510:9;:15;;;;;;;;;;:::i;:::-;3483:43;;;;;;;;;;;;:::i;:::-;;;;;;;;3431:106;3546:26;3562:9;3546:11;:15;;:26;;;;:::i;:::-;;3582:54;3591:5;3598:9;:15;;;;;;;;;;:::i;:::-;3615:7;3624:5;3631:4;3582:8;:54::i;:::-;2911:732;;;2705:938:::0;;;;;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;2792:198:17:-;2875:4;2891:13;2907:12;:10;:12::i;:::-;2891:28;;2929:33;2939:5;2945;2952:2;2956:5;2929:9;:33::i;:::-;2979:4;2972:11;;;2792:198;;;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;7570:757:17:-;7659:1;7650:6;:10;7647:73;;;7702:6;7683:26;;;;;;;;;;;:::i;:::-;;;;;;;;7647:73;7729:15;7747:9;:23;7757:12;:10;:12::i;:::-;7747:23;;;;;;;;;;;;;;;:30;7771:5;7747:30;;;;;;;;;;;;;;;;7729:48;;7800:6;7790:7;:16;7787:79;;;7848:6;7829:26;;;;;;;;;;;:::i;:::-;;;;;;;;7787:79;7947:6;7913:9;:23;7923:12;:10;:12::i;:::-;7913:23;;;;;;;;;;;;;;;:30;7937:5;7913:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;7985:1;7968:19;;:5;:19;;;7964:312;;8043:9;8058:2;:7;;8073:6;8058:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8042:42;;;8106:4;8098:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;7989:164;7964:312;;;8219:46;8247:5;8254:2;8258:6;8219:27;:46::i;:::-;7964:312;8309:2;8291:29;;8302:5;8291:29;;;8313:6;8291:29;;;;;;:::i;:::-;;;;;;;;7637:690;7570:757;;;:::o;1766:213::-;1854:4;1870:13;1886:12;:10;:12::i;:::-;1870:28;;1908:43;1917:5;1923;1930:7;1939:5;1946:4;1908:8;:43::i;:::-;1968:4;1961:11;;;1766:213;;;;;:::o;513:62:16:-;551:24;513:62;:::o;2924:178::-;724:39;2362:4:0;732:18:16;;752:10;724:7;:39::i;:::-;716:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3027:1:::1;3009:15;:19;3001:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3082:15;3065:14;:32;;;;2924:178:::0;:::o;1955:167:21:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2041:40:21::1;2075:5;2041:33;:40::i;:::-;2091:24;2105:4;2091:24;;;;;;;;;;;;;;;;::::0;:13:::1;:24::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1955:167:21;;:::o;2459:137:17:-;2538:7;2564:9;:18;2574:7;2564:18;;;;;;;;;;;;;;;:25;2583:5;2564:25;;;;;;;;;;;;;;;;2557:32;;2459:137;;;;:::o;1034:146:5:-;1110:4;1148:25;1133:40;;;:11;:40;;;;1126:47;;1034:146;;;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;6009:504:17:-;6123:24;6150:31;6160:5;6166;6173:7;6150:9;:31::i;:::-;6123:58;;6215:17;6195:16;:37;6191:316;;6271:5;6252:16;:24;6248:130;;;6330:7;6339:16;6357:5;6303:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;6248:130;6419:63;6428:5;6434;6441:7;6469:5;6450:16;:24;6476:5;6419:8;:63::i;:::-;6191:316;6113:400;6009:504;;;;:::o;4414:321::-;4528:1;4512:18;;:4;:18;;;4508:86;;4580:1;4553:30;;;;;;;;;;;:::i;:::-;;;;;;;;4508:86;4621:1;4607:16;;:2;:16;;;4603:86;;4675:1;4646:32;;;;;;;;;;;:::i;:::-;;;;;;;;4603:86;4698:30;4706:5;4712:4;4718:2;4722:5;4698:7;:30::i;:::-;4414:321;;;;:::o;2787:177:0:-;2845:30;2920:28;2910:38;;2787:177;:::o;4148:103::-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;4015:109:4:-;4068:7;4094:23;:21;:23::i;:::-;4087:30;;4015:109;:::o;7892:388:0:-;7970:4;7986:30;8019:26;:24;:26::i;:::-;7986:59;;8059:22;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:1;:8;;:14;8106:4;8097:14;;;;;;;;;;;:22;;:31;8120:7;8097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8182:12;:10;:12::i;:::-;8155:40;;8173:7;8155:40;;8167:4;8155:40;;;;;;;;;;8216:4;8209:11;;;;;8055:219;8258:5;8251:12;;;7892:388;;;;;:::o;3674:178:3:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;1096:486:15:-;1314:12;1328:17;1349:5;:10;;1383;1395:4;1401:2;1405:5;1360:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:99;;;;1443:7;:57;;;;;1470:1;1455:4;:11;:16;:44;;;;1486:4;1475:24;;;;;;;;;;;;:::i;:::-;1455:44;1443:57;1422:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;1225:357;;1096:486;;;;:::o;1147:162:3:-;1200:25;1270:23;1260:33;;1147:162;:::o;3366:176::-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;2720:156:4:-;2771:23;2839:21;2829:31;;2720:156;:::o;6300:155::-;6354:13;6379:23;6405:19;:17;:19::i;:::-;6379:45;;6441:1;:7;;6434:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6300:155;:::o;6682:161::-;6739:13;6764:23;6790:19;:17;:19::i;:::-;6764:45;;6826:1;:10;;6819:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6682:161;:::o;6431:138:14:-;6511:4;6534:28;6544:3;:10;;6556:5;6534:9;:28::i;:::-;6527:35;;6431:138;;;;:::o;4946:176:4:-;5023:7;5049:66;5082:20;:18;:20::i;:::-;5104:10;5049:32;:66::i;:::-;5042:73;;4946:176;;;:::o;6803:260:9:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;5930:123:14:-;6000:4;6023:23;6028:3;:10;;6040:5;6023:4;:23::i;:::-;6016:30;;5930:123;;;;:::o;1991:459:17:-;2135:1;2118:19;;:5;:19;;;2114:89;;2189:1;2160:32;;;;;;;;;;;:::i;:::-;;;;;;;;2114:89;2235:1;2216:21;;:7;:21;;;2212:90;;2288:1;2260:31;;;;;;;;;;;:::i;:::-;;;;;;;;2212:90;2348:5;2311:11;:18;2323:5;2311:18;;;;;;;;;;;;;;;:25;2330:5;2311:25;;;;;;;;;;;;;;;:34;2337:7;2311:34;;;;;;;;;;;;;;;:42;;;;2367:9;2363:81;;;2427:5;2418:7;2397:36;;2411:5;2397:36;;;;;;;;;;;;2363:81;1991:459;;;;;:::o;652:438:15:-;832:12;846:17;867:5;:10;;901;913:2;917:5;878:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:93;;;;955:7;:57;;;;;982:1;967:4;:11;:16;:44;;;;998:4;987:24;;;;;;;;;;;;:::i;:::-;967:44;955:57;934:149;;;;;;;;;;;;:::i;:::-;;;;;;;;;755:335;;652:438;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1060:271:16:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1146:26:16::1;:24;:26::i;:::-;1178:32;:30;:32::i;:::-;1216:27;:25;:27::i;:::-;1249:51;1293:6;1249:43;:51::i;:::-;1323:3;1306:14;:20;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1060:271:16;:::o;3446:147:4:-;6931:20:1;:18;:20::i;:::-;3548:38:4::1;3572:4;3578:7;3548:23;:38::i;:::-;3446:147:::0;;:::o;5050:678:17:-;5150:19;5172:9;:15;5182:4;5172:15;;;;;;;;;;;;;;;:22;5188:5;5172:22;;;;;;;;;;;;;;;;5150:44;;5222:5;5208:11;:19;5204:114;;;5275:5;5282:4;5288:11;5301:5;5250:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5204:114;5469:5;5455:11;:19;5430:9;:15;5440:4;5430:15;;;;;;;;;;;;;;;:22;5446:5;5430:22;;;;;;;;;;;;;;;:44;;;;5655:5;5631:9;:13;5641:2;5631:13;;;;;;;;;;;;;;;:20;5645:5;5631:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;5685:36;5699:5;5705:4;5711:2;5715:5;5685:36;;;;;;;;;:::i;:::-;;;;;;;;5140:588;5050:678;;;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;4130:191:4:-;4185:7;2073:95;4243:17;:15;:17::i;:::-;4262:20;:18;:20::i;:::-;4284:13;4307:4;4221:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4211:103;;;;;;4204:110;;4130:191;:::o;3105:126:3:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;2905:128::-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;4264:129:14:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;3353:401:10:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:9:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2241:406:14:-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;813:69:2:-;6931:20:1;:18;:20::i;:::-;813:69:2:o;3302:75:0:-;6931:20:1;:18;:20::i;:::-;3302:75:0:o;1939:156:3:-;6931:20:1;:18;:20::i;:::-;2012:25:3::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;1473:176:16:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1569:38:16::1;2362:4:0;1580:18:16::0;::::1;1600:6;1569:10;:38::i;:::-;;1613:31;551:24;1637:6;1613:10;:31::i;:::-;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1473:176:16;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;3599:330:4:-;6931:20:1;:18;:20::i;:::-;3711:23:4::1;3737:19;:17;:19::i;:::-;3711:45;;3776:4;3766:1;:7;;:14;;;;;;:::i;:::-;;3803:7;3790:1;:10;;:20;;;;;;:::i;:::-;;3891:1;3875:17:::0;::::1;:1;:13;;:17;;;;3921:1;3902:20:::0;::::1;:1;:16;;:20;;;;3701:228;3599:330:::0;;:::o;7058:687::-;7108:7;7127:23;7153:19;:17;:19::i;:::-;7127:45;;7182:18;7203:13;:11;:13::i;:::-;7182:34;;7251:1;7236:4;7230:18;:22;7226:513;;;7291:4;7275:22;;;;;;7268:29;;;;;;7226:513;7551:18;7572:1;:13;;;7551:34;;7617:1;7603:15;;:10;:15;7599:130;;7645:10;7638:17;;;;;;;7599:130;7701:13;7694:20;;;;;7058:687;;:::o;7966:723::-;8019:7;8038:23;8064:19;:17;:19::i;:::-;8038:45;;8093:21;8117:16;:14;:16::i;:::-;8093:40;;8171:1;8153:7;8147:21;:25;8143:540;;;8211:7;8195:25;;;;;;8188:32;;;;;;8143:540;8483:21;8507:1;:16;;;8483:40;;8558:1;8541:18;;:13;:18;8537:136;;8586:13;8579:20;;;;;;;8537:136;8645:13;8638:20;;;;;7966:723;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:75:23:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:765::-;2467:6;2475;2483;2491;2540:3;2528:9;2519:7;2515:23;2511:33;2508:120;;;2547:79;;:::i;:::-;2508:120;2667:1;2692:53;2737:7;2728:6;2717:9;2713:22;2692:53;:::i;:::-;2682:63;;2638:117;2794:2;2820:53;2865:7;2856:6;2845:9;2841:22;2820:53;:::i;:::-;2810:63;;2765:118;2922:2;2948:53;2993:7;2984:6;2973:9;2969:22;2948:53;:::i;:::-;2938:63;;2893:118;3050:2;3076:53;3121:7;3112:6;3101:9;3097:22;3076:53;:::i;:::-;3066:63;;3021:118;2381:765;;;;;;;:::o;3152:329::-;3211:6;3260:2;3248:9;3239:7;3235:23;3231:32;3228:119;;;3266:79;;:::i;:::-;3228:119;3386:1;3411:53;3456:7;3447:6;3436:9;3432:22;3411:53;:::i;:::-;3401:63;;3357:117;3152:329;;;;:::o;3487:77::-;3524:7;3553:5;3542:16;;3487:77;;;:::o;3570:122::-;3643:24;3661:5;3643:24;:::i;:::-;3636:5;3633:35;3623:63;;3682:1;3679;3672:12;3623:63;3570:122;:::o;3698:139::-;3744:5;3782:6;3769:20;3760:29;;3798:33;3825:5;3798:33;:::i;:::-;3698:139;;;;:::o;3843:329::-;3902:6;3951:2;3939:9;3930:7;3926:23;3922:32;3919:119;;;3957:79;;:::i;:::-;3919:119;4077:1;4102:53;4147:7;4138:6;4127:9;4123:22;4102:53;:::i;:::-;4092:63;;4048:117;3843:329;;;;:::o;4178:118::-;4265:24;4283:5;4265:24;:::i;:::-;4260:3;4253:37;4178:118;;:::o;4302:222::-;4395:4;4433:2;4422:9;4418:18;4410:26;;4446:71;4514:1;4503:9;4499:17;4490:6;4446:71;:::i;:::-;4302:222;;;;:::o;4530:474::-;4598:6;4606;4655:2;4643:9;4634:7;4630:23;4626:32;4623:119;;;4661:79;;:::i;:::-;4623:119;4781:1;4806:53;4851:7;4842:6;4831:9;4827:22;4806:53;:::i;:::-;4796:63;;4752:117;4908:2;4934:53;4979:7;4970:6;4959:9;4955:22;4934:53;:::i;:::-;4924:63;;4879:118;4530:474;;;;;:::o;5010:118::-;5097:24;5115:5;5097:24;:::i;:::-;5092:3;5085:37;5010:118;;:::o;5134:222::-;5227:4;5265:2;5254:9;5250:18;5242:26;;5278:71;5346:1;5335:9;5331:17;5322:6;5278:71;:::i;:::-;5134:222;;;;:::o;5362:474::-;5430:6;5438;5487:2;5475:9;5466:7;5462:23;5458:32;5455:119;;;5493:79;;:::i;:::-;5455:119;5613:1;5638:53;5683:7;5674:6;5663:9;5659:22;5638:53;:::i;:::-;5628:63;;5584:117;5740:2;5766:53;5811:7;5802:6;5791:9;5787:22;5766:53;:::i;:::-;5756:63;;5711:118;5362:474;;;;;:::o;5842:149::-;5878:7;5918:66;5911:5;5907:78;5896:89;;5842:149;;;:::o;5997:115::-;6082:23;6099:5;6082:23;:::i;:::-;6077:3;6070:36;5997:115;;:::o;6118:99::-;6170:6;6204:5;6198:12;6188:22;;6118:99;;;:::o;6223:169::-;6307:11;6341:6;6336:3;6329:19;6381:4;6376:3;6372:14;6357:29;;6223:169;;;;:::o;6398:246::-;6479:1;6489:113;6503:6;6500:1;6497:13;6489:113;;;6588:1;6583:3;6579:11;6573:18;6569:1;6564:3;6560:11;6553:39;6525:2;6522:1;6518:10;6513:15;;6489:113;;;6636:1;6627:6;6622:3;6618:16;6611:27;6460:184;6398:246;;;:::o;6650:102::-;6691:6;6742:2;6738:7;6733:2;6726:5;6722:14;6718:28;6708:38;;6650:102;;;:::o;6758:377::-;6846:3;6874:39;6907:5;6874:39;:::i;:::-;6929:71;6993:6;6988:3;6929:71;:::i;:::-;6922:78;;7009:65;7067:6;7062:3;7055:4;7048:5;7044:16;7009:65;:::i;:::-;7099:29;7121:6;7099:29;:::i;:::-;7094:3;7090:39;7083:46;;6850:285;6758:377;;;;:::o;7141:118::-;7228:24;7246:5;7228:24;:::i;:::-;7223:3;7216:37;7141:118;;:::o;7265:114::-;7332:6;7366:5;7360:12;7350:22;;7265:114;;;:::o;7385:184::-;7484:11;7518:6;7513:3;7506:19;7558:4;7553:3;7549:14;7534:29;;7385:184;;;;:::o;7575:132::-;7642:4;7665:3;7657:11;;7695:4;7690:3;7686:14;7678:22;;7575:132;;;:::o;7713:108::-;7790:24;7808:5;7790:24;:::i;:::-;7785:3;7778:37;7713:108;;:::o;7827:179::-;7896:10;7917:46;7959:3;7951:6;7917:46;:::i;:::-;7995:4;7990:3;7986:14;7972:28;;7827:179;;;;:::o;8012:113::-;8082:4;8114;8109:3;8105:14;8097:22;;8012:113;;;:::o;8161:732::-;8280:3;8309:54;8357:5;8309:54;:::i;:::-;8379:86;8458:6;8453:3;8379:86;:::i;:::-;8372:93;;8489:56;8539:5;8489:56;:::i;:::-;8568:7;8599:1;8584:284;8609:6;8606:1;8603:13;8584:284;;;8685:6;8679:13;8712:63;8771:3;8756:13;8712:63;:::i;:::-;8705:70;;8798:60;8851:6;8798:60;:::i;:::-;8788:70;;8644:224;8631:1;8628;8624:9;8619:14;;8584:284;;;8588:14;8884:3;8877:10;;8285:608;;;8161:732;;;;:::o;8899:1215::-;9248:4;9286:3;9275:9;9271:19;9263:27;;9300:69;9366:1;9355:9;9351:17;9342:6;9300:69;:::i;:::-;9416:9;9410:4;9406:20;9401:2;9390:9;9386:18;9379:48;9444:78;9517:4;9508:6;9444:78;:::i;:::-;9436:86;;9569:9;9563:4;9559:20;9554:2;9543:9;9539:18;9532:48;9597:78;9670:4;9661:6;9597:78;:::i;:::-;9589:86;;9685:72;9753:2;9742:9;9738:18;9729:6;9685:72;:::i;:::-;9767:73;9835:3;9824:9;9820:19;9811:6;9767:73;:::i;:::-;9850;9918:3;9907:9;9903:19;9894:6;9850:73;:::i;:::-;9971:9;9965:4;9961:20;9955:3;9944:9;9940:19;9933:49;9999:108;10102:4;10093:6;9999:108;:::i;:::-;9991:116;;8899:1215;;;;;;;;;;:::o;10120:619::-;10197:6;10205;10213;10262:2;10250:9;10241:7;10237:23;10233:32;10230:119;;;10268:79;;:::i;:::-;10230:119;10388:1;10413:53;10458:7;10449:6;10438:9;10434:22;10413:53;:::i;:::-;10403:63;;10359:117;10515:2;10541:53;10586:7;10577:6;10566:9;10562:22;10541:53;:::i;:::-;10531:63;;10486:118;10643:2;10669:53;10714:7;10705:6;10694:9;10690:22;10669:53;:::i;:::-;10659:63;;10614:118;10120:619;;;;;:::o;10745:117::-;10854:1;10851;10844:12;10914:240;10995:5;11036:3;11027:6;11022:3;11018:16;11014:26;11011:113;;;11043:79;;:::i;:::-;11011:113;11142:6;11133:15;;10914:240;;;;:::o;11160:981::-;11290:6;11298;11306;11314;11322;11371:3;11359:9;11350:7;11346:23;11342:33;11339:120;;;11378:79;;:::i;:::-;11339:120;11498:1;11523:53;11568:7;11559:6;11548:9;11544:22;11523:53;:::i;:::-;11513:63;;11469:117;11625:2;11651:53;11696:7;11687:6;11676:9;11672:22;11651:53;:::i;:::-;11641:63;;11596:118;11753:2;11779:53;11824:7;11815:6;11804:9;11800:22;11779:53;:::i;:::-;11769:63;;11724:118;11881:2;11907:53;11952:7;11943:6;11932:9;11928:22;11907:53;:::i;:::-;11897:63;;11852:118;12009:3;12036:88;12116:7;12107:6;12096:9;12092:22;12036:88;:::i;:::-;12026:98;;11980:154;11160:981;;;;;;;;:::o;12147:619::-;12224:6;12232;12240;12289:2;12277:9;12268:7;12264:23;12260:32;12257:119;;;12295:79;;:::i;:::-;12257:119;12415:1;12440:53;12485:7;12476:6;12465:9;12461:22;12440:53;:::i;:::-;12430:63;;12386:117;12542:2;12568:53;12613:7;12604:6;12593:9;12589:22;12568:53;:::i;:::-;12558:63;;12513:118;12670:2;12696:53;12741:7;12732:6;12721:9;12717:22;12696:53;:::i;:::-;12686:63;;12641:118;12147:619;;;;;:::o;12772:329::-;12831:6;12880:2;12868:9;12859:7;12855:23;12851:32;12848:119;;;12886:79;;:::i;:::-;12848:119;13006:1;13031:53;13076:7;13067:6;13056:9;13052:22;13031:53;:::i;:::-;13021:63;;12977:117;12772:329;;;;:::o;13107:117::-;13216:1;13213;13206:12;13230:117;13339:1;13336;13329:12;13353:180;13401:77;13398:1;13391:88;13498:4;13495:1;13488:15;13522:4;13519:1;13512:15;13539:281;13622:27;13644:4;13622:27;:::i;:::-;13614:6;13610:40;13752:6;13740:10;13737:22;13716:18;13704:10;13701:34;13698:62;13695:88;;;13763:18;;:::i;:::-;13695:88;13803:10;13799:2;13792:22;13582:238;13539:281;;:::o;13826:129::-;13860:6;13887:20;;:::i;:::-;13877:30;;13916:33;13944:4;13936:6;13916:33;:::i;:::-;13826:129;;;:::o;13961:308::-;14023:4;14113:18;14105:6;14102:30;14099:56;;;14135:18;;:::i;:::-;14099:56;14173:29;14195:6;14173:29;:::i;:::-;14165:37;;14257:4;14251;14247:15;14239:23;;13961:308;;;:::o;14275:146::-;14372:6;14367:3;14362;14349:30;14413:1;14404:6;14399:3;14395:16;14388:27;14275:146;;;:::o;14427:425::-;14505:5;14530:66;14546:49;14588:6;14546:49;:::i;:::-;14530:66;:::i;:::-;14521:75;;14619:6;14612:5;14605:21;14657:4;14650:5;14646:16;14695:3;14686:6;14681:3;14677:16;14674:25;14671:112;;;14702:79;;:::i;:::-;14671:112;14792:54;14839:6;14834:3;14829;14792:54;:::i;:::-;14511:341;14427:425;;;;;:::o;14872:340::-;14928:5;14977:3;14970:4;14962:6;14958:17;14954:27;14944:122;;14985:79;;:::i;:::-;14944:122;15102:6;15089:20;15127:79;15202:3;15194:6;15187:4;15179:6;15175:17;15127:79;:::i;:::-;15118:88;;14934:278;14872:340;;;;:::o;15218:654::-;15296:6;15304;15353:2;15341:9;15332:7;15328:23;15324:32;15321:119;;;15359:79;;:::i;:::-;15321:119;15479:1;15504:53;15549:7;15540:6;15529:9;15525:22;15504:53;:::i;:::-;15494:63;;15450:117;15634:2;15623:9;15619:18;15606:32;15665:18;15657:6;15654:30;15651:117;;;15687:79;;:::i;:::-;15651:117;15792:63;15847:7;15838:6;15827:9;15823:22;15792:63;:::i;:::-;15782:73;;15577:288;15218:654;;;;;:::o;15878:474::-;15946:6;15954;16003:2;15991:9;15982:7;15978:23;15974:32;15971:119;;;16009:79;;:::i;:::-;15971:119;16129:1;16154:53;16199:7;16190:6;16179:9;16175:22;16154:53;:::i;:::-;16144:63;;16100:117;16256:2;16282:53;16327:7;16318:6;16307:9;16303:22;16282:53;:::i;:::-;16272:63;;16227:118;15878:474;;;;;:::o;16358:180::-;16498:32;16494:1;16486:6;16482:14;16475:56;16358:180;:::o;16544:366::-;16686:3;16707:67;16771:2;16766:3;16707:67;:::i;:::-;16700:74;;16783:93;16872:3;16783:93;:::i;:::-;16901:2;16896:3;16892:12;16885:19;;16544:366;;;:::o;16916:419::-;17082:4;17120:2;17109:9;17105:18;17097:26;;17169:9;17163:4;17159:20;17155:1;17144:9;17140:17;17133:47;17197:131;17323:4;17197:131;:::i;:::-;17189:139;;16916:419;;;:::o;17341:180::-;17389:77;17386:1;17379:88;17486:4;17483:1;17476:15;17510:4;17507:1;17500:15;17527:191;17567:3;17586:20;17604:1;17586:20;:::i;:::-;17581:25;;17620:20;17638:1;17620:20;:::i;:::-;17615:25;;17663:1;17660;17656:9;17649:16;;17684:3;17681:1;17678:10;17675:36;;;17691:18;;:::i;:::-;17675:36;17527:191;;;;:::o;17724:171::-;17864:23;17860:1;17852:6;17848:14;17841:47;17724:171;:::o;17901:366::-;18043:3;18064:67;18128:2;18123:3;18064:67;:::i;:::-;18057:74;;18140:93;18229:3;18140:93;:::i;:::-;18258:2;18253:3;18249:12;18242:19;;17901:366;;;:::o;18273:419::-;18439:4;18477:2;18466:9;18462:18;18454:26;;18526:9;18520:4;18516:20;18512:1;18501:9;18497:17;18490:47;18554:131;18680:4;18554:131;:::i;:::-;18546:139;;18273:419;;;:::o;18698:775::-;18931:4;18969:3;18958:9;18954:19;18946:27;;18983:71;19051:1;19040:9;19036:17;19027:6;18983:71;:::i;:::-;19064:72;19132:2;19121:9;19117:18;19108:6;19064:72;:::i;:::-;19146;19214:2;19203:9;19199:18;19190:6;19146:72;:::i;:::-;19228;19296:2;19285:9;19281:18;19272:6;19228:72;:::i;:::-;19310:73;19378:3;19367:9;19363:19;19354:6;19310:73;:::i;:::-;19393;19461:3;19450:9;19446:19;19437:6;19393:73;:::i;:::-;18698:775;;;;;;;;;:::o;19479:86::-;19514:7;19554:4;19547:5;19543:16;19532:27;;19479:86;;;:::o;19571:118::-;19642:22;19658:5;19642:22;:::i;:::-;19635:5;19632:33;19622:61;;19679:1;19676;19669:12;19622:61;19571:118;:::o;19695:135::-;19739:5;19777:6;19764:20;19755:29;;19793:31;19818:5;19793:31;:::i;:::-;19695:135;;;;:::o;19836:325::-;19893:6;19942:2;19930:9;19921:7;19917:23;19913:32;19910:119;;;19948:79;;:::i;:::-;19910:119;20068:1;20093:51;20136:7;20127:6;20116:9;20112:22;20093:51;:::i;:::-;20083:61;;20039:115;19836:325;;;;:::o;20167:332::-;20288:4;20326:2;20315:9;20311:18;20303:26;;20339:71;20407:1;20396:9;20392:17;20383:6;20339:71;:::i;:::-;20420:72;20488:2;20477:9;20473:18;20464:6;20420:72;:::i;:::-;20167:332;;;;;:::o;20505:194::-;20545:4;20565:20;20583:1;20565:20;:::i;:::-;20560:25;;20599:20;20617:1;20599:20;:::i;:::-;20594:25;;20643:1;20640;20636:9;20628:17;;20667:1;20661:4;20658:11;20655:37;;;20672:18;;:::i;:::-;20655:37;20505:194;;;;:::o;20705:147::-;20806:11;20843:3;20828:18;;20705:147;;;;:::o;20858:114::-;;:::o;20978:398::-;21137:3;21158:83;21239:1;21234:3;21158:83;:::i;:::-;21151:90;;21250:93;21339:3;21250:93;:::i;:::-;21368:1;21363:3;21359:11;21352:18;;20978:398;;;:::o;21382:379::-;21566:3;21588:147;21731:3;21588:147;:::i;:::-;21581:154;;21752:3;21745:10;;21382:379;;;:::o;21767:177::-;21907:29;21903:1;21895:6;21891:14;21884:53;21767:177;:::o;21950:366::-;22092:3;22113:67;22177:2;22172:3;22113:67;:::i;:::-;22106:74;;22189:93;22278:3;22189:93;:::i;:::-;22307:2;22302:3;22298:12;22291:19;;21950:366;;;:::o;22322:419::-;22488:4;22526:2;22515:9;22511:18;22503:26;;22575:9;22569:4;22565:20;22561:1;22550:9;22546:17;22539:47;22603:131;22729:4;22603:131;:::i;:::-;22595:139;;22322:419;;;:::o;22747:176::-;22887:28;22883:1;22875:6;22871:14;22864:52;22747:176;:::o;22929:366::-;23071:3;23092:67;23156:2;23151:3;23092:67;:::i;:::-;23085:74;;23168:93;23257:3;23168:93;:::i;:::-;23286:2;23281:3;23277:12;23270:19;;22929:366;;;:::o;23301:419::-;23467:4;23505:2;23494:9;23490:18;23482:26;;23554:9;23548:4;23544:20;23540:1;23529:9;23525:17;23518:47;23582:131;23708:4;23582:131;:::i;:::-;23574:139;;23301:419;;;:::o;23726:85::-;23771:7;23800:5;23789:16;;23726:85;;;:::o;23817:101::-;23853:7;23893:18;23886:5;23882:30;23871:41;;23817:101;;;:::o;23924:60::-;23952:3;23973:5;23966:12;;23924:60;;;:::o;23990:156::-;24047:9;24080:60;24097:42;24106:32;24132:5;24106:32;:::i;:::-;24097:42;:::i;:::-;24080:60;:::i;:::-;24067:73;;23990:156;;;:::o;24152:145::-;24246:44;24284:5;24246:44;:::i;:::-;24241:3;24234:57;24152:145;;:::o;24303:236::-;24403:4;24441:2;24430:9;24426:18;24418:26;;24454:78;24529:1;24518:9;24514:17;24505:6;24454:78;:::i;:::-;24303:236;;;;:::o;24545:442::-;24694:4;24732:2;24721:9;24717:18;24709:26;;24745:71;24813:1;24802:9;24798:17;24789:6;24745:71;:::i;:::-;24826:72;24894:2;24883:9;24879:18;24870:6;24826:72;:::i;:::-;24908;24976:2;24965:9;24961:18;24952:6;24908:72;:::i;:::-;24545:442;;;;;;:::o;24993:222::-;25086:4;25124:2;25113:9;25109:18;25101:26;;25137:71;25205:1;25194:9;25190:17;25181:6;25137:71;:::i;:::-;24993:222;;;;:::o;25221:442::-;25370:4;25408:2;25397:9;25393:18;25385:26;;25421:71;25489:1;25478:9;25474:17;25465:6;25421:71;:::i;:::-;25502:72;25570:2;25559:9;25555:18;25546:6;25502:72;:::i;:::-;25584;25652:2;25641:9;25637:18;25628:6;25584:72;:::i;:::-;25221:442;;;;;;:::o;25669:98::-;25720:6;25754:5;25748:12;25738:22;;25669:98;;;:::o;25773:386::-;25877:3;25905:38;25937:5;25905:38;:::i;:::-;25959:88;26040:6;26035:3;25959:88;:::i;:::-;25952:95;;26056:65;26114:6;26109:3;26102:4;26095:5;26091:16;26056:65;:::i;:::-;26146:6;26141:3;26137:16;26130:23;;25881:278;25773:386;;;;:::o;26165:271::-;26295:3;26317:93;26406:3;26397:6;26317:93;:::i;:::-;26310:100;;26427:3;26420:10;;26165:271;;;;:::o;26442:116::-;26512:21;26527:5;26512:21;:::i;:::-;26505:5;26502:32;26492:60;;26548:1;26545;26538:12;26492:60;26442:116;:::o;26564:137::-;26618:5;26649:6;26643:13;26634:22;;26665:30;26689:5;26665:30;:::i;:::-;26564:137;;;;:::o;26707:345::-;26774:6;26823:2;26811:9;26802:7;26798:23;26794:32;26791:119;;;26829:79;;:::i;:::-;26791:119;26949:1;26974:61;27027:7;27018:6;27007:9;27003:22;26974:61;:::i;:::-;26964:71;;26920:125;26707:345;;;;:::o;27058:236::-;27198:34;27194:1;27186:6;27182:14;27175:58;27267:19;27262:2;27254:6;27250:15;27243:44;27058:236;:::o;27300:366::-;27442:3;27463:67;27527:2;27522:3;27463:67;:::i;:::-;27456:74;;27539:93;27628:3;27539:93;:::i;:::-;27657:2;27652:3;27648:12;27641:19;;27300:366;;;:::o;27672:419::-;27838:4;27876:2;27865:9;27861:18;27853:26;;27925:9;27919:4;27915:20;27911:1;27900:9;27896:17;27889:47;27953:131;28079:4;27953:131;:::i;:::-;27945:139;;27672:419;;;:::o;28097:180::-;28145:77;28142:1;28135:88;28242:4;28239:1;28232:15;28266:4;28263:1;28256:15;28283:320;28327:6;28364:1;28358:4;28354:12;28344:22;;28411:1;28405:4;28401:12;28432:18;28422:81;;28488:4;28480:6;28476:17;28466:27;;28422:81;28550:2;28542:6;28539:14;28519:18;28516:38;28513:84;;28569:18;;:::i;:::-;28513:84;28334:269;28283:320;;;:::o;28609:332::-;28730:4;28768:2;28757:9;28753:18;28745:26;;28781:71;28849:1;28838:9;28834:17;28825:6;28781:71;:::i;:::-;28862:72;28930:2;28919:9;28915:18;28906:6;28862:72;:::i;:::-;28609:332;;;;;:::o;28947:232::-;29087:34;29083:1;29075:6;29071:14;29064:58;29156:15;29151:2;29143:6;29139:15;29132:40;28947:232;:::o;29185:366::-;29327:3;29348:67;29412:2;29407:3;29348:67;:::i;:::-;29341:74;;29424:93;29513:3;29424:93;:::i;:::-;29542:2;29537:3;29533:12;29526:19;;29185:366;;;:::o;29557:419::-;29723:4;29761:2;29750:9;29746:18;29738:26;;29810:9;29804:4;29800:20;29796:1;29785:9;29781:17;29774:47;29838:131;29964:4;29838:131;:::i;:::-;29830:139;;29557:419;;;:::o;29982:553::-;30159:4;30197:3;30186:9;30182:19;30174:27;;30211:71;30279:1;30268:9;30264:17;30255:6;30211:71;:::i;:::-;30292:72;30360:2;30349:9;30345:18;30336:6;30292:72;:::i;:::-;30374;30442:2;30431:9;30427:18;30418:6;30374:72;:::i;:::-;30456;30524:2;30513:9;30509:18;30500:6;30456:72;:::i;:::-;29982:553;;;;;;;:::o;30541:::-;30718:4;30756:3;30745:9;30741:19;30733:27;;30770:71;30838:1;30827:9;30823:17;30814:6;30770:71;:::i;:::-;30851:72;30919:2;30908:9;30904:18;30895:6;30851:72;:::i;:::-;30933;31001:2;30990:9;30986:18;30977:6;30933:72;:::i;:::-;31015;31083:2;31072:9;31068:18;31059:6;31015:72;:::i;:::-;30541:553;;;;;;;:::o;31100:332::-;31221:4;31259:2;31248:9;31244:18;31236:26;;31272:71;31340:1;31329:9;31325:17;31316:6;31272:71;:::i;:::-;31353:72;31421:2;31410:9;31406:18;31397:6;31353:72;:::i;:::-;31100:332;;;;;:::o;31438:664::-;31643:4;31681:3;31670:9;31666:19;31658:27;;31695:71;31763:1;31752:9;31748:17;31739:6;31695:71;:::i;:::-;31776:72;31844:2;31833:9;31829:18;31820:6;31776:72;:::i;:::-;31858;31926:2;31915:9;31911:18;31902:6;31858:72;:::i;:::-;31940;32008:2;31997:9;31993:18;31984:6;31940:72;:::i;:::-;32022:73;32090:3;32079:9;32075:19;32066:6;32022:73;:::i;:::-;31438:664;;;;;;;;:::o;32108:112::-;32191:22;32207:5;32191:22;:::i;:::-;32186:3;32179:35;32108:112;;:::o;32226:545::-;32399:4;32437:3;32426:9;32422:19;32414:27;;32451:71;32519:1;32508:9;32504:17;32495:6;32451:71;:::i;:::-;32532:68;32596:2;32585:9;32581:18;32572:6;32532:68;:::i;:::-;32610:72;32678:2;32667:9;32663:18;32654:6;32610:72;:::i;:::-;32692;32760:2;32749:9;32745:18;32736:6;32692:72;:::i;:::-;32226:545;;;;;;;:::o;32777:180::-;32825:77;32822:1;32815:88;32922:4;32919:1;32912:15;32946:4;32943:1;32936:15;32963:141;33012:4;33035:3;33027:11;;33058:3;33055:1;33048:14;33092:4;33089:1;33079:18;33071:26;;32963:141;;;:::o;33110:93::-;33147:6;33194:2;33189;33182:5;33178:14;33174:23;33164:33;;33110:93;;;:::o;33209:107::-;33253:8;33303:5;33297:4;33293:16;33272:37;;33209:107;;;;:::o;33322:393::-;33391:6;33441:1;33429:10;33425:18;33464:97;33494:66;33483:9;33464:97;:::i;:::-;33582:39;33612:8;33601:9;33582:39;:::i;:::-;33570:51;;33654:4;33650:9;33643:5;33639:21;33630:30;;33703:4;33693:8;33689:19;33682:5;33679:30;33669:40;;33398:317;;33322:393;;;;;:::o;33721:142::-;33771:9;33804:53;33822:34;33831:24;33849:5;33831:24;:::i;:::-;33822:34;:::i;:::-;33804:53;:::i;:::-;33791:66;;33721:142;;;:::o;33869:75::-;33912:3;33933:5;33926:12;;33869:75;;;:::o;33950:269::-;34060:39;34091:7;34060:39;:::i;:::-;34121:91;34170:41;34194:16;34170:41;:::i;:::-;34162:6;34155:4;34149:11;34121:91;:::i;:::-;34115:4;34108:105;34026:193;33950:269;;;:::o;34225:73::-;34270:3;34225:73;:::o;34304:189::-;34381:32;;:::i;:::-;34422:65;34480:6;34472;34466:4;34422:65;:::i;:::-;34357:136;34304:189;;:::o;34499:186::-;34559:120;34576:3;34569:5;34566:14;34559:120;;;34630:39;34667:1;34660:5;34630:39;:::i;:::-;34603:1;34596:5;34592:13;34583:22;;34559:120;;;34499:186;;:::o;34691:543::-;34792:2;34787:3;34784:11;34781:446;;;34826:38;34858:5;34826:38;:::i;:::-;34910:29;34928:10;34910:29;:::i;:::-;34900:8;34896:44;35093:2;35081:10;35078:18;35075:49;;;35114:8;35099:23;;35075:49;35137:80;35193:22;35211:3;35193:22;:::i;:::-;35183:8;35179:37;35166:11;35137:80;:::i;:::-;34796:431;;34781:446;34691:543;;;:::o;35240:117::-;35294:8;35344:5;35338:4;35334:16;35313:37;;35240:117;;;;:::o;35363:169::-;35407:6;35440:51;35488:1;35484:6;35476:5;35473:1;35469:13;35440:51;:::i;:::-;35436:56;35521:4;35515;35511:15;35501:25;;35414:118;35363:169;;;;:::o;35537:295::-;35613:4;35759:29;35784:3;35778:4;35759:29;:::i;:::-;35751:37;;35821:3;35818:1;35814:11;35808:4;35805:21;35797:29;;35537:295;;;;:::o;35837:1395::-;35954:37;35987:3;35954:37;:::i;:::-;36056:18;36048:6;36045:30;36042:56;;;36078:18;;:::i;:::-;36042:56;36122:38;36154:4;36148:11;36122:38;:::i;:::-;36207:67;36267:6;36259;36253:4;36207:67;:::i;:::-;36301:1;36325:4;36312:17;;36357:2;36349:6;36346:14;36374:1;36369:618;;;;37031:1;37048:6;37045:77;;;37097:9;37092:3;37088:19;37082:26;37073:35;;37045:77;37148:67;37208:6;37201:5;37148:67;:::i;:::-;37142:4;37135:81;37004:222;36339:887;;36369:618;36421:4;36417:9;36409:6;36405:22;36455:37;36487:4;36455:37;:::i;:::-;36514:1;36528:208;36542:7;36539:1;36536:14;36528:208;;;36621:9;36616:3;36612:19;36606:26;36598:6;36591:42;36672:1;36664:6;36660:14;36650:24;;36719:2;36708:9;36704:18;36691:31;;36565:4;36562:1;36558:12;36553:17;;36528:208;;;36764:6;36755:7;36752:19;36749:179;;;36822:9;36817:3;36813:19;36807:26;36865:48;36907:4;36899:6;36895:17;36884:9;36865:48;:::i;:::-;36857:6;36850:64;36772:156;36749:179;36974:1;36970;36962:6;36958:14;36954:22;36948:4;36941:36;36376:611;;;36339:887;;35929:1303;;;35837:1395;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","PAUSER_ROLE()":"e63ab1e9","addAdmin(address)":"70480275","addPauser(address)":"82dc1ec4","allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","balanceOf(address,address)":"f7888aec","deposit(address,uint256)":"47e7ef24","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,string)":"f399e22e","isAdmin(address)":"24d7806c","isPauser(address)":"46fbf68e","paginationSize()":"3d538ecf","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))":"a1b996c1","removeAdmin(address)":"1785f53c","removePauser(address)":"6b2c0f55","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setPaginationSize(uint256)":"f2407ca4","supportsInterface(bytes4)":"01ffc9a7","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,address,uint256)":"15dacbea","unpause()":"3f4ba83a","withdraw(address,address,uint256)":"d9caed12"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VaultAdditionalEther\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreement\",\"type\":\"bytes32\"}],\"name\":\"VaultDuplicatedAgreement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"VaultExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultInsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VaultInvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"VaultInvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"VaultInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"VaultInvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"VaultInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"VaultInvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"VaultTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paginationSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreement\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.PermitSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_paginationSize\",\"type\":\"uint256\"}],\"name\":\"setPaginationSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Inherits from Vault, EIP712Upgradeable, IVaultPermit, and OwnablePausableUpgradeable for comprehensive functionality.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Useful for off-chain services that need to construct and sign EIP-712 typed data.\",\"returns\":{\"_0\":\"The current domain separator.\"}},\"addAdmin(address)\":{\"details\":\"See {IOwnablePausable-addAdmin}.\"},\"addPauser(address)\":{\"details\":\"See {IOwnablePausable-addPauser}.\"},\"allowance(address,address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"deposit(address,uint256)\":{\"details\":\"Allows a user to deposit ERC20 tokens or Ether into the vault.\",\"params\":{\"token\":\"The address of the ERC20 token contract, or the zero address for Ether.\"}},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,string)\":{\"params\":{\"admin\":\"The admin address for the contract.\",\"name\":\"The name used for the EIP712 domain, important for permit signing.\"}},\"isAdmin(address)\":{\"details\":\"See {IOwnablePausable-isAdmin}.\"},\"isPauser(address)\":{\"details\":\"See {IOwnablePausable-isPauser}.\"},\"pause()\":{\"details\":\"See {IOwnablePausable-pause}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))\":{\"details\":\"Validates the signature, checks for agreement uniqueness, and records the permit.\",\"params\":{\"agreement\":\"A unique identifier for the permit agreement.\",\"signature\":\"The digital signature provided by the token owner, confirming the permit.\",\"spender\":\"The address authorized to spend the tokens.\",\"token\":\"The address of the token for which the permit is created.\",\"value\":\"The amount of tokens the spender is authorized to use.\"}},\"removeAdmin(address)\":{\"details\":\"See {IOwnablePausable-removeAdmin}.\"},\"removePauser(address)\":{\"details\":\"See {IOwnablePausable-removePauser}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transfer(address,address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unpause()\":{\"details\":\"See {IOwnablePausable-unpause}.\"},\"withdraw(address,address,uint256)\":{\"details\":\"Allows a user to withdraw ERC20 tokens or Ether from the vault.\",\"params\":{\"amount\":\"The amount of tokens or Ether to withdraw.\",\"token\":\"The address of the ERC20 token contract, or the zero address for Ether.\"}}},\"title\":\"Vault Permit Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator used for EIP-712 typed data signing.\"},\"initialize(address,string)\":{\"notice\":\"Initializes the vault permit contract with an admin and a name for EIP712 domain.\"},\"permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))\":{\"notice\":\"Handles the creation of a permit for token transactions within the vault.\"}},\"notice\":\"This contract handles permits for token transactions within a vault, using EIP-712 typed data signing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/VaultPermit.sol\":\"VaultPermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]},\"contracts/abstracts/OwnablePausableUpgradeable.sol\":{\"keccak256\":\"0x7cf2d18e1415c56024f43d235b485e499694ec0f7c5f0d1543244e611bb02232\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3cce2a82c0366a2ec1e61fbc4e501e66d4e1be47e4be77dc65be87ae4bb24059\",\"dweb:/ipfs/QmYVF44GWfYSgun8XHbFE1kyhRCRE2zVrgSyn17cJ5vwRV\"]},\"contracts/abstracts/Vault.sol\":{\"keccak256\":\"0x1335dba0b2258b5d1a81091ef09d49140ba42a6d58463b46150847fe5bd25099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://628d3aa40bf65bcf80e9a673bf6c598c6fd1e5480ce65ffdfca4f8e6aefcfdfb\",\"dweb:/ipfs/QmR1BqjmLA9dhoZXuv9BKJbriz8X4TGeJa23mYHeLy7nDd\"]},\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":{\"keccak256\":\"0xd7239d747128d5b1cce36b79dcea51f1d65adad185f622198fb76b147cefdfbb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0d503748485a3085d61d608f04fe782d671c4d3d203ff5df533f1b701517a45a\",\"dweb:/ipfs/QmPrfi1Pp3YHMvuepL6eRkMyX5GgSnJhyFfZuFrYwTMaR8\"]},\"contracts/abstracts/interfaces/IOwnablePausable.sol\":{\"keccak256\":\"0xf09d7eac82289cdc30ad1ba8110d6f31ad4e912eabd19f6c54d4794202166a7f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://38a7186c816ce1d70e21c1b9a1e9ba38e23ba85678d29555b151890e467e5b58\",\"dweb:/ipfs/QmcRihMBsnS9t3TV4fFQkbpxC4eqow3LCjHKdmi7Xy3AVj\"]},\"contracts/abstracts/interfaces/IVault.sol\":{\"keccak256\":\"0x17b79ca6e927bd41b516dc63e265a6ce57acdada9938148290534477ecb73943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef517dd157ebb870e74f685351f344fc0d47836ca0507f86c75ae95387f6be64\",\"dweb:/ipfs/QmXy3eukU9auACjPQRaPP2WbaYQEu1atdHQ8oC2nxduPEH\"]},\"contracts/vault/VaultPermit.sol\":{\"keccak256\":\"0xe88495ca1d1421b22a8487a0de02d9da6d0a0f9d57c5a999155a70f4fdc30429\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcf80fe645127bf53a4470aeeaabff6c89ae7ef4d4bbc5098b4cf5a6e857e8e7\",\"dweb:/ipfs/QmNycbi54RiYok1inrYVGHBxBpSDBzfMCCi88PosY6t9mX\"]},\"contracts/vault/interfaces/IVaultPermit.sol\":{\"keccak256\":\"0x8d01e5c6cff316ccf5380e96b9d4130bfec81895fea5c908bc54664358650a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c1c34afdb91508f30da9f8788e69ca6eeec7b35711d2331c63cbe5d682a477\",\"dweb:/ipfs/QmcAgRtwkipRQGoLvPjYo5aqN7QLhStLrExLoyPEuR2Ksb\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4176,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4184,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))"},{"astId":3962,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"paginationSize","offset":0,"slot":"2","type":"t_uint256"},{"astId":5113,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"_agreements","offset":0,"slot":"3","type":"t_struct(Bytes32Set)3375_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => mapping(address => uint256)))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Bytes32Set)3375_storage":{"encoding":"inplace","label":"struct EnumerableSet.Bytes32Set","members":[{"astId":3374,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)3181_storage"}],"numberOfBytes":"64"},"t_struct(Set)3181_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":3176,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":3180,"contract":"contracts/vault/VaultPermit.sol:VaultPermit","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/vault/interfaces/IVaultPermit.sol":{"IVaultPermit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"agreement","type":"bytes32"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct IAtomicSwapBase.PermitSignature","name":"signature","type":"tuple"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))":"a1b996c1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreement\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.PermitSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/interfaces/IVaultPermit.sol\":\"IVaultPermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":{\"keccak256\":\"0xd7239d747128d5b1cce36b79dcea51f1d65adad185f622198fb76b147cefdfbb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0d503748485a3085d61d608f04fe782d671c4d3d203ff5df533f1b701517a45a\",\"dweb:/ipfs/QmPrfi1Pp3YHMvuepL6eRkMyX5GgSnJhyFfZuFrYwTMaR8\"]},\"contracts/vault/interfaces/IVaultPermit.sol\":{\"keccak256\":\"0x8d01e5c6cff316ccf5380e96b9d4130bfec81895fea5c908bc54664358650a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c1c34afdb91508f30da9f8788e69ca6eeec7b35711d2331c63cbe5d682a477\",\"dweb:/ipfs/QmcAgRtwkipRQGoLvPjYo5aqN7QLhStLrExLoyPEuR2Ksb\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}