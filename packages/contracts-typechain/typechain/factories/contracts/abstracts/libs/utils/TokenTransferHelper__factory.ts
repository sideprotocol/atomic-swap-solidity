/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TokenTransferHelper,
  TokenTransferHelperInterface,
} from "../../../../../contracts/abstracts/libs/utils/TokenTransferHelper";

const _abi = [
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "NotAllowedTransferAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "real",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "NotEnoughFund",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFromFailed",
    type: "error",
  },
] as const;

const _bytecode =
  "0x610a0b610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806306cf228014610045578063baa21b8c1461006e575b600080fd5b81801561005157600080fd5b5061006c600480360381019061006791906106b1565b610097565b005b81801561007a57600080fd5b50610095600480360381019061009091906106b1565b610128565b005b60008284866100a6919061076d565b6100b091906107de565b9050600081866100c0919061080f565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610111576101018888836101bb565b61010c8884846101bb565b61011e565b61011d87848385610287565b5b5050505050505050565b6000828486610137919061076d565b61014191906107de565b905060008186610151919061080f565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146101a457610193883389846103b9565b61019f883385856103b9565b6101b1565b6101b087848385610287565b5b5050505050505050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016101fb929190610861565b6020604051808303816000875af115801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906108c2565b6102815782826040517f1c43b976000000000000000000000000000000000000000000000000000000008152600401610278929190610861565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806102ee5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610325576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561036b573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103b2573d6000803e3d6000fd5b5050505050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b81526004016103fb9291906108ef565b602060405180830381865afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c919061092d565b9050828110156104855780836040517f7c8db62f00000000000000000000000000000000000000000000000000000000815260040161047c92919061095a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016104c09190610983565b602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610501919061092d565b90508381101561054a5780846040517f04157bb400000000000000000000000000000000000000000000000000000000815260040161054192919061095a565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8787876040518463ffffffff1660e01b81526004016105879392919061099e565b6020604051808303816000875af11580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca91906108c2565b61060f578585856040517fca7f5f0e0000000000000000000000000000000000000000000000000000000081526004016106069392919061099e565b60405180910390fd5b50505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106488261061d565b9050919050565b6106588161063d565b811461066357600080fd5b50565b6000813590506106758161064f565b92915050565b6000819050919050565b61068e8161067b565b811461069957600080fd5b50565b6000813590506106ab81610685565b92915050565b60008060008060008060c087890312156106ce576106cd610618565b5b60006106dc89828a01610666565b96505060206106ed89828a01610666565b95505060406106fe89828a0161069c565b945050606061070f89828a0161069c565b935050608061072089828a0161069c565b92505060a061073189828a01610666565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107788261067b565b91506107838361067b565b92508282026107918161067b565b915082820484148315176107a8576107a761073e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107e98261067b565b91506107f48361067b565b925082610804576108036107af565b5b828204905092915050565b600061081a8261067b565b91506108258361067b565b925082820390508181111561083d5761083c61073e565b5b92915050565b61084c8161063d565b82525050565b61085b8161067b565b82525050565b60006040820190506108766000830185610843565b6108836020830184610852565b9392505050565b60008115159050919050565b61089f8161088a565b81146108aa57600080fd5b50565b6000815190506108bc81610896565b92915050565b6000602082840312156108d8576108d7610618565b5b60006108e6848285016108ad565b91505092915050565b60006040820190506109046000830185610843565b6109116020830184610843565b9392505050565b60008151905061092781610685565b92915050565b60006020828403121561094357610942610618565b5b600061095184828501610918565b91505092915050565b600060408201905061096f6000830185610852565b61097c6020830184610852565b9392505050565b60006020820190506109986000830184610843565b92915050565b60006060820190506109b36000830186610843565b6109c06020830185610843565b6109cd6040830184610852565b94935050505056fea2646970667358221220082f53da0311b50ed0c8a8b2870986218adf502e56db64800436b624bdf5bbf664736f6c63430008140033";

type TokenTransferHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTransferHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTransferHelper__factory extends ContractFactory {
  constructor(...args: TokenTransferHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenTransferHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenTransferHelper__factory {
    return super.connect(runner) as TokenTransferHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTransferHelperInterface {
    return new Interface(_abi) as TokenTransferHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenTransferHelper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenTransferHelper;
  }
}
