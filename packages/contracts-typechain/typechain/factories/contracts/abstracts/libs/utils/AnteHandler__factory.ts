/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  AnteHandler,
  AnteHandlerInterface,
} from "../../../../../contracts/abstracts/libs/utils/AnteHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "real",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "NotEnoughFund",
    type: "error",
  },
] as const;

const _bytecode =
  "0x610c0e610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806306cf2280146100455780638dbb76c71461006e575b600080fd5b81801561005157600080fd5b5061006c6004803603810190610067919061061a565b610097565b005b81801561007a57600080fd5b50610095600480360381019061009091906106a7565b610130565b005b60008284866100a69190610778565b6100b091906107e9565b9050600081866100c0919061081a565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461011157610101888883610212565b61010c888484610212565b610126565b61011b8782610348565b6101258383610348565b5b5050505050505050565b600082848661013f9190610778565b61014991906107e9565b905060008186610159919061081a565b9050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146101ac5761019b89898984610448565b6101a789898585610448565b610207565b8534146101f25734866040517f04157bb40000000000000000000000000000000000000000000000000000000081526004016101e992919061085d565b60405180910390fd5b6101fc8782610348565b6102068383610348565b5b505050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610244929190610895565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610292919061092f565b6000604051808303816000865af19150503d80600081146102cf576040519150601f19603f3d011682016040523d82523d6000602084013e6102d4565b606091505b50915091508180156103025750600081511480610301575080806020019051810190610300919061097e565b5b5b610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890610a2e565b60405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81111561037d5761037c610a4e565b5b6040519080825280601f01601f1916602001820160405280156103af5781602001600182028036833780820191505090505b506040516103bd919061092f565b60006040518083038185875af1925050503d80600081146103fa576040519150601f19603f3d011682016040523d82523d6000602084013e6103ff565b606091505b5050905080610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a90610aef565b60405180910390fd5b505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161047c93929190610b0f565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104ca919061092f565b6000604051808303816000865af19150503d8060008114610507576040519150601f19603f3d011682016040523d82523d6000602084013e61050c565b606091505b509150915081801561053a5750600081511480610539575080806020019051810190610538919061097e565b5b5b610579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057090610bb8565b60405180910390fd5b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b182610586565b9050919050565b6105c1816105a6565b81146105cc57600080fd5b50565b6000813590506105de816105b8565b92915050565b6000819050919050565b6105f7816105e4565b811461060257600080fd5b50565b600081359050610614816105ee565b92915050565b60008060008060008060c0878903121561063757610636610581565b5b600061064589828a016105cf565b965050602061065689828a016105cf565b955050604061066789828a01610605565b945050606061067889828a01610605565b935050608061068989828a01610605565b92505060a061069a89828a016105cf565b9150509295509295509295565b600080600080600080600060e0888a0312156106c6576106c5610581565b5b60006106d48a828b016105cf565b97505060206106e58a828b016105cf565b96505060406106f68a828b016105cf565b95505060606107078a828b01610605565b94505060806107188a828b01610605565b93505060a06107298a828b01610605565b92505060c061073a8a828b016105cf565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610783826105e4565b915061078e836105e4565b925082820261079c816105e4565b915082820484148315176107b3576107b2610749565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107f4826105e4565b91506107ff836105e4565b92508261080f5761080e6107ba565b5b828204905092915050565b6000610825826105e4565b9150610830836105e4565b925082820390508181111561084857610847610749565b5b92915050565b610857816105e4565b82525050565b6000604082019050610872600083018561084e565b61087f602083018461084e565b9392505050565b61088f816105a6565b82525050565b60006040820190506108aa6000830185610886565b6108b7602083018461084e565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156108f25780820151818401526020810190506108d7565b60008484015250505050565b6000610909826108be565b61091381856108c9565b93506109238185602086016108d4565b80840191505092915050565b600061093b82846108fe565b915081905092915050565b60008115159050919050565b61095b81610946565b811461096657600080fd5b50565b60008151905061097881610952565b92915050565b60006020828403121561099457610993610581565b5b60006109a284828501610969565b91505092915050565b600082825260208201905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000610a18602d836109ab565b9150610a23826109bc565b604082019050919050565b60006020820190508181036000830152610a4781610a0b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b6000610ad96034836109ab565b9150610ae482610a7d565b604082019050919050565b60006020820190508181036000830152610b0881610acc565b9050919050565b6000606082019050610b246000830186610886565b610b316020830185610886565b610b3e604083018461084e565b949350505050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000610ba26031836109ab565b9150610bad82610b46565b604082019050919050565b60006020820190508181036000830152610bd181610b95565b905091905056fea2646970667358221220dbad8ed2351ad610eeb796350c65d5dfbd1c54cb45a486531b402c83b8c4057a64736f6c63430008140033";

type AnteHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnteHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnteHandler__factory extends ContractFactory {
  constructor(...args: AnteHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AnteHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AnteHandler__factory {
    return super.connect(runner) as AnteHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnteHandlerInterface {
    return new Interface(_abi) as AnteHandlerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AnteHandler {
    return new Contract(address, _abi, runner) as unknown as AnteHandler;
  }
}
