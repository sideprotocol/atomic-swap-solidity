/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  AnteHandler,
  AnteHandlerInterface,
} from "../../../../../contracts/abstracts/libs/utils/AnteHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "real",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
    ],
    name: "NotEnoughFund",
    type: "error",
  },
] as const;

const _bytecode =
  "0x610e7a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806306cf228014610045578063baa21b8c1461006e575b600080fd5b81801561005157600080fd5b5061006c60048036038101906100679190610928565b610097565b005b81801561007a57600080fd5b5061009560048036038101906100909190610928565b610284565b005b6100ab67f6238147a61f0c9160c01b61051d565b6100bf67af68807fd959bd3060c01b61051d565b6100d367f86a3d9a1907171560c01b61051d565b60008284866100e291906109e4565b6100ec9190610a55565b905061010267e5c540efcb89e0ff60c01b61051d565b6101166759c01119e3fdcdd560c01b61051d565b600081866101249190610a86565b905061013a6745e1bca1cf13b22260c01b61051d565b61014e679bf326515320c81f60c01b61051d565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146102015761019667e62f89bd7c9436a660c01b61051d565b6101aa67bb1b77b0b74f266460c01b61051d565b6101be678d69642b6d562f7e60c01b61051d565b6101c9888883610520565b6101dd6782fd2681f99e780e60c01b61051d565b6101f16713ac571bde96559f60c01b61051d565b6101fc888484610520565b61027a565b610215670c40bd4cf2bcf48360c01b61051d565b61022967b57192c27444147c60c01b61051d565b61023d675cbf3a9292f4f1b460c01b61051d565b6102478782610656565b61025b674a9831530b14edab60c01b61051d565b61026f679f0e91606aa3a65760c01b61051d565b6102798383610656565b5b5050505050505050565b61029867f7868e37e38dbe0060c01b61051d565b6102ac6790f065b6ed9c128960c01b61051d565b6102c067bc7029f61dd20ae660c01b61051d565b60008284866102cf91906109e4565b6102d99190610a55565b90506102ef673ad2769b1d80340a60c01b61051d565b61030367f2d8b19df62487cd60c01b61051d565b600081866103119190610a86565b90506103276721017e143986a6da60c01b61051d565b61033b67ef2fd05938ea13e460c01b61051d565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146103f057610383675a502dc274b1916860c01b61051d565b61039767db1b18270e36c9ed60c01b61051d565b6103ab67aceb3c80a47d952860c01b61051d565b6103b788338984610756565b6103cb6764b798d0f506150e60c01b61051d565b6103df67e2f03e4658a7fbcc60c01b61051d565b6103eb88338585610756565b610513565b61040467a5146be89ff4ad2e60c01b61051d565b610418678c68bfdf7cb65ec960c01b61051d565b61042c679f63bf787418105460c01b61051d565b85341461049a576104476797f18ab4c61cbc7d60c01b61051d565b61045b67bc3b26d3a351d1c660c01b61051d565b34866040517f04157bb4000000000000000000000000000000000000000000000000000000008152600401610491929190610ac9565b60405180910390fd5b6104ae67917964874a69ccd260c01b61051d565b6104c267b29d5d3970830cfe60c01b61051d565b6104d667578764815cc3994960c01b61051d565b6104e08782610656565b6104f4673b0adaf0e7f5947560c01b61051d565b61050867335c969e2348973360c01b61051d565b6105128383610656565b5b5050505050505050565b50565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610552929190610b01565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105a09190610b9b565b6000604051808303816000865af19150503d80600081146105dd576040519150601f19603f3d011682016040523d82523d6000602084013e6105e2565b606091505b5091509150818015610610575060008151148061060f57508080602001905181019061060e9190610bea565b5b5b61064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690610c9a565b60405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81111561068b5761068a610cba565b5b6040519080825280601f01601f1916602001820160405280156106bd5781602001600182028036833780820191505090505b506040516106cb9190610b9b565b60006040518083038185875af1925050503d8060008114610708576040519150601f19603f3d011682016040523d82523d6000602084013e61070d565b606091505b5050905080610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074890610d5b565b60405180910390fd5b505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161078a93929190610d7b565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107d89190610b9b565b6000604051808303816000865af19150503d8060008114610815576040519150601f19603f3d011682016040523d82523d6000602084013e61081a565b606091505b509150915081801561084857506000815114806108475750808060200190518101906108469190610bea565b5b5b610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e90610e24565b60405180910390fd5b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108bf82610894565b9050919050565b6108cf816108b4565b81146108da57600080fd5b50565b6000813590506108ec816108c6565b92915050565b6000819050919050565b610905816108f2565b811461091057600080fd5b50565b600081359050610922816108fc565b92915050565b60008060008060008060c087890312156109455761094461088f565b5b600061095389828a016108dd565b965050602061096489828a016108dd565b955050604061097589828a01610913565b945050606061098689828a01610913565b935050608061099789828a01610913565b92505060a06109a889828a016108dd565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ef826108f2565b91506109fa836108f2565b9250828202610a08816108f2565b91508282048414831517610a1f57610a1e6109b5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a60826108f2565b9150610a6b836108f2565b925082610a7b57610a7a610a26565b5b828204905092915050565b6000610a91826108f2565b9150610a9c836108f2565b9250828203905081811115610ab457610ab36109b5565b5b92915050565b610ac3816108f2565b82525050565b6000604082019050610ade6000830185610aba565b610aeb6020830184610aba565b9392505050565b610afb816108b4565b82525050565b6000604082019050610b166000830185610af2565b610b236020830184610aba565b9392505050565b600081519050919050565b600081905092915050565b60005b83811015610b5e578082015181840152602081019050610b43565b60008484015250505050565b6000610b7582610b2a565b610b7f8185610b35565b9350610b8f818560208601610b40565b80840191505092915050565b6000610ba78284610b6a565b915081905092915050565b60008115159050919050565b610bc781610bb2565b8114610bd257600080fd5b50565b600081519050610be481610bbe565b92915050565b600060208284031215610c0057610bff61088f565b5b6000610c0e84828501610bd5565b91505092915050565b600082825260208201905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000610c84602d83610c17565b9150610c8f82610c28565b604082019050919050565b60006020820190508181036000830152610cb381610c77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b6000610d45603483610c17565b9150610d5082610ce9565b604082019050919050565b60006020820190508181036000830152610d7481610d38565b9050919050565b6000606082019050610d906000830186610af2565b610d9d6020830185610af2565b610daa6040830184610aba565b949350505050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260008201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b6000610e0e603183610c17565b9150610e1982610db2565b604082019050919050565b60006020820190508181036000830152610e3d81610e01565b905091905056fea2646970667358221220f74039a1ed7ce1d2856264e1af5a6428420ccf59af7f645a496a383ee0e0ea1c64736f6c63430008140033";

type AnteHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnteHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnteHandler__factory extends ContractFactory {
  constructor(...args: AnteHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AnteHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AnteHandler__factory {
    return super.connect(runner) as AnteHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnteHandlerInterface {
    return new Interface(_abi) as AnteHandlerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AnteHandler {
    return new Contract(address, _abi, runner) as unknown as AnteHandler;
  }
}
