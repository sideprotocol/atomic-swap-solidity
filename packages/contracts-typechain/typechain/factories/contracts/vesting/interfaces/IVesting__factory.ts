/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVesting,
  IVestingInterface,
} from "../../../../contracts/vesting/interfaces/IVesting";

const _abi = [
  {
    inputs: [],
    name: "InvalidTotalPercentage",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVesting",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPermissionToRelease",
    type: "error",
  },
  {
    inputs: [],
    name: "NoVestedTokensAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "NoVestedTokensForRelease",
    type: "error",
  },
  {
    inputs: [],
    name: "OverMaximumReleaseStep",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "VestingAlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "VestingNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NewVesting",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "durationInHours",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
        ],
        internalType: "struct IAtomicSwapBase.Release[]",
        name: "releases",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "withVault",
        type: "bool",
      },
    ],
    name: "startVesting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IVesting__factory {
  static readonly abi = _abi;
  static createInterface(): IVestingInterface {
    return new Interface(_abi) as IVestingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVesting {
    return new Contract(address, _abi, runner) as unknown as IVesting;
  }
}
