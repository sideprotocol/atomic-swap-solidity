{"abi":[{"type":"function","name":"isContract","inputs":[{"name":"_addr","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"validateMakeSwapParams","inputs":[{"name":"makeswap","type":"tuple","internalType":"struct IAtomicSwapBase.MakeSwapMsg","components":[{"name":"uuid","type":"bytes32","internalType":"bytes32"},{"name":"sellToken","type":"tuple","internalType":"struct IAtomicSwapBase.Coin","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"buyToken","type":"tuple","internalType":"struct IAtomicSwapBase.Coin","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"maker","type":"address","internalType":"address"},{"name":"desiredTaker","type":"address","internalType":"address"},{"name":"minBidAmount","type":"uint256","internalType":"uint256"},{"name":"expireAt","type":"uint256","internalType":"uint256"},{"name":"acceptBid","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"validateVestingParams","inputs":[{"name":"releases","type":"tuple[]","internalType":"struct IAtomicSwapBase.Release[]","components":[{"name":"durationInHours","type":"uint256","internalType":"uint256"},{"name":"percentage","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"pure"},{"type":"error","name":"InvalidContractAddress","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidExpirationTime","inputs":[{"name":"provided","type":"uint256","internalType":"uint256"},{"name":"maximum","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidMinimumBidLimit","inputs":[]},{"type":"error","name":"InvalidReleasePercentage","inputs":[]},{"type":"error","name":"InvalidTotalPercentage","inputs":[]},{"type":"error","name":"OrderAlreadyExpired","inputs":[{"name":"current","type":"uint256","internalType":"uint256"},{"name":"expiredTime","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"OverMaximumReleaseStep","inputs":[]},{"type":"error","name":"UnauthorizedCancelAction","inputs":[]},{"type":"error","name":"UnauthorizedSender","inputs":[]},{"type":"error","name":"UnauthorizedTakeAction","inputs":[]},{"type":"error","name":"ZeroReleaseSchedule","inputs":[]}],"bytecode":{"object":"0x61073661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063162790551461006657806333b988f51461009457806362e454f7146100a95780639a0ebe00146100bc578063c3aee15d146100cf575b600080fd5b6100806100743660046103f7565b3b63ffffffff16151590565b604051901515815260200160405180910390f35b6100a76100a23660046104ad565b6100e2565b005b6100a76100b736600461057a565b6101b3565b6100a76100ca366004610617565b61025e565b6100a76100dd3660046106aa565b6103a9565b805160000361010457604051637eb4703d60e11b815260040160405180910390fd5b6000805b8251811015610169576000838281518110610125576101256106c3565b60200260200101516020015190508060000361015457604051632b82b70d60e01b815260040160405180910390fd5b61015e81846106d9565b925050600101610108565b50806127101461018c57604051630b8ad7f160e01b815260040160405180910390fd5b6096825111156101af57604051631531e37f60e01b815260040160405180910390fd5b5050565b60208101516001600160a01b03166101de57604051630101292160e31b815260040160405180910390fd5b60048201546001600160a01b031615801590610207575060048201546001600160a01b03163314155b156102255760405163be544a2b60e01b815260040160405180910390fd5b4282600b015410156101af57600b820154604051630fe77d7d60e01b815242600482015260248101919091526044015b60405180910390fd5b6020810151516001600160a01b03161580159061028557506020810151513b63ffffffff16155b156102b5576020810151516040516319bb402960e01b81526001600160a01b039091166004820152602401610255565b6040810151516001600160a01b0316158015906102dc57506040810151513b63ffffffff16155b1561030c576040818101515190516319bb402960e01b81526001600160a01b039091166004820152602401610255565b60008160a001511161033157604051635fe07c7d60e01b815260040160405180910390fd5b331580610354575080606001516001600160a01b0316336001600160a01b031614155b1561037257604051630101292160e31b815260040160405180910390fd5b428160c0015110156103a65760c081015160405163f00605cf60e01b81526004810191909152426024820152604401610255565b50565b600181015461010090046001600160a01b031633146103a657604051634bc7822b60e11b815260040160405180910390fd5b80356001600160a01b03811681146103f257600080fd5b919050565b60006020828403121561040957600080fd5b610412826103db565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561045257610452610419565b60405290565b604051610100810167ffffffffffffffff8111828210171561045257610452610419565b604051601f8201601f1916810167ffffffffffffffff811182821017156104a5576104a5610419565b604052919050565b600060208083850312156104c057600080fd5b823567ffffffffffffffff808211156104d857600080fd5b818501915085601f8301126104ec57600080fd5b8135818111156104fe576104fe610419565b61050c848260051b0161047c565b818152848101925060069190911b83018401908782111561052c57600080fd5b928401925b8184101561056f576040848903121561054a5760008081fd5b61055261042f565b843581528585013586820152835260409093019291840191610531565b979650505050505050565b600080828403606081121561058e57600080fd5b833592506040601f19820112156105a457600080fd5b506105ad61042f565b602084013581526105c0604085016103db565b6020820152809150509250929050565b6000604082840312156105e257600080fd5b6105ea61042f565b90506105f5826103db565b81526020820135602082015292915050565b803580151581146103f257600080fd5b6000610140828403121561062a57600080fd5b610632610458565b8235815261064384602085016105d0565b602082015261065584606085016105d0565b604082015261066660a084016103db565b606082015261067760c084016103db565b608082015260e083013560a082015261010083013560c082015261069e6101208401610607565b60e08201529392505050565b6000602082840312156106bc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156106fa57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220d8477c27ac8e73e29d38c23d8eab5be14675df9851f900ae2c9839c8ca8adc8164736f6c63430008170033","sourceMap":"348:4006:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;348:4006:6;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063162790551461006657806333b988f51461009457806362e454f7146100a95780639a0ebe00146100bc578063c3aee15d146100cf575b600080fd5b6100806100743660046103f7565b3b63ffffffff16151590565b604051901515815260200160405180910390f35b6100a76100a23660046104ad565b6100e2565b005b6100a76100b736600461057a565b6101b3565b6100a76100ca366004610617565b61025e565b6100a76100dd3660046106aa565b6103a9565b805160000361010457604051637eb4703d60e11b815260040160405180910390fd5b6000805b8251811015610169576000838281518110610125576101256106c3565b60200260200101516020015190508060000361015457604051632b82b70d60e01b815260040160405180910390fd5b61015e81846106d9565b925050600101610108565b50806127101461018c57604051630b8ad7f160e01b815260040160405180910390fd5b6096825111156101af57604051631531e37f60e01b815260040160405180910390fd5b5050565b60208101516001600160a01b03166101de57604051630101292160e31b815260040160405180910390fd5b60048201546001600160a01b031615801590610207575060048201546001600160a01b03163314155b156102255760405163be544a2b60e01b815260040160405180910390fd5b4282600b015410156101af57600b820154604051630fe77d7d60e01b815242600482015260248101919091526044015b60405180910390fd5b6020810151516001600160a01b03161580159061028557506020810151513b63ffffffff16155b156102b5576020810151516040516319bb402960e01b81526001600160a01b039091166004820152602401610255565b6040810151516001600160a01b0316158015906102dc57506040810151513b63ffffffff16155b1561030c576040818101515190516319bb402960e01b81526001600160a01b039091166004820152602401610255565b60008160a001511161033157604051635fe07c7d60e01b815260040160405180910390fd5b331580610354575080606001516001600160a01b0316336001600160a01b031614155b1561037257604051630101292160e31b815260040160405180910390fd5b428160c0015110156103a65760c081015160405163f00605cf60e01b81526004810191909152426024820152604401610255565b50565b600181015461010090046001600160a01b031633146103a657604051634bc7822b60e11b815260040160405180910390fd5b80356001600160a01b03811681146103f257600080fd5b919050565b60006020828403121561040957600080fd5b610412826103db565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561045257610452610419565b60405290565b604051610100810167ffffffffffffffff8111828210171561045257610452610419565b604051601f8201601f1916810167ffffffffffffffff811182821017156104a5576104a5610419565b604052919050565b600060208083850312156104c057600080fd5b823567ffffffffffffffff808211156104d857600080fd5b818501915085601f8301126104ec57600080fd5b8135818111156104fe576104fe610419565b61050c848260051b0161047c565b818152848101925060069190911b83018401908782111561052c57600080fd5b928401925b8184101561056f576040848903121561054a5760008081fd5b61055261042f565b843581528585013586820152835260409093019291840191610531565b979650505050505050565b600080828403606081121561058e57600080fd5b833592506040601f19820112156105a457600080fd5b506105ad61042f565b602084013581526105c0604085016103db565b6020820152809150509250929050565b6000604082840312156105e257600080fd5b6105ea61042f565b90506105f5826103db565b81526020820135602082015292915050565b803580151581146103f257600080fd5b6000610140828403121561062a57600080fd5b610632610458565b8235815261064384602085016105d0565b602082015261065584606085016105d0565b604082015261066660a084016103db565b606082015261067760c084016103db565b608082015260e083013560a082015261010083013560c082015261069e6101208401610607565b60e08201529392505050565b6000602082840312156106bc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156106fa57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220d8477c27ac8e73e29d38c23d8eab5be14675df9851f900ae2c9839c8ca8adc8164736f6c63430008170033","sourceMap":"348:4006:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4167:185;;;;;;:::i;:::-;4291:18;4336:8;;;;;4167:185;;;;556:14:34;;549:22;531:41;;519:2;504:18;4167:185:6;;;;;;;3163:740;;;;;;:::i;:::-;;:::i;:::-;;1743:551;;;;;;:::i;:::-;;:::i;631:884::-;;;;;;:::i;:::-;;:::i;2529:384::-;;;;;;:::i;:::-;;:::i;3163:740::-;3265:8;:15;3284:1;3265:20;3261:95;;3308:37;;-1:-1:-1;;;3308:37:6;;;;;;;;;;;3261:95;3366:23;3408:9;3403:273;3427:8;:15;3423:1;:19;3403:273;;;3463:18;3484:8;3493:1;3484:11;;;;;;;;:::i;:::-;;;;;;;:22;;;3463:43;;3524:10;3538:1;3524:15;3520:103;;3566:42;;-1:-1:-1;;;3566:42:6;;;;;;;;;;;3520:103;3636:29;3655:10;3636:29;;:::i;:::-;;-1:-1:-1;;3444:3:6;;3403:273;;;;3690:15;3709:5;3690:24;3686:102;;3737:40;;-1:-1:-1;;;3737:40:6;;;;;;;;;;;3686:102;3820:3;3802:8;:15;:21;3798:99;;;3846:40;;-1:-1:-1;;;3846:40:6;;;;;;;;;;;3798:99;3251:652;3163:740;:::o;1743:551::-;1889:22;;;;-1:-1:-1;;;;;1889:36:6;1885:110;;1948:36;;-1:-1:-1;;;1948:36:6;;;;;;;;;;;1885:110;2008:12;;;;-1:-1:-1;;;;;2008:12:6;:26;;;;:56;;-1:-1:-1;2038:12:6;;;;-1:-1:-1;;;;;2038:12:6;2054:10;2038:26;;2008:56;2004:134;;;2087:40;;-1:-1:-1;;;2087:40:6;;;;;;;;;;;2004:134;2170:15;2151:6;:16;;;:34;2148:140;;;2260:16;;;;2208:69;;-1:-1:-1;;;2208:69:6;;2244:15;2208:69;;;5303:25:34;5344:18;;;5337:34;;;;5276:18;;2208:69:6;;;;;;;;631:884;736:18;;;;:24;-1:-1:-1;;;;;736:38:6;;;;;:79;;-1:-1:-1;790:18:6;;;;:24;4291:18;4336:8;;;736:79;732:181;;;877:18;;;;:24;838:64;;-1:-1:-1;;;838:64:6;;-1:-1:-1;;;;;5546:32:34;;;838:64:6;;;5528:51:34;5501:18;;838:64:6;5382:203:34;732:181:6;926:17;;;;:23;-1:-1:-1;;;;;926:37:6;;;;;:77;;-1:-1:-1;979:17:6;;;;:23;4291:18;4336:8;;;926:77;922:178;;;1065:17;;;;;:23;1026:63;;-1:-1:-1;;;1026:63:6;;-1:-1:-1;;;;;5546:32:34;;;1026:63:6;;;5528:51:34;5501:18;;1026:63:6;5382:203:34;922:178:6;1138:1;1113:8;:21;;;:26;1109:104;;1162:40;;-1:-1:-1;;;1162:40:6;;;;;;;;;;;1109:104;1227:10;:24;;:56;;;1269:8;:14;;;-1:-1:-1;;;;;1255:28:6;:10;-1:-1:-1;;;;;1255:28:6;;;1227:56;1223:130;;;1306:36;;-1:-1:-1;;;1306:36:6;;;;;;;;;;;1223:130;1387:15;1367:8;:17;;;:35;1363:146;;;1463:17;;;;1425:73;;-1:-1:-1;;;1425:73:6;;;;;5303:25:34;;;;1482:15:6;5344:18:34;;;5337:34;5276:18;;1425:73:6;5129:248:34;1363:146:6;631:884;:::o;2529:384::-;2633:12;;;;;;;-1:-1:-1;;;;;2633:12:6;2649:10;2633:26;2629:106;;2682:42;;-1:-1:-1;;;2682:42:6;;;;;;;;;;;14:173:34;82:20;;-1:-1:-1;;;;;131:31:34;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:34:o;583:127::-;644:10;639:3;635:20;632:1;625:31;675:4;672:1;665:15;699:4;696:1;689:15;715:256;786:4;780:11;;;818:17;;865:18;850:34;;886:22;;;847:62;844:88;;;912:18;;:::i;:::-;948:4;941:24;715:256;:::o;976:254::-;1047:2;1041:9;1089:6;1077:19;;1126:18;1111:34;;1147:22;;;1108:62;1105:88;;;1173:18;;:::i;1235:275::-;1306:2;1300:9;1371:2;1352:13;;-1:-1:-1;;1348:27:34;1336:40;;1406:18;1391:34;;1427:22;;;1388:62;1385:88;;;1453:18;;:::i;:::-;1489:2;1482:22;1235:275;;-1:-1:-1;1235:275:34:o;1515:1233::-;1623:6;1654:2;1697;1685:9;1676:7;1672:23;1668:32;1665:52;;;1713:1;1710;1703:12;1665:52;1753:9;1740:23;1782:18;1823:2;1815:6;1812:14;1809:34;;;1839:1;1836;1829:12;1809:34;1877:6;1866:9;1862:22;1852:32;;1922:7;1915:4;1911:2;1907:13;1903:27;1893:55;;1944:1;1941;1934:12;1893:55;1980:2;1967:16;2002:2;1998;1995:10;1992:36;;;2008:18;;:::i;:::-;2048:36;2080:2;2075;2072:1;2068:10;2064:19;2048:36;:::i;:::-;2118:15;;;2149:12;;;;-1:-1:-1;2200:1:34;2196:10;;;;2188:19;;2184:28;;;2224:19;;;2221:39;;;2256:1;2253;2246:12;2221:39;2280:11;;;;2300:418;2316:6;2311:3;2308:15;2300:418;;;2398:4;2392:3;2383:7;2379:17;2375:28;2372:118;;;2444:1;2473:2;2469;2462:14;2372:118;2516:21;;:::i;:::-;2564:17;;2550:32;;2631:12;;;2618:26;2602:14;;;2595:50;2658:18;;2342:4;2333:14;;;;2696:12;;;;2300:418;;;2737:5;1515:1233;-1:-1:-1;;;;;;;1515:1233:34:o;2753:531::-;2882:6;2890;2934:9;2925:7;2921:23;2964:2;2960;2956:11;2953:31;;;2980:1;2977;2970:12;2953:31;3003:23;;;-1:-1:-1;3060:4:34;-1:-1:-1;;3042:16:34;;3038:27;3035:47;;;3078:1;3075;3068:12;3035:47;;3104:21;;:::i;:::-;3176:2;3165:9;3161:18;3148:32;3141:5;3134:47;3213:40;3247:4;3236:9;3232:20;3213:40;:::i;:::-;3208:2;3201:5;3197:14;3190:64;3273:5;3263:15;;;2753:531;;;;;:::o;3289:284::-;3340:5;3388:4;3376:9;3371:3;3367:19;3363:30;3360:50;;;3406:1;3403;3396:12;3360:50;3428:21;;:::i;:::-;3419:30;;3472:29;3491:9;3472:29;:::i;:::-;3465:5;3458:44;3562:2;3551:9;3547:18;3534:32;3529:2;3522:5;3518:14;3511:56;3289:284;;;;:::o;3578:160::-;3643:20;;3699:13;;3692:21;3682:32;;3672:60;;3728:1;3725;3718:12;3743:804;3830:6;3883:3;3871:9;3862:7;3858:23;3854:33;3851:53;;;3900:1;3897;3890:12;3851:53;3926:21;;:::i;:::-;3983:9;3970:23;3963:5;3956:38;4026:51;4069:7;4064:2;4053:9;4049:18;4026:51;:::i;:::-;4021:2;4014:5;4010:14;4003:75;4112:51;4155:7;4150:2;4139:9;4135:18;4112:51;:::i;:::-;4105:4;4098:5;4094:16;4087:77;4196:39;4230:3;4219:9;4215:19;4196:39;:::i;:::-;4191:2;4184:5;4180:14;4173:63;4270:39;4304:3;4293:9;4289:19;4270:39;:::i;:::-;4263:4;4256:5;4252:16;4245:65;4371:3;4360:9;4356:19;4343:33;4337:3;4330:5;4326:15;4319:58;4438:6;4427:9;4423:22;4410:36;4404:3;4397:5;4393:15;4386:61;4480:36;4511:3;4500:9;4496:19;4480:36;:::i;:::-;4474:3;4463:15;;4456:61;4467:5;3743:804;-1:-1:-1;;;3743:804:34:o;4552:213::-;4644:6;4697:2;4685:9;4676:7;4672:23;4668:32;4665:52;;;4713:1;4710;4703:12;4665:52;-1:-1:-1;4736:23:34;;4552:213;-1:-1:-1;4552:213:34:o;4770:127::-;4831:10;4826:3;4822:20;4819:1;4812:31;4862:4;4859:1;4852:15;4886:4;4883:1;4876:15;4902:222;4967:9;;;4988:10;;;4985:133;;;5040:10;5035:3;5031:20;5028:1;5021:31;5075:4;5072:1;5065:15;5103:4;5100:1;5093:15;4985:133;4902:222;;;;:::o","linkReferences":{}},"methodIdentifiers":{"isContract(address)":"16279055","validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)":"c3aee15d","validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)":"9a0ebe00","validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)":"62e454f7","validateVestingParams(IAtomicSwapBase.Release[])":"33b988f5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"InvalidContractAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"InvalidExpirationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumBidLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReleasePercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTotalPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredTime\",\"type\":\"uint256\"}],\"name\":\"OrderAlreadyExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OverMaximumReleaseStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCancelAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedTakeAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroReleaseSchedule\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.Coin\",\"name\":\"sellToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.Coin\",\"name\":\"buyToken\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"desiredTaker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"acceptBid\",\"type\":\"bool\"}],\"internalType\":\"struct IAtomicSwapBase.MakeSwapMsg\",\"name\":\"makeswap\",\"type\":\"tuple\"}],\"name\":\"validateMakeSwapParams\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"durationInHours\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.Release[]\",\"name\":\"releases\",\"type\":\"tuple[]\"}],\"name\":\"validateVestingParams\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Used for ensuring the correctness and integrity of data in atomic swap operations.\",\"kind\":\"dev\",\"methods\":{\"isContract(address)\":{\"details\":\"Checks if the code at the address is non-zero using EIP-1052 extcodehash\",\"params\":{\"_addr\":\"The address to be checked\"},\"returns\":{\"_0\":\"bool True if `account` is a contract, false otherwise\"}},\"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)\":{\"details\":\"Ensures that the _order is in the initial state and the sender is authorized to cancel.\",\"params\":{\"_order\":\"The atomic swap order to validate for cancellation.\"}},\"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)\":{\"details\":\"Checks for valid contract address, positive minimum bid, authorized sender, and future expiration time.\",\"params\":{\"makeswap\":\"The structure containing swap details.\"}},\"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)\":{\"details\":\"Checks if the order is not already accepted or completed, and if the taker is authorized.\",\"params\":{\"takeswap\":\"The take swap message details.\"}},\"validateVestingParams(IAtomicSwapBase.Release[])\":{\"details\":\"Ensures the total percentage of releases equals 100% and the number of releases is within limits.\",\"params\":{\"releases\":\"Array of release schedules for the vesting.\"}}},\"title\":\"Atomic Swap Message Validator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isContract(address)\":{\"notice\":\"Determines if an address is a contract\"},\"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)\":{\"notice\":\"Validates the cancellation of a swap.\"},\"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)\":{\"notice\":\"Validates parameters for creating an atomic swap.\"},\"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)\":{\"notice\":\"Validates parameters for taking an atomic swap.\"},\"validateVestingParams(IAtomicSwapBase.Release[])\":{\"notice\":\"Validates vesting parameters for an atomic swap.\"}},\"notice\":\"Library providing validation functions for various atomic swap messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol\":\"AtomicSwapMsgValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":{\"keccak256\":\"0xe668351523872ba9933e2ea931201336169ec88b05d020a36f2bfa30dcb1a22d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc1e36e3e72f30b949ba050e210a2d72521f4dbec42127b362edca0b7547e02f\",\"dweb:/ipfs/QmV12GHtsxMTSHohimjhoK923eqgt5vvsvdVA12dyiZrhU\"]},\"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol\":{\"keccak256\":\"0xb118de77c61ca3f98a96dccfcac7f0ed9e1497f34119082ba85b88d87549407a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548acfc0453179e998e93607ab2dbd28b4c6ab77ea4763ae16e770718af1f851\",\"dweb:/ipfs/QmWZzaUYEBpRKGQWu9d4J293d93hAfThHE66k1rBK4kF7Y\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"type":"error","name":"InvalidContractAddress"},{"inputs":[{"internalType":"uint256","name":"provided","type":"uint256"},{"internalType":"uint256","name":"maximum","type":"uint256"}],"type":"error","name":"InvalidExpirationTime"},{"inputs":[],"type":"error","name":"InvalidMinimumBidLimit"},{"inputs":[],"type":"error","name":"InvalidReleasePercentage"},{"inputs":[],"type":"error","name":"InvalidTotalPercentage"},{"inputs":[{"internalType":"uint256","name":"current","type":"uint256"},{"internalType":"uint256","name":"expiredTime","type":"uint256"}],"type":"error","name":"OrderAlreadyExpired"},{"inputs":[],"type":"error","name":"OverMaximumReleaseStep"},{"inputs":[],"type":"error","name":"UnauthorizedCancelAction"},{"inputs":[],"type":"error","name":"UnauthorizedSender"},{"inputs":[],"type":"error","name":"UnauthorizedTakeAction"},{"inputs":[],"type":"error","name":"ZeroReleaseSchedule"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"stateMutability":"view","type":"function","name":"isContract","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct IAtomicSwapBase.MakeSwapMsg","name":"makeswap","type":"tuple","components":[{"internalType":"bytes32","name":"uuid","type":"bytes32"},{"internalType":"struct IAtomicSwapBase.Coin","name":"sellToken","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct IAtomicSwapBase.Coin","name":"buyToken","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"desiredTaker","type":"address"},{"internalType":"uint256","name":"minBidAmount","type":"uint256"},{"internalType":"uint256","name":"expireAt","type":"uint256"},{"internalType":"bool","name":"acceptBid","type":"bool"}]}],"stateMutability":"view","type":"function","name":"validateMakeSwapParams"},{"inputs":[{"internalType":"struct IAtomicSwapBase.Release[]","name":"releases","type":"tuple[]","components":[{"internalType":"uint256","name":"durationInHours","type":"uint256"},{"internalType":"uint256","name":"percentage","type":"uint256"}]}],"stateMutability":"pure","type":"function","name":"validateVestingParams"}],"devdoc":{"kind":"dev","methods":{"isContract(address)":{"details":"Checks if the code at the address is non-zero using EIP-1052 extcodehash","params":{"_addr":"The address to be checked"},"returns":{"_0":"bool True if `account` is a contract, false otherwise"}},"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)":{"details":"Ensures that the _order is in the initial state and the sender is authorized to cancel.","params":{"_order":"The atomic swap order to validate for cancellation."}},"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)":{"details":"Checks for valid contract address, positive minimum bid, authorized sender, and future expiration time.","params":{"makeswap":"The structure containing swap details."}},"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)":{"details":"Checks if the order is not already accepted or completed, and if the taker is authorized.","params":{"takeswap":"The take swap message details."}},"validateVestingParams(IAtomicSwapBase.Release[])":{"details":"Ensures the total percentage of releases equals 100% and the number of releases is within limits.","params":{"releases":"Array of release schedules for the vesting."}}},"version":1},"userdoc":{"kind":"user","methods":{"isContract(address)":{"notice":"Determines if an address is a contract"},"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)":{"notice":"Validates the cancellation of a swap."},"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)":{"notice":"Validates parameters for creating an atomic swap."},"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)":{"notice":"Validates parameters for taking an atomic swap."},"validateVestingParams(IAtomicSwapBase.Release[])":{"notice":"Validates vesting parameters for an atomic swap."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol":"AtomicSwapMsgValidator"},"libraries":{}},"sources":{"contracts/abstracts/interfaces/IAtomicSwapBase.sol":{"keccak256":"0xe668351523872ba9933e2ea931201336169ec88b05d020a36f2bfa30dcb1a22d","urls":["bzz-raw://dc1e36e3e72f30b949ba050e210a2d72521f4dbec42127b362edca0b7547e02f","dweb:/ipfs/QmV12GHtsxMTSHohimjhoK923eqgt5vvsvdVA12dyiZrhU"],"license":"UNLICENSED"},"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol":{"keccak256":"0xb118de77c61ca3f98a96dccfcac7f0ed9e1497f34119082ba85b88d87549407a","urls":["bzz-raw://548acfc0453179e998e93607ab2dbd28b4c6ab77ea4763ae16e770718af1f851","dweb:/ipfs/QmWZzaUYEBpRKGQWu9d4J293d93hAfThHE66k1rBK4kF7Y"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol","id":1289,"exportedSymbols":{"AtomicSwapMsgValidator":[1288],"IAtomicSwapBase":[637]},"nodeType":"SourceUnit","src":"32:4323:6","nodes":[{"id":1001,"nodeType":"PragmaDirective","src":"32:24:6","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":1003,"nodeType":"ImportDirective","src":"58:71:6","nodes":[],"absolutePath":"contracts/abstracts/interfaces/IAtomicSwapBase.sol","file":"../../interfaces/IAtomicSwapBase.sol","nameLocation":"-1:-1:-1","scope":1289,"sourceUnit":638,"symbolAliases":[{"foreign":{"id":1002,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"67:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1288,"nodeType":"ContractDefinition","src":"348:4006:6","nodes":[{"id":1109,"nodeType":"FunctionDefinition","src":"631:884:6","nodes":[],"body":{"id":1108,"nodeType":"Block","src":"722:793:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1011,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"736:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"745:9:6","memberName":"sellToken","nodeType":"MemberAccess","referencedDeclaration":396,"src":"736:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"755:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"736:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"772:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"764:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:6","typeDescriptions":{}}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"736:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"778:37:6","subExpression":{"arguments":[{"expression":{"expression":{"id":1020,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"790:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"799:9:6","memberName":"sellToken","nodeType":"MemberAccess","referencedDeclaration":396,"src":"790:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"809:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"790:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1019,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"779:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"779:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"736:79:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"nodeType":"IfStatement","src":"732:181:6","trueBody":{"id":1034,"nodeType":"Block","src":"817:96:6","statements":[{"errorCall":{"arguments":[{"expression":{"expression":{"id":1029,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"877:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"886:9:6","memberName":"sellToken","nodeType":"MemberAccess","referencedDeclaration":396,"src":"877:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"896:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"877:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1026,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"838:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"854:22:6","memberName":"InvalidContractAddress","nodeType":"MemberAccess","referencedDeclaration":492,"src":"838:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"838:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"RevertStatement","src":"831:71:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1036,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"926:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"935:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":399,"src":"926:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"944:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"926:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"953:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:6","typeDescriptions":{}}},"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"926:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"967:36:6","subExpression":{"arguments":[{"expression":{"expression":{"id":1045,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"979:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"988:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":399,"src":"979:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"997:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"979:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1044,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"968:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"968:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"926:77:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1060,"nodeType":"IfStatement","src":"922:178:6","trueBody":{"id":1059,"nodeType":"Block","src":"1005:95:6","statements":[{"errorCall":{"arguments":[{"expression":{"expression":{"id":1054,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1065:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1074:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":399,"src":"1065:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1083:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"1065:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1051,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1026:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1042:22:6","memberName":"InvalidContractAddress","nodeType":"MemberAccess","referencedDeclaration":492,"src":"1026:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"RevertStatement","src":"1019:70:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1061,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1113:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1122:12:6","memberName":"minBidAmount","nodeType":"MemberAccess","referencedDeclaration":405,"src":"1113:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1113:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"1109:104:6","trueBody":{"id":1070,"nodeType":"Block","src":"1141:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1065,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1162:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1178:22:6","memberName":"InvalidMinimumBidLimit","nodeType":"MemberAccess","referencedDeclaration":520,"src":"1162:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1162:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"1155:47:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1227:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1227:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1249:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1241:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:6","typeDescriptions":{}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1241:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1227:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1255:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1259:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1255:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1081,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1269:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1278:5:6","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1269:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1255:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1227:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"nodeType":"IfStatement","src":"1223:130:6","trueBody":{"id":1090,"nodeType":"Block","src":"1285:68:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1085,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1306:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1322:18:6","memberName":"UnauthorizedSender","nodeType":"MemberAccess","referencedDeclaration":494,"src":"1306:34:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1306:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"RevertStatement","src":"1299:43:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1367:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1376:8:6","memberName":"expireAt","nodeType":"MemberAccess","referencedDeclaration":407,"src":"1367:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1094,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1387:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1393:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1387:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1367:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1107,"nodeType":"IfStatement","src":"1363:146:6","trueBody":{"id":1106,"nodeType":"Block","src":"1404:105:6","statements":[{"errorCall":{"arguments":[{"expression":{"id":1100,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1463:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1472:8:6","memberName":"expireAt","nodeType":"MemberAccess","referencedDeclaration":407,"src":"1463:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1102,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1482:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1488:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1482:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1097,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1425:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1441:21:6","memberName":"InvalidExpirationTime","nodeType":"MemberAccess","referencedDeclaration":518,"src":"1425:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1425:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"RevertStatement","src":"1418:80:6"}]}}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"385:241:6","text":"@notice Validates parameters for creating an atomic swap.\n @param makeswap The structure containing swap details.\n @dev Checks for valid contract address, positive minimum bid, authorized sender, and future expiration time."},"functionSelector":"9a0ebe00","implemented":true,"kind":"function","modifiers":[],"name":"validateMakeSwapParams","nameLocation":"640:22:6","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"makeswap","nameLocation":"698:8:6","nodeType":"VariableDeclaration","scope":1109,"src":"663:43:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg"},"typeName":{"id":1007,"nodeType":"UserDefinedTypeName","pathNode":{"id":1006,"name":"IAtomicSwapBase.MakeSwapMsg","nameLocations":["663:15:6","679:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"663:27:6"},"referencedDeclaration":410,"src":"663:27:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_storage_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg"}},"visibility":"internal"}],"src":"662:45:6"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"722:0:6"},"scope":1288,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1170,"nodeType":"FunctionDefinition","src":"1743:551:6","nodes":[],"body":{"id":1169,"nodeType":"Block","src":"1875:419:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1119,"name":"takeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"1889:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TakeSwapMsg_$422_memory_ptr","typeString":"struct IAtomicSwapBase.TakeSwapMsg memory"}},"id":1120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1898:13:6","memberName":"takerReceiver","nodeType":"MemberAccess","referencedDeclaration":421,"src":"1889:22:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1923:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1915:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"1915:7:6","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1915:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1889:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1132,"nodeType":"IfStatement","src":"1885:110:6","trueBody":{"id":1131,"nodeType":"Block","src":"1927:68:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1126,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1948:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1964:18:6","memberName":"UnauthorizedSender","nodeType":"MemberAccess","referencedDeclaration":494,"src":"1948:34:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1948:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"RevertStatement","src":"1941:43:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1133,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2008:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2015:5:6","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":354,"src":"2008:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2024:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:6","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2008:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1140,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2038:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2045:5:6","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":354,"src":"2038:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2054:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2058:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2054:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2038:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2008:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"2004:134:6","trueBody":{"id":1151,"nodeType":"Block","src":"2066:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1146,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2087:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:22:6","memberName":"UnauthorizedTakeAction","nodeType":"MemberAccess","referencedDeclaration":470,"src":"2087:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2087:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"RevertStatement","src":"2080:47:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1153,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2151:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2158:9:6","memberName":"expiredAt","nodeType":"MemberAccess","referencedDeclaration":367,"src":"2151:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1155,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2170:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2176:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2170:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2151:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"2148:140:6","trueBody":{"id":1167,"nodeType":"Block","src":"2187:101:6","statements":[{"errorCall":{"arguments":[{"expression":{"id":1161,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2244:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2250:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2244:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1163,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2260:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2267:9:6","memberName":"expiredAt","nodeType":"MemberAccess","referencedDeclaration":367,"src":"2260:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1158,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2208:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2224:19:6","memberName":"OrderAlreadyExpired","nodeType":"MemberAccess","referencedDeclaration":482,"src":"2208:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2208:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"2201:76:6"}]}}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"1521:217:6","text":"@notice Validates parameters for taking an atomic swap.\n @param takeswap The take swap message details.\n @dev Checks if the order is not already accepted or completed, and if the taker is authorized."},"functionSelector":"62e454f7","implemented":true,"kind":"function","modifiers":[],"name":"validateTakeSwap","nameLocation":"1752:16:6","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"_order","nameLocation":"1809:6:6","nodeType":"VariableDeclaration","scope":1170,"src":"1769:46:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"},"typeName":{"id":1112,"nodeType":"UserDefinedTypeName","pathNode":{"id":1111,"name":"IAtomicSwapBase.AtomicSwapOrder","nameLocations":["1769:15:6","1785:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"1769:31:6"},"referencedDeclaration":370,"src":"1769:31:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"takeswap","nameLocation":"1851:8:6","nodeType":"VariableDeclaration","scope":1170,"src":"1816:43:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeSwapMsg_$422_memory_ptr","typeString":"struct IAtomicSwapBase.TakeSwapMsg"},"typeName":{"id":1115,"nodeType":"UserDefinedTypeName","pathNode":{"id":1114,"name":"IAtomicSwapBase.TakeSwapMsg","nameLocations":["1816:15:6","1832:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":422,"src":"1816:27:6"},"referencedDeclaration":422,"src":"1816:27:6","typeDescriptions":{"typeIdentifier":"t_struct$_TakeSwapMsg_$422_storage_ptr","typeString":"struct IAtomicSwapBase.TakeSwapMsg"}},"visibility":"internal"}],"src":"1768:92:6"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"1875:0:6"},"scope":1288,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1190,"nodeType":"FunctionDefinition","src":"2529:384:6","nodes":[],"body":{"id":1189,"nodeType":"Block","src":"2619:294:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1177,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2633:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2640:5:6","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":349,"src":"2633:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2649:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2653:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2649:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2633:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1188,"nodeType":"IfStatement","src":"2629:106:6","trueBody":{"id":1187,"nodeType":"Block","src":"2661:74:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1182,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2682:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2698:24:6","memberName":"UnauthorizedCancelAction","nodeType":"MemberAccess","referencedDeclaration":486,"src":"2682:40:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"RevertStatement","src":"2675:49:6"}]}}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"2300:224:6","text":"@notice Validates the cancellation of a swap.\n @param _order The atomic swap order to validate for cancellation.\n @dev Ensures that the _order is in the initial state and the sender is authorized to cancel."},"functionSelector":"c3aee15d","implemented":true,"kind":"function","modifiers":[],"name":"validateCancelSwap","nameLocation":"2538:18:6","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"_order","nameLocation":"2597:6:6","nodeType":"VariableDeclaration","scope":1190,"src":"2557:46:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"},"typeName":{"id":1173,"nodeType":"UserDefinedTypeName","pathNode":{"id":1172,"name":"IAtomicSwapBase.AtomicSwapOrder","nameLocations":["2557:15:6","2573:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"2557:31:6"},"referencedDeclaration":370,"src":"2557:31:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"}},"visibility":"internal"}],"src":"2556:48:6"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"2619:0:6"},"scope":1288,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1269,"nodeType":"FunctionDefinition","src":"3163:740:6","nodes":[],"body":{"id":1268,"nodeType":"Block","src":"3251:652:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1198,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"3265:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3274:6:6","memberName":"length","nodeType":"MemberAccess","src":"3265:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3265:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1208,"nodeType":"IfStatement","src":"3261:95:6","trueBody":{"id":1207,"nodeType":"Block","src":"3287:69:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1202,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3308:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3324:19:6","memberName":"ZeroReleaseSchedule","nodeType":"MemberAccess","referencedDeclaration":540,"src":"3308:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3308:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"RevertStatement","src":"3301:44:6"}]}},{"assignments":[1210],"declarations":[{"constant":false,"id":1210,"mutability":"mutable","name":"totalPercentage","nameLocation":"3374:15:6","nodeType":"VariableDeclaration","scope":1268,"src":"3366:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1212,"initialValue":{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3392:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3366:27:6"},{"body":{"id":1245,"nodeType":"Block","src":"3449:227:6","statements":[{"assignments":[1225],"declarations":[{"constant":false,"id":1225,"mutability":"mutable","name":"percentage","nameLocation":"3471:10:6","nodeType":"VariableDeclaration","scope":1245,"src":"3463:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3463:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1230,"initialValue":{"expression":{"baseExpression":{"id":1226,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"3484:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1228,"indexExpression":{"id":1227,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3493:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3484:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Release_$416_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory"}},"id":1229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3496:10:6","memberName":"percentage","nodeType":"MemberAccess","referencedDeclaration":415,"src":"3484:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3463:43:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3524:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3538:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3524:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1240,"nodeType":"IfStatement","src":"3520:103:6","trueBody":{"id":1239,"nodeType":"Block","src":"3541:82:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1234,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3566:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:24:6","memberName":"InvalidReleasePercentage","nodeType":"MemberAccess","referencedDeclaration":542,"src":"3566:40:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"RevertStatement","src":"3559:49:6"}]}},{"expression":{"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1241,"name":"totalPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3636:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1242,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3655:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3636:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ExpressionStatement","src":"3636:29:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3423:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1218,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"3427:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3436:6:6","memberName":"length","nodeType":"MemberAccess","src":"3427:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3423:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"initializationExpression":{"assignments":[1214],"declarations":[{"constant":false,"id":1214,"mutability":"mutable","name":"i","nameLocation":"3416:1:6","nodeType":"VariableDeclaration","scope":1246,"src":"3408:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3408:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1216,"initialValue":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3420:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3408:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3444:3:6","subExpression":{"id":1221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3444:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ExpressionStatement","src":"3444:3:6"},"nodeType":"ForStatement","src":"3403:273:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"totalPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3690:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3130303030","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3709:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3690:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1256,"nodeType":"IfStatement","src":"3686:102:6","trueBody":{"id":1255,"nodeType":"Block","src":"3716:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1250,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3737:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3753:22:6","memberName":"InvalidTotalPercentage","nodeType":"MemberAccess","referencedDeclaration":544,"src":"3737:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"RevertStatement","src":"3730:47:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1257,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"3802:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3811:6:6","memberName":"length","nodeType":"MemberAccess","src":"3802:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"313530","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3820:3:6","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"src":"3802:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1267,"nodeType":"IfStatement","src":"3798:99:6","trueBody":{"id":1266,"nodeType":"Block","src":"3825:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1261,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3846:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$637_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3862:22:6","memberName":"OverMaximumReleaseStep","nodeType":"MemberAccess","referencedDeclaration":546,"src":"3846:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1265,"nodeType":"RevertStatement","src":"3839:47:6"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"2919:239:6","text":"@notice Validates vesting parameters for an atomic swap.\n @param releases Array of release schedules for the vesting.\n @dev Ensures the total percentage of releases equals 100% and the number of releases is within limits."},"functionSelector":"33b988f5","implemented":true,"kind":"function","modifiers":[],"name":"validateVestingParams","nameLocation":"3172:21:6","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"releases","nameLocation":"3227:8:6","nodeType":"VariableDeclaration","scope":1269,"src":"3194:41:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release[]"},"typeName":{"baseType":{"id":1193,"nodeType":"UserDefinedTypeName","pathNode":{"id":1192,"name":"IAtomicSwapBase.Release","nameLocations":["3194:15:6","3210:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"3194:23:6"},"referencedDeclaration":416,"src":"3194:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_Release_$416_storage_ptr","typeString":"struct IAtomicSwapBase.Release"}},"id":1194,"nodeType":"ArrayTypeName","src":"3194:25:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_storage_$dyn_storage_ptr","typeString":"struct IAtomicSwapBase.Release[]"}},"visibility":"internal"}],"src":"3193:43:6"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"3251:0:6"},"scope":1288,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":1287,"nodeType":"FunctionDefinition","src":"4167:185:6","nodes":[],"body":{"id":1286,"nodeType":"Block","src":"4229:123:6","nodes":[],"statements":[{"assignments":[1278],"declarations":[{"constant":false,"id":1278,"mutability":"mutable","name":"size","nameLocation":"4246:4:6","nodeType":"VariableDeclaration","scope":1286,"src":"4239:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1277,"name":"uint32","nodeType":"ElementaryTypeName","src":"4239:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":1279,"nodeType":"VariableDeclarationStatement","src":"4239:11:6"},{"AST":{"nativeSrc":"4269:50:6","nodeType":"YulBlock","src":"4269:50:6","statements":[{"nativeSrc":"4283:26:6","nodeType":"YulAssignment","src":"4283:26:6","value":{"arguments":[{"name":"_addr","nativeSrc":"4303:5:6","nodeType":"YulIdentifier","src":"4303:5:6"}],"functionName":{"name":"extcodesize","nativeSrc":"4291:11:6","nodeType":"YulIdentifier","src":"4291:11:6"},"nativeSrc":"4291:18:6","nodeType":"YulFunctionCall","src":"4291:18:6"},"variableNames":[{"name":"size","nativeSrc":"4283:4:6","nodeType":"YulIdentifier","src":"4283:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1272,"isOffset":false,"isSlot":false,"src":"4303:5:6","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"4283:4:6","valueSize":1}],"id":1280,"nodeType":"InlineAssembly","src":"4260:59:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4336:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4336:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4335:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1276,"id":1285,"nodeType":"Return","src":"4328:17:6"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"3909:253:6","text":"@notice Determines if an address is a contract\n @dev Checks if the code at the address is non-zero using EIP-1052 extcodehash\n @param _addr The address to be checked\n @return bool True if `account` is a contract, false otherwise"},"functionSelector":"16279055","implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"4176:10:6","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"_addr","nameLocation":"4195:5:6","nodeType":"VariableDeclaration","scope":1287,"src":"4187:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4186:15:6"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"4223:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1274,"name":"bool","nodeType":"ElementaryTypeName","src":"4223:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4222:6:6"},"scope":1288,"stateMutability":"view","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[],"canonicalName":"AtomicSwapMsgValidator","contractDependencies":[],"contractKind":"library","documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"130:218:6","text":"@title Atomic Swap Message Validator\n @notice Library providing validation functions for various atomic swap messages.\n @dev Used for ensuring the correctness and integrity of data in atomic swap operations."},"fullyImplemented":true,"linearizedBaseContracts":[1288],"name":"AtomicSwapMsgValidator","nameLocation":"356:22:6","scope":1289,"usedErrors":[470,482,486,492,494,518,520,540,542,544,546],"usedEvents":[]}],"license":"MIT"},"id":6}