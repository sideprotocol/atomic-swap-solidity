{"abi":[{"type":"function","name":"isContract","inputs":[{"name":"_addr","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"validateMakeSwapParams","inputs":[{"name":"makeswap","type":"tuple","internalType":"struct IAtomicSwapBase.MakeSwapMsg","components":[{"name":"uuid","type":"bytes32","internalType":"bytes32"},{"name":"sellToken","type":"tuple","internalType":"struct IAtomicSwapBase.Coin","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"buyToken","type":"tuple","internalType":"struct IAtomicSwapBase.Coin","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"maker","type":"address","internalType":"address"},{"name":"desiredTaker","type":"address","internalType":"address"},{"name":"minBidAmount","type":"uint256","internalType":"uint256"},{"name":"expireAt","type":"uint256","internalType":"uint256"},{"name":"acceptBid","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"validateVestingParams","inputs":[{"name":"releases","type":"tuple[]","internalType":"struct IAtomicSwapBase.Release[]","components":[{"name":"durationInHours","type":"uint256","internalType":"uint256"},{"name":"percentage","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"pure"},{"type":"error","name":"InvalidContractAddress","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidExpirationTime","inputs":[{"name":"provided","type":"uint256","internalType":"uint256"},{"name":"maximum","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidMinimumBidLimit","inputs":[]},{"type":"error","name":"InvalidReleasePercentage","inputs":[]},{"type":"error","name":"InvalidTotalPercentage","inputs":[]},{"type":"error","name":"OrderAlreadyExpired","inputs":[{"name":"current","type":"uint256","internalType":"uint256"},{"name":"expiredTime","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"OverMaximumReleaseStep","inputs":[]},{"type":"error","name":"UnauthorizedCancelAction","inputs":[]},{"type":"error","name":"UnauthorizedSender","inputs":[]},{"type":"error","name":"UnauthorizedTakeAction","inputs":[]},{"type":"error","name":"ZeroReleaseSchedule","inputs":[]}],"bytecode":{"object":"0x61073661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063162790551461006657806333b988f51461009457806362e454f7146100a95780639a0ebe00146100bc578063c3aee15d146100cf575b600080fd5b6100806100743660046103f7565b3b63ffffffff16151590565b604051901515815260200160405180910390f35b6100a76100a23660046104ad565b6100e2565b005b6100a76100b736600461057a565b6101b3565b6100a76100ca366004610617565b61025e565b6100a76100dd3660046106aa565b6103a9565b805160000361010457604051637eb4703d60e11b815260040160405180910390fd5b6000805b8251811015610169576000838281518110610125576101256106c3565b60200260200101516020015190508060000361015457604051632b82b70d60e01b815260040160405180910390fd5b61015e81846106d9565b925050600101610108565b50806127101461018c57604051630b8ad7f160e01b815260040160405180910390fd5b6096825111156101af57604051631531e37f60e01b815260040160405180910390fd5b5050565b60208101516001600160a01b03166101de57604051630101292160e31b815260040160405180910390fd5b60048201546001600160a01b031615801590610207575060048201546001600160a01b03163314155b156102255760405163be544a2b60e01b815260040160405180910390fd5b4282600b015410156101af57600b820154604051630fe77d7d60e01b815242600482015260248101919091526044015b60405180910390fd5b6020810151516001600160a01b03161580159061028557506020810151513b63ffffffff16155b156102b5576020810151516040516319bb402960e01b81526001600160a01b039091166004820152602401610255565b6040810151516001600160a01b0316158015906102dc57506040810151513b63ffffffff16155b1561030c576040818101515190516319bb402960e01b81526001600160a01b039091166004820152602401610255565b60008160a001511161033157604051635fe07c7d60e01b815260040160405180910390fd5b331580610354575080606001516001600160a01b0316336001600160a01b031614155b1561037257604051630101292160e31b815260040160405180910390fd5b428160c0015110156103a65760c081015160405163f00605cf60e01b81526004810191909152426024820152604401610255565b50565b600181015461010090046001600160a01b031633146103a657604051634bc7822b60e11b815260040160405180910390fd5b80356001600160a01b03811681146103f257600080fd5b919050565b60006020828403121561040957600080fd5b610412826103db565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561045257610452610419565b60405290565b604051610100810167ffffffffffffffff8111828210171561045257610452610419565b604051601f8201601f1916810167ffffffffffffffff811182821017156104a5576104a5610419565b604052919050565b600060208083850312156104c057600080fd5b823567ffffffffffffffff808211156104d857600080fd5b818501915085601f8301126104ec57600080fd5b8135818111156104fe576104fe610419565b61050c848260051b0161047c565b818152848101925060069190911b83018401908782111561052c57600080fd5b928401925b8184101561056f576040848903121561054a5760008081fd5b61055261042f565b843581528585013586820152835260409093019291840191610531565b979650505050505050565b600080828403606081121561058e57600080fd5b833592506040601f19820112156105a457600080fd5b506105ad61042f565b602084013581526105c0604085016103db565b6020820152809150509250929050565b6000604082840312156105e257600080fd5b6105ea61042f565b90506105f5826103db565b81526020820135602082015292915050565b803580151581146103f257600080fd5b6000610140828403121561062a57600080fd5b610632610458565b8235815261064384602085016105d0565b602082015261065584606085016105d0565b604082015261066660a084016103db565b606082015261067760c084016103db565b608082015260e083013560a082015261010083013560c082015261069e6101208401610607565b60e08201529392505050565b6000602082840312156106bc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156106fa57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220c9d617f9f70aca60f468fdb130fcb4b55f052b32d9dd825a72d31ec6eec7076c64736f6c63430008170033","sourceMap":"348:3825:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;348:3825:6;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063162790551461006657806333b988f51461009457806362e454f7146100a95780639a0ebe00146100bc578063c3aee15d146100cf575b600080fd5b6100806100743660046103f7565b3b63ffffffff16151590565b604051901515815260200160405180910390f35b6100a76100a23660046104ad565b6100e2565b005b6100a76100b736600461057a565b6101b3565b6100a76100ca366004610617565b61025e565b6100a76100dd3660046106aa565b6103a9565b805160000361010457604051637eb4703d60e11b815260040160405180910390fd5b6000805b8251811015610169576000838281518110610125576101256106c3565b60200260200101516020015190508060000361015457604051632b82b70d60e01b815260040160405180910390fd5b61015e81846106d9565b925050600101610108565b50806127101461018c57604051630b8ad7f160e01b815260040160405180910390fd5b6096825111156101af57604051631531e37f60e01b815260040160405180910390fd5b5050565b60208101516001600160a01b03166101de57604051630101292160e31b815260040160405180910390fd5b60048201546001600160a01b031615801590610207575060048201546001600160a01b03163314155b156102255760405163be544a2b60e01b815260040160405180910390fd5b4282600b015410156101af57600b820154604051630fe77d7d60e01b815242600482015260248101919091526044015b60405180910390fd5b6020810151516001600160a01b03161580159061028557506020810151513b63ffffffff16155b156102b5576020810151516040516319bb402960e01b81526001600160a01b039091166004820152602401610255565b6040810151516001600160a01b0316158015906102dc57506040810151513b63ffffffff16155b1561030c576040818101515190516319bb402960e01b81526001600160a01b039091166004820152602401610255565b60008160a001511161033157604051635fe07c7d60e01b815260040160405180910390fd5b331580610354575080606001516001600160a01b0316336001600160a01b031614155b1561037257604051630101292160e31b815260040160405180910390fd5b428160c0015110156103a65760c081015160405163f00605cf60e01b81526004810191909152426024820152604401610255565b50565b600181015461010090046001600160a01b031633146103a657604051634bc7822b60e11b815260040160405180910390fd5b80356001600160a01b03811681146103f257600080fd5b919050565b60006020828403121561040957600080fd5b610412826103db565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561045257610452610419565b60405290565b604051610100810167ffffffffffffffff8111828210171561045257610452610419565b604051601f8201601f1916810167ffffffffffffffff811182821017156104a5576104a5610419565b604052919050565b600060208083850312156104c057600080fd5b823567ffffffffffffffff808211156104d857600080fd5b818501915085601f8301126104ec57600080fd5b8135818111156104fe576104fe610419565b61050c848260051b0161047c565b818152848101925060069190911b83018401908782111561052c57600080fd5b928401925b8184101561056f576040848903121561054a5760008081fd5b61055261042f565b843581528585013586820152835260409093019291840191610531565b979650505050505050565b600080828403606081121561058e57600080fd5b833592506040601f19820112156105a457600080fd5b506105ad61042f565b602084013581526105c0604085016103db565b6020820152809150509250929050565b6000604082840312156105e257600080fd5b6105ea61042f565b90506105f5826103db565b81526020820135602082015292915050565b803580151581146103f257600080fd5b6000610140828403121561062a57600080fd5b610632610458565b8235815261064384602085016105d0565b602082015261065584606085016105d0565b604082015261066660a084016103db565b606082015261067760c084016103db565b608082015260e083013560a082015261010083013560c082015261069e6101208401610607565b60e08201529392505050565b6000602082840312156106bc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156106fa57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220c9d617f9f70aca60f468fdb130fcb4b55f052b32d9dd825a72d31ec6eec7076c64736f6c63430008170033","sourceMap":"348:3825:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3986:185;;;;;;:::i;:::-;4110:18;4155:8;;;;;3986:185;;;;556:14:66;;549:22;531:41;;519:2;504:18;3986:185:6;;;;;;;2982:740;;;;;;:::i;:::-;;:::i;:::-;;1743:546;;;;;;:::i;:::-;;:::i;631:884::-;;;;;;:::i;:::-;;:::i;2522:210::-;;;;;;:::i;:::-;;:::i;2982:740::-;3084:8;:15;3103:1;3084:20;3080:95;;3127:37;;-1:-1:-1;;;3127:37:6;;;;;;;;;;;3080:95;3185:23;3227:9;3222:273;3246:8;:15;3242:1;:19;3222:273;;;3282:18;3303:8;3312:1;3303:11;;;;;;;;:::i;:::-;;;;;;;:22;;;3282:43;;3343:10;3357:1;3343:15;3339:103;;3385:42;;-1:-1:-1;;;3385:42:6;;;;;;;;;;;3339:103;3455:29;3474:10;3455:29;;:::i;:::-;;-1:-1:-1;;3263:3:6;;3222:273;;;;3509:15;3528:5;3509:24;3505:102;;3556:40;;-1:-1:-1;;;3556:40:6;;;;;;;;;;;3505:102;3639:3;3621:8;:15;:21;3617:99;;;3665:40;;-1:-1:-1;;;3665:40:6;;;;;;;;;;;3617:99;3070:652;2982:740;:::o;1743:546::-;1888:22;;;;-1:-1:-1;;;;;1888:36:6;1884:110;;1947:36;;-1:-1:-1;;;1947:36:6;;;;;;;;;;;1884:110;2007:11;;;;-1:-1:-1;;;;;2007:11:6;:25;;;;:54;;-1:-1:-1;2036:11:6;;;;-1:-1:-1;;;;;2036:11:6;2051:10;2036:25;;2007:54;2003:132;;;2084:40;;-1:-1:-1;;;2084:40:6;;;;;;;;;;;2003:132;2166:15;2148:5;:15;;;:33;2145:138;;;2256:15;;;;2204:68;;-1:-1:-1;;;2204:68:6;;2240:15;2204:68;;;5303:25:66;5344:18;;;5337:34;;;;5276:18;;2204:68:6;;;;;;;;631:884;736:18;;;;:24;-1:-1:-1;;;;;736:38:6;;;;;:79;;-1:-1:-1;790:18:6;;;;:24;4110:18;4155:8;;;736:79;732:181;;;877:18;;;;:24;838:64;;-1:-1:-1;;;838:64:6;;-1:-1:-1;;;;;5546:32:66;;;838:64:6;;;5528:51:66;5501:18;;838:64:6;5382:203:66;732:181:6;926:17;;;;:23;-1:-1:-1;;;;;926:37:6;;;;;:77;;-1:-1:-1;979:17:6;;;;:23;4110:18;4155:8;;;926:77;922:178;;;1065:17;;;;;:23;1026:63;;-1:-1:-1;;;1026:63:6;;-1:-1:-1;;;;;5546:32:66;;;1026:63:6;;;5528:51:66;5501:18;;1026:63:6;5382:203:66;922:178:6;1138:1;1113:8;:21;;;:26;1109:104;;1162:40;;-1:-1:-1;;;1162:40:6;;;;;;;;;;;1109:104;1227:10;:24;;:56;;;1269:8;:14;;;-1:-1:-1;;;;;1255:28:6;:10;-1:-1:-1;;;;;1255:28:6;;;1227:56;1223:130;;;1306:36;;-1:-1:-1;;;1306:36:6;;;;;;;;;;;1223:130;1387:15;1367:8;:17;;;:35;1363:146;;;1463:17;;;;1425:73;;-1:-1:-1;;;1425:73:6;;;;;5303:25:66;;;;1482:15:6;5344:18:66;;;5337:34;5276:18;;1425:73:6;5129:248:66;1363:146:6;631:884;:::o;2522:210::-;2625:11;;;;;;;-1:-1:-1;;;;;2625:11:6;2640:10;2625:25;2621:105;;2673:42;;-1:-1:-1;;;2673:42:6;;;;;;;;;;;14:173:66;82:20;;-1:-1:-1;;;;;131:31:66;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:66:o;583:127::-;644:10;639:3;635:20;632:1;625:31;675:4;672:1;665:15;699:4;696:1;689:15;715:256;786:4;780:11;;;818:17;;865:18;850:34;;886:22;;;847:62;844:88;;;912:18;;:::i;:::-;948:4;941:24;715:256;:::o;976:254::-;1047:2;1041:9;1089:6;1077:19;;1126:18;1111:34;;1147:22;;;1108:62;1105:88;;;1173:18;;:::i;1235:275::-;1306:2;1300:9;1371:2;1352:13;;-1:-1:-1;;1348:27:66;1336:40;;1406:18;1391:34;;1427:22;;;1388:62;1385:88;;;1453:18;;:::i;:::-;1489:2;1482:22;1235:275;;-1:-1:-1;1235:275:66:o;1515:1233::-;1623:6;1654:2;1697;1685:9;1676:7;1672:23;1668:32;1665:52;;;1713:1;1710;1703:12;1665:52;1753:9;1740:23;1782:18;1823:2;1815:6;1812:14;1809:34;;;1839:1;1836;1829:12;1809:34;1877:6;1866:9;1862:22;1852:32;;1922:7;1915:4;1911:2;1907:13;1903:27;1893:55;;1944:1;1941;1934:12;1893:55;1980:2;1967:16;2002:2;1998;1995:10;1992:36;;;2008:18;;:::i;:::-;2048:36;2080:2;2075;2072:1;2068:10;2064:19;2048:36;:::i;:::-;2118:15;;;2149:12;;;;-1:-1:-1;2200:1:66;2196:10;;;;2188:19;;2184:28;;;2224:19;;;2221:39;;;2256:1;2253;2246:12;2221:39;2280:11;;;;2300:418;2316:6;2311:3;2308:15;2300:418;;;2398:4;2392:3;2383:7;2379:17;2375:28;2372:118;;;2444:1;2473:2;2469;2462:14;2372:118;2516:21;;:::i;:::-;2564:17;;2550:32;;2631:12;;;2618:26;2602:14;;;2595:50;2658:18;;2342:4;2333:14;;;;2696:12;;;;2300:418;;;2737:5;1515:1233;-1:-1:-1;;;;;;;1515:1233:66:o;2753:531::-;2882:6;2890;2934:9;2925:7;2921:23;2964:2;2960;2956:11;2953:31;;;2980:1;2977;2970:12;2953:31;3003:23;;;-1:-1:-1;3060:4:66;-1:-1:-1;;3042:16:66;;3038:27;3035:47;;;3078:1;3075;3068:12;3035:47;;3104:21;;:::i;:::-;3176:2;3165:9;3161:18;3148:32;3141:5;3134:47;3213:40;3247:4;3236:9;3232:20;3213:40;:::i;:::-;3208:2;3201:5;3197:14;3190:64;3273:5;3263:15;;;2753:531;;;;;:::o;3289:284::-;3340:5;3388:4;3376:9;3371:3;3367:19;3363:30;3360:50;;;3406:1;3403;3396:12;3360:50;3428:21;;:::i;:::-;3419:30;;3472:29;3491:9;3472:29;:::i;:::-;3465:5;3458:44;3562:2;3551:9;3547:18;3534:32;3529:2;3522:5;3518:14;3511:56;3289:284;;;;:::o;3578:160::-;3643:20;;3699:13;;3692:21;3682:32;;3672:60;;3728:1;3725;3718:12;3743:804;3830:6;3883:3;3871:9;3862:7;3858:23;3854:33;3851:53;;;3900:1;3897;3890:12;3851:53;3926:21;;:::i;:::-;3983:9;3970:23;3963:5;3956:38;4026:51;4069:7;4064:2;4053:9;4049:18;4026:51;:::i;:::-;4021:2;4014:5;4010:14;4003:75;4112:51;4155:7;4150:2;4139:9;4135:18;4112:51;:::i;:::-;4105:4;4098:5;4094:16;4087:77;4196:39;4230:3;4219:9;4215:19;4196:39;:::i;:::-;4191:2;4184:5;4180:14;4173:63;4270:39;4304:3;4293:9;4289:19;4270:39;:::i;:::-;4263:4;4256:5;4252:16;4245:65;4371:3;4360:9;4356:19;4343:33;4337:3;4330:5;4326:15;4319:58;4438:6;4427:9;4423:22;4410:36;4404:3;4397:5;4393:15;4386:61;4480:36;4511:3;4500:9;4496:19;4480:36;:::i;:::-;4474:3;4463:15;;4456:61;4467:5;3743:804;-1:-1:-1;;;3743:804:66:o;4552:213::-;4644:6;4697:2;4685:9;4676:7;4672:23;4668:32;4665:52;;;4713:1;4710;4703:12;4665:52;-1:-1:-1;4736:23:66;;4552:213;-1:-1:-1;4552:213:66:o;4770:127::-;4831:10;4826:3;4822:20;4819:1;4812:31;4862:4;4859:1;4852:15;4886:4;4883:1;4876:15;4902:222;4967:9;;;4988:10;;;4985:133;;;5040:10;5035:3;5031:20;5028:1;5021:31;5075:4;5072:1;5065:15;5103:4;5100:1;5093:15;4985:133;4902:222;;;;:::o","linkReferences":{}},"methodIdentifiers":{"isContract(address)":"16279055","validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)":"c3aee15d","validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)":"9a0ebe00","validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)":"62e454f7","validateVestingParams(IAtomicSwapBase.Release[])":"33b988f5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"InvalidContractAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"InvalidExpirationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumBidLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReleasePercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTotalPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredTime\",\"type\":\"uint256\"}],\"name\":\"OrderAlreadyExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OverMaximumReleaseStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCancelAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedTakeAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroReleaseSchedule\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.Coin\",\"name\":\"sellToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.Coin\",\"name\":\"buyToken\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"desiredTaker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minBidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"acceptBid\",\"type\":\"bool\"}],\"internalType\":\"struct IAtomicSwapBase.MakeSwapMsg\",\"name\":\"makeswap\",\"type\":\"tuple\"}],\"name\":\"validateMakeSwapParams\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"durationInHours\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.Release[]\",\"name\":\"releases\",\"type\":\"tuple[]\"}],\"name\":\"validateVestingParams\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Used for ensuring the correctness and integrity of data in atomic swap operations.\",\"kind\":\"dev\",\"methods\":{\"isContract(address)\":{\"details\":\"Checks if the code at the address is non-zero using EIP-1052 extcodehash\",\"params\":{\"_addr\":\"The address to be checked\"},\"returns\":{\"_0\":\"bool True if `account` is a contract, false otherwise\"}},\"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)\":{\"details\":\"Ensures that the order is in the initial state and the sender is authorized to cancel.\",\"params\":{\"order\":\"The atomic swap order to validate for cancellation.\"}},\"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)\":{\"details\":\"Checks for valid contract address, positive minimum bid, authorized sender, and future expiration time.\",\"params\":{\"makeswap\":\"The structure containing swap details.\"}},\"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)\":{\"details\":\"Checks if the order is not already accepted or completed, and if the taker is authorized.\",\"params\":{\"takeswap\":\"The take swap message details.\"}},\"validateVestingParams(IAtomicSwapBase.Release[])\":{\"details\":\"Ensures the total percentage of releases equals 100% and the number of releases is within limits.\",\"params\":{\"releases\":\"Array of release schedules for the vesting.\"}}},\"title\":\"Atomic Swap Message Validator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isContract(address)\":{\"notice\":\"Determines if an address is a contract\"},\"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)\":{\"notice\":\"Validates the cancellation of a swap.\"},\"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)\":{\"notice\":\"Validates parameters for creating an atomic swap.\"},\"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)\":{\"notice\":\"Validates parameters for taking an atomic swap.\"},\"validateVestingParams(IAtomicSwapBase.Release[])\":{\"notice\":\"Validates vesting parameters for an atomic swap.\"}},\"notice\":\"Library providing validation functions for various atomic swap messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol\":\"AtomicSwapMsgValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":{\"keccak256\":\"0x79b017fd86ac1ba5cc29a63c62e226558fc1d11b4e0800c50de1c6aca2593247\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5dbf84c2e231525478ddd9a422fd0aac54c7a37eee1742167925280865543e27\",\"dweb:/ipfs/QmZxkdGjVp1EvF9Hf4buQkrbwrSX8AKMkUivV1n5UoGwS8\"]},\"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol\":{\"keccak256\":\"0x2dfc883d1581de4164da183b76624f572c929ec6f1d7657667b8d5ff7e59efe1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://339547b69a3a0ce5703b429d37f4c0707765520eb7a10d92e0497f443103ce91\",\"dweb:/ipfs/QmVCFmt3VwfoYisARR7RHSKbcpxmpiCkaAaNvSo7T7XjH9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"type":"error","name":"InvalidContractAddress"},{"inputs":[{"internalType":"uint256","name":"provided","type":"uint256"},{"internalType":"uint256","name":"maximum","type":"uint256"}],"type":"error","name":"InvalidExpirationTime"},{"inputs":[],"type":"error","name":"InvalidMinimumBidLimit"},{"inputs":[],"type":"error","name":"InvalidReleasePercentage"},{"inputs":[],"type":"error","name":"InvalidTotalPercentage"},{"inputs":[{"internalType":"uint256","name":"current","type":"uint256"},{"internalType":"uint256","name":"expiredTime","type":"uint256"}],"type":"error","name":"OrderAlreadyExpired"},{"inputs":[],"type":"error","name":"OverMaximumReleaseStep"},{"inputs":[],"type":"error","name":"UnauthorizedCancelAction"},{"inputs":[],"type":"error","name":"UnauthorizedSender"},{"inputs":[],"type":"error","name":"UnauthorizedTakeAction"},{"inputs":[],"type":"error","name":"ZeroReleaseSchedule"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"stateMutability":"view","type":"function","name":"isContract","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct IAtomicSwapBase.MakeSwapMsg","name":"makeswap","type":"tuple","components":[{"internalType":"bytes32","name":"uuid","type":"bytes32"},{"internalType":"struct IAtomicSwapBase.Coin","name":"sellToken","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct IAtomicSwapBase.Coin","name":"buyToken","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"desiredTaker","type":"address"},{"internalType":"uint256","name":"minBidAmount","type":"uint256"},{"internalType":"uint256","name":"expireAt","type":"uint256"},{"internalType":"bool","name":"acceptBid","type":"bool"}]}],"stateMutability":"view","type":"function","name":"validateMakeSwapParams"},{"inputs":[{"internalType":"struct IAtomicSwapBase.Release[]","name":"releases","type":"tuple[]","components":[{"internalType":"uint256","name":"durationInHours","type":"uint256"},{"internalType":"uint256","name":"percentage","type":"uint256"}]}],"stateMutability":"pure","type":"function","name":"validateVestingParams"}],"devdoc":{"kind":"dev","methods":{"isContract(address)":{"details":"Checks if the code at the address is non-zero using EIP-1052 extcodehash","params":{"_addr":"The address to be checked"},"returns":{"_0":"bool True if `account` is a contract, false otherwise"}},"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)":{"details":"Ensures that the order is in the initial state and the sender is authorized to cancel.","params":{"order":"The atomic swap order to validate for cancellation."}},"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)":{"details":"Checks for valid contract address, positive minimum bid, authorized sender, and future expiration time.","params":{"makeswap":"The structure containing swap details."}},"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)":{"details":"Checks if the order is not already accepted or completed, and if the taker is authorized.","params":{"takeswap":"The take swap message details."}},"validateVestingParams(IAtomicSwapBase.Release[])":{"details":"Ensures the total percentage of releases equals 100% and the number of releases is within limits.","params":{"releases":"Array of release schedules for the vesting."}}},"version":1},"userdoc":{"kind":"user","methods":{"isContract(address)":{"notice":"Determines if an address is a contract"},"validateCancelSwap(IAtomicSwapBase.AtomicSwapOrder storage)":{"notice":"Validates the cancellation of a swap."},"validateMakeSwapParams(IAtomicSwapBase.MakeSwapMsg)":{"notice":"Validates parameters for creating an atomic swap."},"validateTakeSwap(IAtomicSwapBase.AtomicSwapOrder storage,IAtomicSwapBase.TakeSwapMsg)":{"notice":"Validates parameters for taking an atomic swap."},"validateVestingParams(IAtomicSwapBase.Release[])":{"notice":"Validates vesting parameters for an atomic swap."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol":"AtomicSwapMsgValidator"},"libraries":{}},"sources":{"contracts/abstracts/interfaces/IAtomicSwapBase.sol":{"keccak256":"0x79b017fd86ac1ba5cc29a63c62e226558fc1d11b4e0800c50de1c6aca2593247","urls":["bzz-raw://5dbf84c2e231525478ddd9a422fd0aac54c7a37eee1742167925280865543e27","dweb:/ipfs/QmZxkdGjVp1EvF9Hf4buQkrbwrSX8AKMkUivV1n5UoGwS8"],"license":"UNLICENSED"},"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol":{"keccak256":"0x2dfc883d1581de4164da183b76624f572c929ec6f1d7657667b8d5ff7e59efe1","urls":["bzz-raw://339547b69a3a0ce5703b429d37f4c0707765520eb7a10d92e0497f443103ce91","dweb:/ipfs/QmVCFmt3VwfoYisARR7RHSKbcpxmpiCkaAaNvSo7T7XjH9"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/abstracts/libs/utils/AtomicSwapMsgValidator.sol","id":1281,"exportedSymbols":{"AtomicSwapMsgValidator":[1280],"IAtomicSwapBase":[629]},"nodeType":"SourceUnit","src":"32:4142:6","nodes":[{"id":993,"nodeType":"PragmaDirective","src":"32:24:6","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":995,"nodeType":"ImportDirective","src":"58:71:6","nodes":[],"absolutePath":"contracts/abstracts/interfaces/IAtomicSwapBase.sol","file":"../../interfaces/IAtomicSwapBase.sol","nameLocation":"-1:-1:-1","scope":1281,"sourceUnit":630,"symbolAliases":[{"foreign":{"id":994,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"67:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1280,"nodeType":"ContractDefinition","src":"348:3825:6","nodes":[{"id":1101,"nodeType":"FunctionDefinition","src":"631:884:6","nodes":[],"body":{"id":1100,"nodeType":"Block","src":"722:793:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1003,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"736:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"745:9:6","memberName":"sellToken","nodeType":"MemberAccess","referencedDeclaration":396,"src":"736:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"755:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"736:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"772:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"764:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:6","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"736:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"778:37:6","subExpression":{"arguments":[{"expression":{"expression":{"id":1012,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"790:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"799:9:6","memberName":"sellToken","nodeType":"MemberAccess","referencedDeclaration":396,"src":"790:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"809:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"790:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1011,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"779:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"779:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"736:79:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1027,"nodeType":"IfStatement","src":"732:181:6","trueBody":{"id":1026,"nodeType":"Block","src":"817:96:6","statements":[{"errorCall":{"arguments":[{"expression":{"expression":{"id":1021,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"877:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"886:9:6","memberName":"sellToken","nodeType":"MemberAccess","referencedDeclaration":396,"src":"877:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"896:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"877:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1018,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"838:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"854:22:6","memberName":"InvalidContractAddress","nodeType":"MemberAccess","referencedDeclaration":492,"src":"838:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"838:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"RevertStatement","src":"831:71:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1028,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"926:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"935:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":399,"src":"926:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"944:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"926:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"953:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:6","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"926:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"967:36:6","subExpression":{"arguments":[{"expression":{"expression":{"id":1037,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"979:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"988:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":399,"src":"979:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"997:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"979:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1036,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"968:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"968:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"926:77:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"922:178:6","trueBody":{"id":1051,"nodeType":"Block","src":"1005:95:6","statements":[{"errorCall":{"arguments":[{"expression":{"expression":{"id":1046,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1065:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1074:8:6","memberName":"buyToken","nodeType":"MemberAccess","referencedDeclaration":399,"src":"1065:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Coin_$335_memory_ptr","typeString":"struct IAtomicSwapBase.Coin memory"}},"id":1048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1083:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":332,"src":"1065:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1043,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1026:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1042:22:6","memberName":"InvalidContractAddress","nodeType":"MemberAccess","referencedDeclaration":492,"src":"1026:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"RevertStatement","src":"1019:70:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1053,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1113:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1122:12:6","memberName":"minBidAmount","nodeType":"MemberAccess","referencedDeclaration":405,"src":"1113:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1113:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"1109:104:6","trueBody":{"id":1062,"nodeType":"Block","src":"1141:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1057,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1162:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1178:22:6","memberName":"InvalidMinimumBidLimit","nodeType":"MemberAccess","referencedDeclaration":520,"src":"1162:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1162:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"RevertStatement","src":"1155:47:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1227:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1227:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1249:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1241:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:6","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1241:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1227:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1255:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1259:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1255:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1073,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1269:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1278:5:6","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1269:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1255:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1227:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1083,"nodeType":"IfStatement","src":"1223:130:6","trueBody":{"id":1082,"nodeType":"Block","src":"1285:68:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1077,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1306:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1322:18:6","memberName":"UnauthorizedSender","nodeType":"MemberAccess","referencedDeclaration":494,"src":"1306:34:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1306:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"RevertStatement","src":"1299:43:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1084,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1367:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1376:8:6","memberName":"expireAt","nodeType":"MemberAccess","referencedDeclaration":407,"src":"1367:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1086,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1387:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1393:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1387:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1367:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1099,"nodeType":"IfStatement","src":"1363:146:6","trueBody":{"id":1098,"nodeType":"Block","src":"1404:105:6","statements":[{"errorCall":{"arguments":[{"expression":{"id":1092,"name":"makeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1463:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg memory"}},"id":1093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1472:8:6","memberName":"expireAt","nodeType":"MemberAccess","referencedDeclaration":407,"src":"1463:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1094,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1482:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1488:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1482:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1089,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1425:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1441:21:6","memberName":"InvalidExpirationTime","nodeType":"MemberAccess","referencedDeclaration":518,"src":"1425:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1425:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"RevertStatement","src":"1418:80:6"}]}}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"385:241:6","text":"@notice Validates parameters for creating an atomic swap.\n @param makeswap The structure containing swap details.\n @dev Checks for valid contract address, positive minimum bid, authorized sender, and future expiration time."},"functionSelector":"9a0ebe00","implemented":true,"kind":"function","modifiers":[],"name":"validateMakeSwapParams","nameLocation":"640:22:6","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"makeswap","nameLocation":"698:8:6","nodeType":"VariableDeclaration","scope":1101,"src":"663:43:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_memory_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg"},"typeName":{"id":999,"nodeType":"UserDefinedTypeName","pathNode":{"id":998,"name":"IAtomicSwapBase.MakeSwapMsg","nameLocations":["663:15:6","679:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":410,"src":"663:27:6"},"referencedDeclaration":410,"src":"663:27:6","typeDescriptions":{"typeIdentifier":"t_struct$_MakeSwapMsg_$410_storage_ptr","typeString":"struct IAtomicSwapBase.MakeSwapMsg"}},"visibility":"internal"}],"src":"662:45:6"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"722:0:6"},"scope":1280,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1162,"nodeType":"FunctionDefinition","src":"1743:546:6","nodes":[],"body":{"id":1161,"nodeType":"Block","src":"1874:415:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1111,"name":"takeswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1888:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TakeSwapMsg_$422_memory_ptr","typeString":"struct IAtomicSwapBase.TakeSwapMsg memory"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1897:13:6","memberName":"takerReceiver","nodeType":"MemberAccess","referencedDeclaration":421,"src":"1888:22:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:6","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1124,"nodeType":"IfStatement","src":"1884:110:6","trueBody":{"id":1123,"nodeType":"Block","src":"1926:68:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1118,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"1947:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:18:6","memberName":"UnauthorizedSender","nodeType":"MemberAccess","referencedDeclaration":494,"src":"1947:34:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1947:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"RevertStatement","src":"1940:43:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1125,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2007:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2013:5:6","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":354,"src":"2007:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2022:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:6","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2022:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2007:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1132,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2036:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2042:5:6","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":354,"src":"2036:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2051:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2055:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2051:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2036:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2007:54:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1144,"nodeType":"IfStatement","src":"2003:132:6","trueBody":{"id":1143,"nodeType":"Block","src":"2063:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1138,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2084:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2100:22:6","memberName":"UnauthorizedTakeAction","nodeType":"MemberAccess","referencedDeclaration":470,"src":"2084:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"RevertStatement","src":"2077:47:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1145,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2148:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2154:9:6","memberName":"expiredAt","nodeType":"MemberAccess","referencedDeclaration":367,"src":"2148:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1147,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2166:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2166:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"nodeType":"IfStatement","src":"2145:138:6","trueBody":{"id":1159,"nodeType":"Block","src":"2183:100:6","statements":[{"errorCall":{"arguments":[{"expression":{"id":1153,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2240:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2246:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2240:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1155,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2256:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2262:9:6","memberName":"expiredAt","nodeType":"MemberAccess","referencedDeclaration":367,"src":"2256:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1150,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2204:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2220:19:6","memberName":"OrderAlreadyExpired","nodeType":"MemberAccess","referencedDeclaration":482,"src":"2204:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1158,"nodeType":"RevertStatement","src":"2197:75:6"}]}}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"1521:217:6","text":"@notice Validates parameters for taking an atomic swap.\n @param takeswap The take swap message details.\n @dev Checks if the order is not already accepted or completed, and if the taker is authorized."},"functionSelector":"62e454f7","implemented":true,"kind":"function","modifiers":[],"name":"validateTakeSwap","nameLocation":"1752:16:6","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"order","nameLocation":"1809:5:6","nodeType":"VariableDeclaration","scope":1162,"src":"1769:45:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"},"typeName":{"id":1104,"nodeType":"UserDefinedTypeName","pathNode":{"id":1103,"name":"IAtomicSwapBase.AtomicSwapOrder","nameLocations":["1769:15:6","1785:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"1769:31:6"},"referencedDeclaration":370,"src":"1769:31:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"takeswap","nameLocation":"1850:8:6","nodeType":"VariableDeclaration","scope":1162,"src":"1815:43:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TakeSwapMsg_$422_memory_ptr","typeString":"struct IAtomicSwapBase.TakeSwapMsg"},"typeName":{"id":1107,"nodeType":"UserDefinedTypeName","pathNode":{"id":1106,"name":"IAtomicSwapBase.TakeSwapMsg","nameLocations":["1815:15:6","1831:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":422,"src":"1815:27:6"},"referencedDeclaration":422,"src":"1815:27:6","typeDescriptions":{"typeIdentifier":"t_struct$_TakeSwapMsg_$422_storage_ptr","typeString":"struct IAtomicSwapBase.TakeSwapMsg"}},"visibility":"internal"}],"src":"1768:91:6"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"1874:0:6"},"scope":1280,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1182,"nodeType":"FunctionDefinition","src":"2522:210:6","nodes":[],"body":{"id":1181,"nodeType":"Block","src":"2611:121:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1169,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"2625:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:5:6","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":349,"src":"2625:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2640:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2644:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2640:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2625:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"2621:105:6","trueBody":{"id":1179,"nodeType":"Block","src":"2652:74:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1174,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"2673:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2689:24:6","memberName":"UnauthorizedCancelAction","nodeType":"MemberAccess","referencedDeclaration":486,"src":"2673:40:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2673:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"RevertStatement","src":"2666:49:6"}]}}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"2295:222:6","text":"@notice Validates the cancellation of a swap.\n @param order The atomic swap order to validate for cancellation.\n @dev Ensures that the order is in the initial state and the sender is authorized to cancel."},"functionSelector":"c3aee15d","implemented":true,"kind":"function","modifiers":[],"name":"validateCancelSwap","nameLocation":"2531:18:6","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"order","nameLocation":"2590:5:6","nodeType":"VariableDeclaration","scope":1182,"src":"2550:45:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"},"typeName":{"id":1165,"nodeType":"UserDefinedTypeName","pathNode":{"id":1164,"name":"IAtomicSwapBase.AtomicSwapOrder","nameLocations":["2550:15:6","2566:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"2550:31:6"},"referencedDeclaration":370,"src":"2550:31:6","typeDescriptions":{"typeIdentifier":"t_struct$_AtomicSwapOrder_$370_storage_ptr","typeString":"struct IAtomicSwapBase.AtomicSwapOrder"}},"visibility":"internal"}],"src":"2549:47:6"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"2611:0:6"},"scope":1280,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1261,"nodeType":"FunctionDefinition","src":"2982:740:6","nodes":[],"body":{"id":1260,"nodeType":"Block","src":"3070:652:6","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1190,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3084:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3093:6:6","memberName":"length","nodeType":"MemberAccess","src":"3084:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3103:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3084:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"3080:95:6","trueBody":{"id":1199,"nodeType":"Block","src":"3106:69:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1194,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"3127:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3143:19:6","memberName":"ZeroReleaseSchedule","nodeType":"MemberAccess","referencedDeclaration":540,"src":"3127:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3127:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"RevertStatement","src":"3120:44:6"}]}},{"assignments":[1202],"declarations":[{"constant":false,"id":1202,"mutability":"mutable","name":"totalPercentage","nameLocation":"3193:15:6","nodeType":"VariableDeclaration","scope":1260,"src":"3185:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1204,"initialValue":{"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3211:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3185:27:6"},{"body":{"id":1237,"nodeType":"Block","src":"3268:227:6","statements":[{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"percentage","nameLocation":"3290:10:6","nodeType":"VariableDeclaration","scope":1237,"src":"3282:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3282:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1222,"initialValue":{"expression":{"baseExpression":{"id":1218,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3303:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1220,"indexExpression":{"id":1219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3312:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3303:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Release_$416_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory"}},"id":1221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3315:10:6","memberName":"percentage","nodeType":"MemberAccess","referencedDeclaration":415,"src":"3303:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3282:43:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3343:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3357:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3343:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"3339:103:6","trueBody":{"id":1231,"nodeType":"Block","src":"3360:82:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1226,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"3385:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3401:24:6","memberName":"InvalidReleasePercentage","nodeType":"MemberAccess","referencedDeclaration":542,"src":"3385:40:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"3378:49:6"}]}},{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1233,"name":"totalPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"3455:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1234,"name":"percentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3474:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3455:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1236,"nodeType":"ExpressionStatement","src":"3455:29:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3242:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1210,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3246:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:6:6","memberName":"length","nodeType":"MemberAccess","src":"3246:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3242:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"initializationExpression":{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"i","nameLocation":"3235:1:6","nodeType":"VariableDeclaration","scope":1238,"src":"3227:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3227:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1208,"initialValue":{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3239:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3227:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3263:3:6","subExpression":{"id":1213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3263:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ExpressionStatement","src":"3263:3:6"},"nodeType":"ForStatement","src":"3222:273:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"totalPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"3509:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3130303030","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3528:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3509:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1248,"nodeType":"IfStatement","src":"3505:102:6","trueBody":{"id":1247,"nodeType":"Block","src":"3535:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1242,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"3556:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:22:6","memberName":"InvalidTotalPercentage","nodeType":"MemberAccess","referencedDeclaration":544,"src":"3556:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"RevertStatement","src":"3549:47:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1249,"name":"releases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3621:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release memory[] memory"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:6:6","memberName":"length","nodeType":"MemberAccess","src":"3621:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"313530","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3639:3:6","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"src":"3621:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"nodeType":"IfStatement","src":"3617:99:6","trueBody":{"id":1258,"nodeType":"Block","src":"3644:72:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1253,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"3665:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAtomicSwapBase_$629_$","typeString":"type(contract IAtomicSwapBase)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3681:22:6","memberName":"OverMaximumReleaseStep","nodeType":"MemberAccess","referencedDeclaration":546,"src":"3665:38:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"RevertStatement","src":"3658:47:6"}]}}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"2738:239:6","text":"@notice Validates vesting parameters for an atomic swap.\n @param releases Array of release schedules for the vesting.\n @dev Ensures the total percentage of releases equals 100% and the number of releases is within limits."},"functionSelector":"33b988f5","implemented":true,"kind":"function","modifiers":[],"name":"validateVestingParams","nameLocation":"2991:21:6","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"releases","nameLocation":"3046:8:6","nodeType":"VariableDeclaration","scope":1261,"src":"3013:41:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_memory_ptr_$dyn_memory_ptr","typeString":"struct IAtomicSwapBase.Release[]"},"typeName":{"baseType":{"id":1185,"nodeType":"UserDefinedTypeName","pathNode":{"id":1184,"name":"IAtomicSwapBase.Release","nameLocations":["3013:15:6","3029:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"3013:23:6"},"referencedDeclaration":416,"src":"3013:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_Release_$416_storage_ptr","typeString":"struct IAtomicSwapBase.Release"}},"id":1186,"nodeType":"ArrayTypeName","src":"3013:25:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Release_$416_storage_$dyn_storage_ptr","typeString":"struct IAtomicSwapBase.Release[]"}},"visibility":"internal"}],"src":"3012:43:6"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"3070:0:6"},"scope":1280,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":1279,"nodeType":"FunctionDefinition","src":"3986:185:6","nodes":[],"body":{"id":1278,"nodeType":"Block","src":"4048:123:6","nodes":[],"statements":[{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"size","nameLocation":"4065:4:6","nodeType":"VariableDeclaration","scope":1278,"src":"4058:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1269,"name":"uint32","nodeType":"ElementaryTypeName","src":"4058:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":1271,"nodeType":"VariableDeclarationStatement","src":"4058:11:6"},{"AST":{"nativeSrc":"4088:50:6","nodeType":"YulBlock","src":"4088:50:6","statements":[{"nativeSrc":"4102:26:6","nodeType":"YulAssignment","src":"4102:26:6","value":{"arguments":[{"name":"_addr","nativeSrc":"4122:5:6","nodeType":"YulIdentifier","src":"4122:5:6"}],"functionName":{"name":"extcodesize","nativeSrc":"4110:11:6","nodeType":"YulIdentifier","src":"4110:11:6"},"nativeSrc":"4110:18:6","nodeType":"YulFunctionCall","src":"4110:18:6"},"variableNames":[{"name":"size","nativeSrc":"4102:4:6","nodeType":"YulIdentifier","src":"4102:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1264,"isOffset":false,"isSlot":false,"src":"4122:5:6","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"4102:4:6","valueSize":1}],"id":1272,"nodeType":"InlineAssembly","src":"4079:59:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"4155:4:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4162:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4155:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4154:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1268,"id":1277,"nodeType":"Return","src":"4147:17:6"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3728:253:6","text":"@notice Determines if an address is a contract\n @dev Checks if the code at the address is non-zero using EIP-1052 extcodehash\n @param _addr The address to be checked\n @return bool True if `account` is a contract, false otherwise"},"functionSelector":"16279055","implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"3995:10:6","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"_addr","nameLocation":"4014:5:6","nodeType":"VariableDeclaration","scope":1279,"src":"4006:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:15:6"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"4042:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1266,"name":"bool","nodeType":"ElementaryTypeName","src":"4042:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4041:6:6"},"scope":1280,"stateMutability":"view","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[],"canonicalName":"AtomicSwapMsgValidator","contractDependencies":[],"contractKind":"library","documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"130:218:6","text":"@title Atomic Swap Message Validator\n @notice Library providing validation functions for various atomic swap messages.\n @dev Used for ensuring the correctness and integrity of data in atomic swap operations."},"fullyImplemented":true,"linearizedBaseContracts":[1280],"name":"AtomicSwapMsgValidator","nameLocation":"356:22:6","scope":1281,"usedErrors":[470,482,486,492,494,518,520,540,542,544,546],"usedEvents":[]}],"license":"MIT"},"id":6}