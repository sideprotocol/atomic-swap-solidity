{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"agreement","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"tuple","internalType":"struct IAtomicSwapBase.PermitSignature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"owner","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))":"a1b996c1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreement\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAtomicSwapBase.PermitSignature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/interfaces/IVaultPermit.sol\":\"IVaultPermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/abstracts/interfaces/IAtomicSwapBase.sol\":{\"keccak256\":\"0xd2aeaf2222e4dfc5f4367eb7e507f05f948dabfd1c79c8513965ddb26eec934e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bb316b840c8881353a889bd3727bf3c63b0f55c0a42dedef91088dcbe8865e58\",\"dweb:/ipfs/QmYBqnCeL1DfS6iHFh6rUutAaXi5heEYstCB3HMQ9Ga3m4\"]},\"contracts/vault/interfaces/IVaultPermit.sol\":{\"keccak256\":\"0x8d01e5c6cff316ccf5380e96b9d4130bfec81895fea5c908bc54664358650a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c1c34afdb91508f30da9f8788e69ca6eeec7b35711d2331c63cbe5d682a477\",\"dweb:/ipfs/QmcAgRtwkipRQGoLvPjYo5aqN7QLhStLrExLoyPEuR2Ksb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"agreement","type":"bytes32"},{"internalType":"struct IAtomicSwapBase.PermitSignature","name":"signature","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"permit"}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"permit(address,address,uint256,bytes32,(uint8,bytes32,bytes32,address,uint256))":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/vault/interfaces/IVaultPermit.sol":"IVaultPermit"},"libraries":{}},"sources":{"contracts/abstracts/interfaces/IAtomicSwapBase.sol":{"keccak256":"0xd2aeaf2222e4dfc5f4367eb7e507f05f948dabfd1c79c8513965ddb26eec934e","urls":["bzz-raw://bb316b840c8881353a889bd3727bf3c63b0f55c0a42dedef91088dcbe8865e58","dweb:/ipfs/QmYBqnCeL1DfS6iHFh6rUutAaXi5heEYstCB3HMQ9Ga3m4"],"license":"UNLICENSED"},"contracts/vault/interfaces/IVaultPermit.sol":{"keccak256":"0x8d01e5c6cff316ccf5380e96b9d4130bfec81895fea5c908bc54664358650a74","urls":["bzz-raw://30c1c34afdb91508f30da9f8788e69ca6eeec7b35711d2331c63cbe5d682a477","dweb:/ipfs/QmcAgRtwkipRQGoLvPjYo5aqN7QLhStLrExLoyPEuR2Ksb"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/vault/interfaces/IVaultPermit.sol","id":2682,"exportedSymbols":{"IAtomicSwapBase":[1046],"IVaultPermit":[2681]},"nodeType":"SourceUnit","src":"32:1434:13","nodes":[{"id":2657,"nodeType":"PragmaDirective","src":"32:24:13","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":2659,"nodeType":"ImportDirective","src":"57:79:13","nodes":[],"absolutePath":"contracts/abstracts/interfaces/IAtomicSwapBase.sol","file":"../../abstracts/interfaces/IAtomicSwapBase.sol","nameLocation":"-1:-1:-1","scope":2682,"sourceUnit":1047,"symbolAliases":[{"foreign":{"id":2658,"name":"IAtomicSwapBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"65:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2681,"nodeType":"ContractDefinition","src":"137:1329:13","nodes":[{"id":2674,"nodeType":"FunctionDefinition","src":"1021:190:13","nodes":[],"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"166:850:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"a1b996c1","implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1030:6:13","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"token","nameLocation":"1054:5:13","nodeType":"VariableDeclaration","scope":2674,"src":"1046:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"spender","nameLocation":"1078:7:13","nodeType":"VariableDeclaration","scope":2674,"src":"1070:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"value","nameLocation":"1103:5:13","nodeType":"VariableDeclaration","scope":2674,"src":"1095:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"agreement","nameLocation":"1126:9:13","nodeType":"VariableDeclaration","scope":2674,"src":"1118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1118:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"signature","nameLocation":"1186:9:13","nodeType":"VariableDeclaration","scope":2674,"src":"1145:50:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$941_calldata_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"IAtomicSwapBase.PermitSignature","nameLocations":["1145:15:13","1161:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":941,"src":"1145:31:13"},"referencedDeclaration":941,"src":"1145:31:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSignature_$941_storage_ptr","typeString":"struct IAtomicSwapBase.PermitSignature"}},"visibility":"internal"}],"src":"1036:165:13"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[],"src":"1210:0:13"},"scope":2681,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2680,"nodeType":"FunctionDefinition","src":"1404:60:13","nodes":[],"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"1218:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"1413:16:13","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"1429:2:13"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2680,"src":"1455:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1455:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1454:9:13"},"scope":2681,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IVaultPermit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2681],"name":"IVaultPermit","nameLocation":"147:12:13","scope":2682,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":13}