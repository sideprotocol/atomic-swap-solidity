{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4D5aF3549F3A58063a03915b8D32c67b74BF02b8",
    "txHash": "0x5cdeb54bb90c40e49f4debbe292ba1cd5662ea65cb821389793744b9188106c8"
  },
  "proxies": [
    {
      "address": "0xe80094180e6586E6725bC1867a427B41ffa4435B",
      "txHash": "0x2967dd8b6e93875495348b4f4dc0049ce675791a30c7c1b15db8255eed32e42a",
      "kind": "transparent"
    },
    {
      "address": "0x615dD1ed6E41F002479B612251A2Ae5f37B08d8A",
      "txHash": "0x098a74e145c0c182f048b3efe67e3a1e4dc35cd215ea97243eb825302d47e54b",
      "kind": "transparent"
    },
    {
      "address": "0xa5f87DEEe786797b8Ea15a645b2785018B407983",
      "txHash": "0xb4da18096cab263907ce3c5c739d20d984e4d81d846124a6970322bb147cdb20",
      "kind": "transparent"
    },
    {
      "address": "0xa2bec45F1A36a84D64046124391a1f70A3Acbf7a",
      "txHash": "0xb8f43a158b0e1cfa737b9f0fc94a9e8005d7dad6f793422f1fdafcb40d7ea3cd",
      "kind": "transparent"
    },
    {
      "address": "0x77bd6080Ad4C99C3293C8561896FF4389aF8f49B",
      "txHash": "0x16ceb9efe283a66a747ddb17fb74c99e56c380899fede5429cfcf64658f2e6d6",
      "kind": "transparent"
    },
    {
      "address": "0xCac0e6ed4318aCFF7D1e2bFc3aDAE7E721b4940D",
      "txHash": "0x2b9101eea88a1b3114be11777413982d207e9b72f522b6a0cfeccb360ff462dd",
      "kind": "transparent"
    },
    {
      "address": "0x9857b2D8e9f34aB1183a655C3b59D74169609C2a",
      "txHash": "0x9ca20f4d17b89bbc70b87c1f3887c65a1dfb2139e1ad7b16237bf4bb8980b62d",
      "kind": "transparent"
    },
    {
      "address": "0xc0b2A513F39f1174634626E46e79C556e50619be",
      "txHash": "0x7b0aeedbec2fb9111ad4eff0d421301e74cc09d184d3ab5b9b125e879b928221",
      "kind": "transparent"
    },
    {
      "address": "0x6572e3Ee36A8ebB3c209FBAB37752731754077FA",
      "txHash": "0x9c50587dacf479692991f8e6dbdbf102e2b4c38236bd0b08fc22fdf59968f8e1",
      "kind": "transparent"
    },
    {
      "address": "0xf7F8535aCb56006A91AB897a6fC6377C7941cD7F",
      "txHash": "0x4cc84fdd40da48eb2ed9c31b2b35c9032f0f1e05dc501f25e495661527a14035",
      "kind": "transparent"
    },
    {
      "address": "0x0F9Ed5d6D1Ca587CC922fD1FB3A6FdBF784c8917",
      "txHash": "0x80825e772cf0a8aacb88adaf7a4293f54776c3361c036e0b5ce70df6c14c1706",
      "kind": "transparent"
    },
    {
      "address": "0x669BA9D3E56A48b42f3178720d733DBAf04a847d",
      "txHash": "0xb88a3d3c24f424da9663e7d4a49c3bcc3dac5fad2333716ed17dd5e29aa30b5a",
      "kind": "transparent"
    },
    {
      "address": "0xF4DEFbAd78558C44F7b4dAc09B1Dd51d5F7222E7",
      "txHash": "0xb2ed4c7a45691a2ecbcf2192b76c4be1cc5d6772cc8915214d05df57ed5a3a04",
      "kind": "transparent"
    },
    {
      "address": "0x4265b7b00531f62007a99785E6fd33E104841662",
      "txHash": "0x468cf4505363077664c650e705a23710b3e5c5135f56565bf2fb472d43ea6138",
      "kind": "transparent"
    },
    {
      "address": "0xda630F2467dB42B0EA114063761A282b1C3F5A06",
      "txHash": "0x85f981a8a5b5bc0eac4d2f1ee2d507f9d1291b3ca0813f192c20c4399c4d06f7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "227e50945266f99d88cf9a133cccd43f2c3a9ad7837b7e62feb7133e4c1bb8e4": {
      "address": "0xCFcee3BA005a489Cc61855D067C26c17Ac613f19",
      "txHash": "0x1b195ebc34d586b600ec73747b20558719be0914eac93838143bb642c20f8963",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)915_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)935_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:20"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)88_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)103_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(BidStatus)919": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)887": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)935_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)935_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)915_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)915_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)887",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)882_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)882_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)935_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)919",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)882_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e58e8d22150f014eb60262c037f41f7f4e8a9d636421ff1f5968156b273d8ca7": {
      "address": "0x29c30B5cDFd7af944Daa304094D466b3C09CBEEA",
      "txHash": "0xd7c51d5476a09ea0456c73f527db8b122f8f0b43eb64cb49f3f461330513d9a4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)4854",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:26"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:27"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:28"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:29"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:249"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/NonblockingLzAppUpgradeable.sol:138"
          },
          {
            "label": "atomicswap",
            "offset": 0,
            "slot": "100",
            "type": "t_contract(IInterchainAtomicSwap)4697",
            "contract": "SideLzAppUpgradable",
            "src": "contracts/interchain_atomicswap/lzApp/SideLzAppUpgradble.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IInterchainAtomicSwap)4697": {
            "label": "contract IInterchainAtomicSwap",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)4854": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "10cbba72277e936657d5d526bb69d2aec26d7f2ef093a6659d1637be5cf7c634": {
      "address": "0xF07Fd8C3434488b6D3AF1810eEd96DB53150336b",
      "txHash": "0x8a3422086cf8800cea06d6d5901f1426bafddfb918f2b03a2cce111ee190f0b3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4709",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4663_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4709": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4651": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4663_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4663_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4651",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "91707473678a22dc97afe58c7aa6f8580fb616570ec25c7c553f695cee2d99a1": {
      "address": "0x5Fc1Ba4D3f64Bc0bf01c5B897CCAD88889D98d7F",
      "txHash": "0xae7b570ef54af9fe79ac57ea2326cc577204f3014e82920130167c2da3a3435f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4757",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4711_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4757": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4699": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4711_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4711_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4699",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "abea9b3cc5a568435e3972185912ae1465a91f703ba0594919eb1c4e7a789ced": {
      "address": "0xa37655FC36ed5a3d1a90d485d04F428Dc0c8009C",
      "txHash": "0xc820ccce4bf4425a214e565b70fdd7787259de864b7ddea47e224fbdfcf7f0ad",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4795",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4795": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4737": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4749_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4737",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c90702629d921f0cd720d059302879991a0b6d3df571621c52bf0fdeb3c8f856": {
      "address": "0x5d70559CdCCced3f344bd9247a347f44F289Da2b",
      "txHash": "0xc1b59fb9ec6adf448b78e2f46e89d6a5f7690ddd2d7c77a9add6b8fa4ae84f10",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4795",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4795": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4737": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4749_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4737",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "68498ac9705104430ac059ed1537e87f4be4b38ee6f2b7be0bc8e24fe3df6b15": {
      "address": "0xc3A76d773b699f462EcAc9D2c81332A47Fc65958",
      "txHash": "0x1a95c600219f168612c5e5d94df49c9c93e9b23d4999841cc56c0f9474420367",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1712_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:16"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)792_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)792_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)792_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1712_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)792_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)1712_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)792_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)1712_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReleasedStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a5b1228e3a25f0c1eda3df1231350a59c6b935ec7cafb6fe262f39a39e268f6d": {
      "address": "0x905D729AFf53d25FB78DEE11E411A7f1F94eA10b",
      "txHash": "0xc5ec80d27a0bb45e2921a2d9da38ed18b397a88e7f50a220608870ea50f79429",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)848_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)894_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)868_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3168",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:34"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)894_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3168": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)853": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)819": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)868_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)894_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)868_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)848_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)848_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)819",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)813_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)813_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)868_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)853",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)813_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)894_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
