{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4D5aF3549F3A58063a03915b8D32c67b74BF02b8",
    "txHash": "0x5cdeb54bb90c40e49f4debbe292ba1cd5662ea65cb821389793744b9188106c8"
  },
  "proxies": [
    {
      "address": "0xe80094180e6586E6725bC1867a427B41ffa4435B",
      "txHash": "0x2967dd8b6e93875495348b4f4dc0049ce675791a30c7c1b15db8255eed32e42a",
      "kind": "transparent"
    },
    {
      "address": "0x615dD1ed6E41F002479B612251A2Ae5f37B08d8A",
      "txHash": "0x098a74e145c0c182f048b3efe67e3a1e4dc35cd215ea97243eb825302d47e54b",
      "kind": "transparent"
    },
    {
      "address": "0xa5f87DEEe786797b8Ea15a645b2785018B407983",
      "txHash": "0xb4da18096cab263907ce3c5c739d20d984e4d81d846124a6970322bb147cdb20",
      "kind": "transparent"
    },
    {
      "address": "0xa2bec45F1A36a84D64046124391a1f70A3Acbf7a",
      "txHash": "0xb8f43a158b0e1cfa737b9f0fc94a9e8005d7dad6f793422f1fdafcb40d7ea3cd",
      "kind": "transparent"
    },
    {
      "address": "0x77bd6080Ad4C99C3293C8561896FF4389aF8f49B",
      "txHash": "0x16ceb9efe283a66a747ddb17fb74c99e56c380899fede5429cfcf64658f2e6d6",
      "kind": "transparent"
    },
    {
      "address": "0xCac0e6ed4318aCFF7D1e2bFc3aDAE7E721b4940D",
      "txHash": "0x2b9101eea88a1b3114be11777413982d207e9b72f522b6a0cfeccb360ff462dd",
      "kind": "transparent"
    },
    {
      "address": "0x9857b2D8e9f34aB1183a655C3b59D74169609C2a",
      "txHash": "0x9ca20f4d17b89bbc70b87c1f3887c65a1dfb2139e1ad7b16237bf4bb8980b62d",
      "kind": "transparent"
    },
    {
      "address": "0xc0b2A513F39f1174634626E46e79C556e50619be",
      "txHash": "0x7b0aeedbec2fb9111ad4eff0d421301e74cc09d184d3ab5b9b125e879b928221",
      "kind": "transparent"
    },
    {
      "address": "0x6572e3Ee36A8ebB3c209FBAB37752731754077FA",
      "txHash": "0x9c50587dacf479692991f8e6dbdbf102e2b4c38236bd0b08fc22fdf59968f8e1",
      "kind": "transparent"
    },
    {
      "address": "0xf7F8535aCb56006A91AB897a6fC6377C7941cD7F",
      "txHash": "0x4cc84fdd40da48eb2ed9c31b2b35c9032f0f1e05dc501f25e495661527a14035",
      "kind": "transparent"
    },
    {
      "address": "0x0F9Ed5d6D1Ca587CC922fD1FB3A6FdBF784c8917",
      "txHash": "0x80825e772cf0a8aacb88adaf7a4293f54776c3361c036e0b5ce70df6c14c1706",
      "kind": "transparent"
    },
    {
      "address": "0x669BA9D3E56A48b42f3178720d733DBAf04a847d",
      "txHash": "0xb88a3d3c24f424da9663e7d4a49c3bcc3dac5fad2333716ed17dd5e29aa30b5a",
      "kind": "transparent"
    },
    {
      "address": "0xF4DEFbAd78558C44F7b4dAc09B1Dd51d5F7222E7",
      "txHash": "0xb2ed4c7a45691a2ecbcf2192b76c4be1cc5d6772cc8915214d05df57ed5a3a04",
      "kind": "transparent"
    },
    {
      "address": "0x4265b7b00531f62007a99785E6fd33E104841662",
      "txHash": "0x468cf4505363077664c650e705a23710b3e5c5135f56565bf2fb472d43ea6138",
      "kind": "transparent"
    },
    {
      "address": "0xda630F2467dB42B0EA114063761A282b1C3F5A06",
      "txHash": "0x85f981a8a5b5bc0eac4d2f1ee2d507f9d1291b3ca0813f192c20c4399c4d06f7",
      "kind": "transparent"
    },
    {
      "address": "0x2BcFbD63D6090A64207F6463dFDE1dd06367e841",
      "txHash": "0x92ac8a5ab31a04db64171640e028d9e1008a46ffce482217e48522036334621f",
      "kind": "transparent"
    },
    {
      "address": "0x84173d2072454eeFC7F07a40b94C376E9eB861e2",
      "txHash": "0x40e9285dcbe1a95c9c1458324d16ee41d036a1a3197f406a5f8c5291743f1573",
      "kind": "transparent"
    },
    {
      "address": "0x62B96cC7438DeC84A8F177b187dCB666461fe01d",
      "txHash": "0xfe7ca38174cea884f3c692c72ce2a7aa866bbf1a68caea86fdf569817bbc5379",
      "kind": "transparent"
    },
    {
      "address": "0xF017851d8ea9e4d52a42f227BCaad349Dc156427",
      "txHash": "0x72f7182b0dc8d76b63d3592ed047ab12e2a44c0950abcb5d6ce9b3fa47f93f4e",
      "kind": "transparent"
    },
    {
      "address": "0xc8a229942099d94Afc08576Dd3dFCfDf9678FB2d",
      "txHash": "0x213554385c8efd75d7745f5400b09b99ee218052b9d4e524b29f1c25e0f29ecd",
      "kind": "transparent"
    },
    {
      "address": "0xb0012d66A4380c15617DD655BF184816b2eefaf8",
      "txHash": "0x3ffc79563bda2c5601ccece2ca2c92998f254ca1110746e4249371f704393456",
      "kind": "transparent"
    },
    {
      "address": "0xdf4841148aF79c48559e938b0BD141f9298aaDeD",
      "txHash": "0xa2921a08cafa155418e1348dd3add39639b2306e144b79a97fb9172e810e19bf",
      "kind": "transparent"
    },
    {
      "address": "0x67Dd620e4FDD67343126813527bF5A587139437b",
      "txHash": "0x1b273b93e21d348e6df8929322ad0ffa680e12c62eaa5c17f26b3b8362a3d1f1",
      "kind": "transparent"
    },
    {
      "address": "0x5ff0f42b8bE677018372527480a6E743b449E8Cd",
      "txHash": "0x4575320e006afb2e7ba2cab311acec9049bff6d3b1862796c8f3fa929cebb1ff",
      "kind": "transparent"
    },
    {
      "address": "0xaA4654Dd6Ed0f0882350c4c18217F1724d5511C0",
      "txHash": "0xf98c4a8449b38e3d4fd204071f1919c9e71af313b28df91259b8438cfb611a1c",
      "kind": "transparent"
    },
    {
      "address": "0x849E0EB57a29fCf0C2662Bb05f144a6395617902",
      "txHash": "0xe1386f5d6dbe61c3f810edab2c2e85d04187561d5d2b6e765069b305deb8bac5",
      "kind": "transparent"
    },
    {
      "address": "0x4EfcED2dFD84fa8A62f8dC7862d6Edd4539D4947",
      "txHash": "0x09ac1961b6558cc0ceca472fd5e6fdfee1d982b6647592838a6c2e914bdc9b13",
      "kind": "transparent"
    },
    {
      "address": "0xe69BbEc99b790153f87226D9A85c723c308c5196",
      "txHash": "0xebdb18359c7299a1338bd16950d0ac87d365b5932f1ef0f0336939949f7885ed",
      "kind": "transparent"
    },
    {
      "address": "0x13580A1e5875d4141CeD62dD09E0804113Ebb21A",
      "txHash": "0x1e0e4fdf6cdfea75e79806e6a0ff997fd10373b95a34e16c609f9491561618d0",
      "kind": "transparent"
    },
    {
      "address": "0x4Bb75469cAe4aB00baF45DAeac104E2125f932F6",
      "txHash": "0x4e67902834af4adec6aa6b7c169984bc0f3378e7edf703d950f7dfe65a981c08",
      "kind": "transparent"
    },
    {
      "address": "0x6d1d2754f3570Da7B8e25308840f36Fd344A0A9B",
      "txHash": "0xb4c4a0f7d46f81f02efaff1232775d32d584d464a7510934463ca9a0698510db",
      "kind": "transparent"
    },
    {
      "address": "0x7247965a1Df75446bC957A70e9dA090765ee781A",
      "txHash": "0x905ba6fe863229a75be35c88df4ef3698cb19bdcd44f9a8a91c4a3dc68f5d6f7",
      "kind": "transparent"
    },
    {
      "address": "0x8707B6d15a540B6F3aC65D120d8c637AF6F656dC",
      "txHash": "0x821a78d485307f91bc450bc8214cab8614e30760c1e803bd8ac50746bd56186e",
      "kind": "transparent"
    },
    {
      "address": "0x1404C091bD40B4738594A326b52BaBAd9233c2af",
      "txHash": "0x272ca9ef7f98fbe5477eaa1702deaf70553868e52a068b63518b62b2efb7e846",
      "kind": "transparent"
    },
    {
      "address": "0x6550b42A045c149DCF5695Ae55Bd2Ac4c231a9a6",
      "txHash": "0x2aa3dfaa014c89d7034ca1876733b9960f570b951067f796e6832440076b7ee2",
      "kind": "transparent"
    },
    {
      "address": "0xE8198b0474E8800fDa541a582F2c9dFd4a4Cdcb1",
      "txHash": "0x936a4c81474a4b2eca7d256cd4beaa1d1a1f5fc64df539c9f36757760317a6a7",
      "kind": "transparent"
    },
    {
      "address": "0xd16f34a87feA7588420D3f9e8bf83D6B9Dd10A0E",
      "txHash": "0x7bae9303d20a6770d234c819b217e034e7c237e1ec2174f52b11a2dca352308d",
      "kind": "transparent"
    },
    {
      "address": "0xc117009c5C358980240caA7a8FDA415f7d33D5Df",
      "txHash": "0x44bd544b1a7653284a2fddde5e5a8429468d017b02382d5c3ff5c04db111fcdc",
      "kind": "transparent"
    },
    {
      "address": "0x8d88D09E18497942958b8423cB9504E0D2DAC262",
      "txHash": "0xc4b10338c3f93583041fe943e98d55e7ba8f0f4122810980cd170f42da8b7642",
      "kind": "transparent"
    },
    {
      "address": "0xB5450037023610851E90EA1F0332EDfE9dF4Ca1E",
      "txHash": "0x3dba0ef9d2e326d6b5149f9aa7a7f96a3ea11a792fdedf597179a212e7198303",
      "kind": "transparent"
    },
    {
      "address": "0x6F0Cd33E7B553B17FE6b789252D739aCD29a7BB1",
      "txHash": "0x5cd7c8ad4dfff49389ed7ff3287a1f6a04a5b0410508d69c9214b4a591e01d91",
      "kind": "transparent"
    },
    {
      "address": "0xFeE153F0BD80B19D8cc6E243E0D733FDCC7CF896",
      "txHash": "0x62e99d6bdaa3c25962662eb82600881fc8a2c25bccf9e8c3ec4533ae5cbd0918",
      "kind": "transparent"
    },
    {
      "address": "0xde17a35eB6ee53C1050E9B1510065Bd9c55f8d70",
      "txHash": "0xa54ab136746c414ffc3a049c3cdacc78316dfd3102f819fb6ab8c0cc75560f00",
      "kind": "transparent"
    },
    {
      "address": "0x09157ABFd3fF564BaA8CEDDb1aFAC7e560E52E56",
      "txHash": "0xeeb58d6c81b9e11a2c5196664caf8afee78060fc50eaadc7faa9ff9c7ba867f6",
      "kind": "transparent"
    },
    {
      "address": "0xdea2B2ad0464f04A0Bbc9cf1B3D84228Ed42462b",
      "txHash": "0xe64b97303f5625843a8514edf4ab99814c3c56224a73a8d5c81ee7b50cbbe97c",
      "kind": "transparent"
    },
    {
      "address": "0x83348a0065c245962B45730F7D6aD45CAcd71a20",
      "txHash": "0xcf160d91c2ba8a93c20183be442e88137472bf66d2c8d2a570f8416688419bd5",
      "kind": "transparent"
    },
    {
      "address": "0x8fE4F0d65038CA86a830a1602F8915CDd330e6b1",
      "txHash": "0x13a5d91d4245798a4168c12a583851221b243c316d669d8cc303a646b6d6fa9a",
      "kind": "transparent"
    },
    {
      "address": "0xD4a15b6401a55a55220D0De77727dbF00b606619",
      "txHash": "0xb1b4491914887572d2b97de705b0b6bde6b18809ba0d7a7085172d599b2df37e",
      "kind": "transparent"
    },
    {
      "address": "0x913963B9E2eF7372a74F43eCee0971d85608A8Ec",
      "txHash": "0x02f7daccbf3072cf294d97d502754b849c15ddc437e9b8a2c4a8683a69376cb0",
      "kind": "transparent"
    },
    {
      "address": "0xCcCDC57089ffdB0988342ED87d216f5a75E38815",
      "txHash": "0x5445db24a8d79a01fa9f841316c2f08da2d855f8b2a22d0e5785f33ff3d798fe",
      "kind": "transparent"
    },
    {
      "address": "0x0307AC4d0329D85B523a33af14D931F83e3d6917",
      "txHash": "0x85278d6b606e32d8022b5e05586d9bd2128f82f6e4bd9e14c876eb8bb4cc824d",
      "kind": "transparent"
    },
    {
      "address": "0xaE98c5D54b25dFbCA95C9E92b3359eF69476E853",
      "txHash": "0x97c06c53839b4241f8eb042c5b03f356b9b20ffa8c67ca7d7f672dff8d9dec6e",
      "kind": "transparent"
    },
    {
      "address": "0xd02E3C220A96c4EEA604542D65A2d9399Eeda8F3",
      "txHash": "0x67226c461952514a865b2956493e14e9ce8c247bf8ce410775284088ec86fce5",
      "kind": "transparent"
    },
    {
      "address": "0xB061141Fb78874720B2796d5620D8B72cffa227F",
      "txHash": "0x6342734076e81a2656a88be35829c09bc11f0bcf751bdb071953014246a17190",
      "kind": "transparent"
    }
  ],
  "impls": {
    "227e50945266f99d88cf9a133cccd43f2c3a9ad7837b7e62feb7133e4c1bb8e4": {
      "address": "0xCFcee3BA005a489Cc61855D067C26c17Ac613f19",
      "txHash": "0x1b195ebc34d586b600ec73747b20558719be0914eac93838143bb642c20f8963",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)915_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)935_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:20"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)88_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)103_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(BidStatus)919": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)887": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)935_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)935_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)915_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)915_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)887",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)882_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)882_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)935_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)919",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)882_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e58e8d22150f014eb60262c037f41f7f4e8a9d636421ff1f5968156b273d8ca7": {
      "address": "0x29c30B5cDFd7af944Daa304094D466b3C09CBEEA",
      "txHash": "0xd7c51d5476a09ea0456c73f527db8b122f8f0b43eb64cb49f3f461330513d9a4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)4854",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:26"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:27"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:28"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:29"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/LzAppUpgradeable.sol:249"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/NonblockingLzAppUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/interchain_atomicswap/lzApp/NonblockingLzAppUpgradeable.sol:138"
          },
          {
            "label": "atomicswap",
            "offset": 0,
            "slot": "100",
            "type": "t_contract(IInterchainAtomicSwap)4697",
            "contract": "SideLzAppUpgradable",
            "src": "contracts/interchain_atomicswap/lzApp/SideLzAppUpgradble.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IInterchainAtomicSwap)4697": {
            "label": "contract IInterchainAtomicSwap",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)4854": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "10cbba72277e936657d5d526bb69d2aec26d7f2ef093a6659d1637be5cf7c634": {
      "address": "0xF07Fd8C3434488b6D3AF1810eEd96DB53150336b",
      "txHash": "0x8a3422086cf8800cea06d6d5901f1426bafddfb918f2b03a2cce111ee190f0b3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4709",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4663_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4709": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4651": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4663_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4663_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4651",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "91707473678a22dc97afe58c7aa6f8580fb616570ec25c7c553f695cee2d99a1": {
      "address": "0x5Fc1Ba4D3f64Bc0bf01c5B897CCAD88889D98d7F",
      "txHash": "0xae7b570ef54af9fe79ac57ea2326cc577204f3014e82920130167c2da3a3435f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4757",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4711_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4757": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4699": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4711_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4711_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4699",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "abea9b3cc5a568435e3972185912ae1465a91f703ba0594919eb1c4e7a789ced": {
      "address": "0xa37655FC36ed5a3d1a90d485d04F428Dc0c8009C",
      "txHash": "0xc820ccce4bf4425a214e565b70fdd7787259de864b7ddea47e224fbdfcf7f0ad",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4795",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4795": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4737": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4749_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4737",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c90702629d921f0cd720d059302879991a0b6d3df571621c52bf0fdeb3c8f856": {
      "address": "0x5d70559CdCCced3f344bd9247a347f44F289Da2b",
      "txHash": "0xc1b59fb9ec6adf448b78e2f46e89d6a5f7690ddd2d7c77a9add6b8fa4ae84f10",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:13"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:14"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:17"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:23"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISideLzAppUpgradable)4795",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:16"
          },
          {
            "label": "swapOrderITCParams",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:17"
          },
          {
            "label": "chainID",
            "offset": 0,
            "slot": "8",
            "type": "t_uint16",
            "contract": "InterchainAtomicSwap",
            "src": "contracts/interchain_atomicswap/InterchainAtomicSwap.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISideLzAppUpgradable)4795": {
            "label": "contract ISideLzAppUpgradable",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1505": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1473": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Side)4737": {
            "label": "enum IInterchainAtomicSwap.Side",
            "members": [
              "REMOTE",
              "NATIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1521_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1521_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ASITCParams)4749_storage)": {
            "label": "mapping(bytes32 => struct IInterchainAtomicSwap.ASITCParams)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1501_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(ASITCParams)4749_storage": {
            "label": "struct IInterchainAtomicSwap.ASITCParams",
            "members": [
              {
                "label": "side",
                "type": "t_enum(Side)4737",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "makerReceiver",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "takerReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "srcChainID",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dstChainID",
                "type": "t_uint16",
                "offset": 22,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AtomicSwapOrder)1501_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1473",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1468_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1521_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1505",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)1468_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "68498ac9705104430ac059ed1537e87f4be4b38ee6f2b7be0bc8e24fe3df6b15": {
      "address": "0xc3A76d773b699f462EcAc9D2c81332A47Fc65958",
      "txHash": "0x1a95c600219f168612c5e5d94df49c9c93e9b23d4999841cc56c0f9474420367",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1712_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:16"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)792_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)792_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)792_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1712_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)792_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)1712_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)792_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)1712_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReleasedStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a5b1228e3a25f0c1eda3df1231350a59c6b935ec7cafb6fe262f39a39e268f6d": {
      "address": "0x905D729AFf53d25FB78DEE11E411A7f1F94eA10b",
      "txHash": "0xc5ec80d27a0bb45e2921a2d9da38ed18b397a88e7f50a220608870ea50f79429",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)848_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)894_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)868_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3168",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:34"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)894_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3168": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)853": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)819": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)868_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)894_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)868_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)848_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)848_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)819",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)813_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)813_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)868_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)853",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)813_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)894_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5e2939bf1b06be3c89619a06054a2deeade950f103167db04923d287fcbf172f": {
      "address": "0x7015283E86706594e0Ea1acc7390F90DBfFE3952",
      "txHash": "0xb21e0b0a2936b3f1d148fde0008092e26e31ef13904d4063c404b9e58eae7634",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)2025_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:18"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)952_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)952_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)952_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)2025_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)952_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)2025_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)952_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)2025_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReleasedStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b4f6649f28a15845d081977c41245cbb2c0168d5c8e2055656b2305f223c3e4c": {
      "address": "0x5453926703E3EaAFB10319f507Cc593fE819ebc0",
      "txHash": "0xa5654e0867a49bad0ee684d4d07c3907f8e13ea24a51d846be9021af8b606f2f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1008_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1054_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1028_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3142",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:34"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1054_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3142": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1013": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)979": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1028_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1054_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1028_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1008_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1008_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)979",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)973_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)973_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1028_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1013",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)973_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1054_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "dc6961f2db03a7a98bd690f99503434e5fc79c4643df531869f738312bebeb26": {
      "address": "0x19F752615bF8546f98176C373CFC16bEb9d03CA8",
      "txHash": "0xff0e07698c0d9b1531f094c457b941cb6c1db89cf01eb66a9b817a4fdb4e9115",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1965_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:18"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)874_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1965_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)1965_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)874_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)1965_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReleasedStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "89e6a18c035342ebca5ff04728794c4e9a8107afff2ba520bf1649b2908d6a25": {
      "address": "0xfc1cD78759a1238e5782106d11D0620e733FDa20",
      "txHash": "0xf387a321f434814d35091f087b78e983718a2bb8358400eb6013fbf725c133db",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1008_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1054_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1028_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3160",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:34"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1054_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3160": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1013": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)979": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1028_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1054_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1028_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1008_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1008_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)979",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)973_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)973_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1028_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1013",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)973_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1054_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "661ad30d365d02e4e0bac7498716e97dde60075ac1b0687d9243361fadd4d130": {
      "address": "0x395972315c93710f759097d6696b229F7B07caF5",
      "txHash": "0x97858daadfbfe3e86e7e1529f4cd9b3eca13e168205211bf489707979e1f5051",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "admins",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:16"
          },
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1978_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:18"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)874_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1978_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)1978_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)874_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)1978_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReleasedStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e62c125a9b36ec248bcc02764dacf190e1dea779c88051e72c1938efb6321a49": {
      "address": "0xD52c1fCAf34B9832242130021cb55D5541F1B117",
      "txHash": "0xfd7aa0023f2068a3e7938424f3649d5912237bca63659cd8497aad8ce0b4a254",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "admins",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:16"
          },
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1978_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:18"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)874_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)1978_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)874_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)1978_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)874_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)1978_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastReleasedStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5ba2585acef541ce51ecbc19490fdad73cb58213d6c48de5c3a862d8695713f8": {
      "address": "0x6ABD422544c9B61761D07019798cDFaB7ECfF3eF",
      "txHash": "0x39022d77c523824db2f8bae4325bd8a8e3ff251cbf74ff3104cad7b2e2f7b562",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1008_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1054_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1028_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3128",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:34"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)79_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1054_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3128": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1013": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)979": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1028_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1054_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1028_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1008_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1008_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)979",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)973_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)973_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1028_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1013",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)973_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1054_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2cbb48863134e645ea4064ad0ae232fd181f49b94f66f73eb04281d7bb528646": {
      "address": "0xF7eA9f900c6EBe8844f0F777d460aedeC422b031",
      "txHash": "0x75cd70f5ead7b29adb25fe0fd50bfa0d13d45ae2be5ad994383126655af4c922",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)2526_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:15"
          },
          {
            "label": "releaseInfos",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)1568_storage)dyn_storage))",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)32_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)47_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)85_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)116_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1568_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_struct(Release)1568_storage)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IAtomicSwapBase.Release[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(VestingSchedule)2526_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct IVesting.VestingSchedule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1568_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(VestingSchedule)2526_storage)": {
            "label": "mapping(bytes32 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)1568_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)2526_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nextReleaseStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c3b0ed3848b5045be00fa384ae2d02b00b8301b4506777e4ad5ee624a289f4a6": {
      "address": "0xDcdB33a1b6Ddaf543618F46Cf1e53cEDB2222764",
      "txHash": "0xcba3281cf0211aa6053eaebd14ba4342bf0167dbc5b22165345bc7b67047d4f2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1702_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1748_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1722_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IVesting)3887",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:24"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:27"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:30"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:33"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)32_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)47_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)85_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)116_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1748_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3887": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1707": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1673": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1722_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1748_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1722_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1702_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1702_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1673",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1667_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1667_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1722_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1707",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)1667_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1748_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1ea4db5f49a414887e3a6ef1dc47eb57174869b6dc5916e82078857d66d7ea0b": {
      "address": "0x5CdAD7EFF563FfcDF49c74BF29b4168837BfF1ec",
      "txHash": "0x871c02ef16ec1f05bd41ea0bbd99a451793992ff897471c91105bb59a9f0e2ec",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "_baseURL",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:16"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VestingSchedule)5465_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:21"
          },
          {
            "label": "releaseInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_array(t_struct(Release)4414_storage)dyn_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)392_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)4414_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Release)4414_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)5465_storage)": {
            "label": "mapping(uint256 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)4414_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)5465_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nextReleaseStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a1bc4391a9f7eaae293b5fd507af2b52c7d997cbc3316d3371b844dd9b27ab61": {
      "address": "0xb48c3B4A06AE906C1f32458c69E7444e0f2e3F60",
      "txHash": "0x20755b7f38eadeb973943a031314a8d2b64d1d7ccdf4c2bf86509a5e01e4c8ea",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1703_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1749_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1723_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IVesting)3880",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:24"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:27"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:30"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:33"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)163_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)224_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1749_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3880": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)1708": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)1674": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)1723_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1749_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)1723_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1703_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1703_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1674",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1668_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1668_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)1723_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)1708",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)1668_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1749_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ee8e61d798db987d66ac50d72f464259b408ba0f8d6e6b374b758a5e6ab77b3a": {
      "address": "0x00dd7f27fE904D154ba483b05588b7B1094Ce077",
      "txHash": "0x6601a6a23fab9f6cbe274e5e3c803f68662a702b292313f79b9ae15424fe89d7",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "_baseURL",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:16"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VestingSchedule)5465_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:21"
          },
          {
            "label": "releaseInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_array(t_struct(Release)4414_storage)dyn_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)392_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)4414_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Release)4414_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)5465_storage)": {
            "label": "mapping(uint256 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)4414_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)5465_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nextReleaseStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1a08871e99a4906e1ac4f25f95d024551b6c9b4010aec19f6b22a2d35b6cd9b6": {
      "address": "0x2Da6FCC57e2Fb08f27537be9CF6c31135EAfE3CE",
      "txHash": "0x3536154cfcb75bdd9df5011b8595fb47ff0aeeaac8bcddd66475751e777ce171",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)5112_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)5158_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)5132_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IVesting)7838",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:24"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:27"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:30"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:33"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)392_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)5158_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)7838": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(BidStatus)5117": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)5083": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)5132_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)5158_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)5132_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)5112_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)5112_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)5083",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)5077_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)5077_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)5132_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)5117",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Coin)5077_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)5158_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "decb67dadd6eab93dd18669fc8e355ac9f86d23f93d6900c8750b725208f0871": {
      "address": "0xa4aCF8b9F6036C34A6D162507120C40C3aCEB922",
      "txHash": "0x9b2f95360c2ca411286248145771762fe50a10475a05f4d80cc50359ad7befb8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "_baseURL",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:17"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VestingSchedule)5494_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:22"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:27"
          },
          {
            "label": "vestingIds",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:31"
          },
          {
            "label": "releaseInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_struct(Release)4414_storage)dyn_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)392_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)4414_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Release)4414_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)5494_storage)": {
            "label": "mapping(uint256 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)4414_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)5494_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nextReleaseStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "152e04a18507173dce6591cff252b2e8c92af7d8cc8c6ca0ce339bd0c504a98a": {
      "address": "0xd81A3565286d8CBE09587bcEa12C830aA0424D26",
      "txHash": "0x48fc9efa4f21c4f10c43d2838fb4e84668b1348826041f654800c8e1ef462a5c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Vault",
            "src": "contracts/abstracts/Vault.sol:9"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "contract": "Vault",
            "src": "contracts/abstracts/Vault.sol:10"
          },
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "_agreements",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Bytes32Set)5577_storage",
            "contract": "VaultPermit",
            "src": "contracts/vault/VaultPermit.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)444_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Set)5577_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5383_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5383_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "956dd78c4986b170417bba80c971afa43393b069cb79569103ef71b316aefb84": {
      "address": "0x4B6cC948BdF0004b8d01DD721bE8bE3C218cA118",
      "txHash": "0x401262ec6ec44efbb5166f77060f570641ac438435a10666344f85d71c5ec359",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "_baseURL",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:19"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VestingSchedule)9394_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:24"
          },
          {
            "label": "_lastTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:29"
          },
          {
            "label": "vestingIds",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:33"
          },
          {
            "label": "releaseInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_struct(Release)7075_storage)dyn_storage)",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:37"
          },
          {
            "label": "_vault",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "Vesting",
            "src": "contracts/vesting/Vesting.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)392_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)7075_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Release)7075_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)9394_storage)": {
            "label": "mapping(uint256 => struct IVesting.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(Release)7075_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedule)9394_storage": {
            "label": "struct IVesting.VestingSchedule",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "amountReleased",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nextReleaseStep",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isWithdraw",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "719d212530a9afa8742af888562242d65915fa8a527023c156a8d0fbd7955804": {
      "address": "0xfbc23CE8a418cA887fd0E039EcF145bcD9ed28c7",
      "txHash": "0xfdceab14a88f3e60c4f6f0b255d8ec22e775763b626cb168e069c52a5ff95150",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)7069_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)7075_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)9457",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)331_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)392_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)7075_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)9457": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)7040": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)7075_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)7069_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)7069_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)7040",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)7034_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)7034_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Coin)7034_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)7075_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "68f2dba9a1d63f4953333b9097e2fc752cfaec6a96ac6da8d43bd8c06a93e7bc": {
      "address": "0x39B7fae52697247D0afBA46b4BcbeC6F475607a3",
      "txHash": "0xf90cb2368345e0a8e0d37a6e1626ed3bc80d7e5995a284a41b1e377d8617ae8a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3070",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)163_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)224_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1487_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3070": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)1452": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1481_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1452",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Coin)1446_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1487_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7de697f90d77ba3e0cf9cf271ea77c405e7698ab328b42b8dddee466b48dc4a6": {
      "address": "0xdE5487C4972C6Bf1fF447F9231E8e906632389e1",
      "txHash": "0xc5685b37320fd0a82c4c01f3051e790d1eedd46bff4c673cadc3629536757325",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3070",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)163_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)224_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1487_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3070": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)1452": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1481_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1452",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Coin)1446_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1487_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "29426c46d411d346585c7927c15de4dcdf8d4248d48d2462515dec07947c25da": {
      "address": "0x129Ad8E7d863A13adC3C893F234E2fb7f7Aa23A9",
      "txHash": "0x3a2d3d034fd0214ac205ce855176bed90ea989010415bab1f16250a370e344e2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3068",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)163_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)224_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1487_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3068": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)1452": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1481_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1452",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Coin)1446_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1487_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3cfe250b0eb0a926234a1229b744797c4d61b860796856ca8659c2f911bf1cdb": {
      "address": "0x157fC9160E5e89984b026B2f86826F7013d7A939",
      "txHash": "0x42aaaabda5c22cfd6fd6a8ab6611f41ba9ac2711d20ac3313eea378453442c00",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Vault",
            "src": "contracts/abstracts/Vault.sol:9"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "contract": "Vault",
            "src": "contracts/abstracts/Vault.sol:10"
          },
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "_agreements",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Bytes32Set)3375_storage",
            "contract": "VaultPermit",
            "src": "contracts/vault/VaultPermit.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)236_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)163_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Set)3375_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3181_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3181_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b837c87d8d18f5cc0d17f39c24d9b6b16c61d184a0463abaa2cd4a8e840599de": {
      "address": "0x67D65FfAF2cdD9095cd0600be58db2cb8fEBD08c",
      "txHash": "0x8aefc11f670c086a1325121b6e6c1cef8b4b93a4887aa07d1801bc7a7cdb4db5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "paginationSize",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "OwnablePausableUpgradeable",
            "src": "contracts/abstracts/OwnablePausableUpgradeable.sol:17"
          },
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "swapOrderVestingParams",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "vestingManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVesting)3068",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:21"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:22"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:28"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)163_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)224_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Release)1487_storage)dyn_storage": {
            "label": "struct IAtomicSwapBase.Release[]",
            "numberOfBytes": "32"
          },
          "t_contract(IVesting)3068": {
            "label": "contract IVesting",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)1452": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_array(t_struct(Release)1487_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.Release[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)1481_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)1481_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)1452",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)1446_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Coin)1446_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Release)1487_storage": {
            "label": "struct IAtomicSwapBase.Release",
            "members": [
              {
                "label": "durationInHours",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
